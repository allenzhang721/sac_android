android.annotation.SuppressLint -> a.a.a:
    java.lang.String[] value() -> a
android.annotation.TargetApi -> a.a.b:
    int value() -> a
com.artifex.mupdf.LinkInfo -> com.artifex.mupdf.LinkInfo:
    int pageNumber -> a
com.artifex.mupdf.MuPDFActivity -> com.artifex.mupdf.MuPDFActivity:
    int TAP_PAGE_MARGIN -> a
    int SEARCH_PROGRESS_DELAY -> b
    com.artifex.mupdf.MuPDFCore core -> c
    java.lang.String mFileName -> d
    com.artifex.mupdf.ReaderView mDocView -> e
    android.view.View mButtonsView -> f
    boolean mButtonsVisible -> g
    android.widget.EditText mPasswordView -> h
    android.widget.TextView mFilenameView -> i
    android.widget.SeekBar mPageSlider -> j
    android.widget.TextView mPageNumberView -> k
    android.widget.ImageButton mSearchButton -> l
    android.widget.ImageButton mCancelButton -> m
    android.widget.ImageButton mOutlineButton -> n
    android.widget.ViewSwitcher mTopBarSwitcher -> o
    boolean mTopBarIsSearch -> p
    android.widget.ImageButton mSearchBack -> q
    android.widget.ImageButton mSearchFwd -> r
    android.widget.EditText mSearchText -> s
    android.os.AsyncTask mSearchTask -> t
    com.artifex.mupdf.SearchTaskResult mSearchTaskResult -> u
    android.app.AlertDialog$Builder mAlertBuilder -> v
    com.artifex.mupdf.MuPDFActivity$LinkState mLinkState -> w
    android.os.Handler mHandler -> x
    com.artifex.mupdf.MuPDFCore openFile(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void requestPassword(android.os.Bundle) -> a
    void createUI(android.os.Bundle) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void showButtons() -> a
    void hideButtons() -> b
    void searchModeOn() -> c
    void searchModeOff() -> d
    void updatePageNumView(int) -> a
    void makeButtonsView() -> e
    void showKeyboard() -> f
    void hideKeyboard() -> g
    void killSearch() -> h
    void search(int) -> b
    com.artifex.mupdf.MuPDFCore access$0(com.artifex.mupdf.MuPDFActivity) -> a
    android.widget.EditText access$1(com.artifex.mupdf.MuPDFActivity) -> b
    com.artifex.mupdf.MuPDFActivity$LinkState access$2(com.artifex.mupdf.MuPDFActivity) -> c
    com.artifex.mupdf.ReaderView access$3(com.artifex.mupdf.MuPDFActivity) -> d
    boolean access$4(com.artifex.mupdf.MuPDFActivity) -> e
    com.artifex.mupdf.SearchTaskResult access$5(com.artifex.mupdf.MuPDFActivity) -> f
    android.widget.TextView access$6(com.artifex.mupdf.MuPDFActivity) -> g
    android.widget.SeekBar access$7(com.artifex.mupdf.MuPDFActivity) -> h
    void access$8(com.artifex.mupdf.MuPDFActivity,com.artifex.mupdf.SearchTaskResult) -> a
    android.widget.ImageButton access$9(com.artifex.mupdf.MuPDFActivity) -> i
    android.widget.ImageButton access$10(com.artifex.mupdf.MuPDFActivity) -> j
    android.widget.ViewSwitcher access$11(com.artifex.mupdf.MuPDFActivity) -> k
    android.widget.EditText access$12(com.artifex.mupdf.MuPDFActivity) -> l
    android.app.AlertDialog$Builder access$13(com.artifex.mupdf.MuPDFActivity) -> m
    android.os.Handler access$14(com.artifex.mupdf.MuPDFActivity) -> n
com.artifex.mupdf.MuPDFActivity$1 -> com.artifex.mupdf.a:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdf.MuPDFActivity$10 -> com.artifex.mupdf.b:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.artifex.mupdf.MuPDFActivity$11 -> com.artifex.mupdf.c:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.artifex.mupdf.MuPDFActivity$12 -> com.artifex.mupdf.d:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.artifex.mupdf.MuPDFActivity$13 -> com.artifex.mupdf.e:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.artifex.mupdf.MuPDFActivity$14 -> com.artifex.mupdf.f:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.artifex.mupdf.MuPDFActivity$15 -> com.artifex.mupdf.g:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.artifex.mupdf.MuPDFActivity$16 -> com.artifex.mupdf.h:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.artifex.mupdf.MuPDFActivity$17 -> com.artifex.mupdf.i:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.artifex.mupdf.MuPDFActivity$18 -> com.artifex.mupdf.j:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    com.artifex.mupdf.ProgressDialogX val$progressDialog -> b
    com.artifex.mupdf.SearchTaskResult doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(com.artifex.mupdf.SearchTaskResult) -> a
    void onCancelled() -> onCancelled
    void onProgressUpdate(java.lang.Integer[]) -> b
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.artifex.mupdf.MuPDFActivity$18$1 -> com.artifex.mupdf.k:
    com.artifex.mupdf.MuPDFActivity$18 this$1 -> a
    com.artifex.mupdf.ProgressDialogX val$progressDialog -> b
    void run() -> run
com.artifex.mupdf.MuPDFActivity$2 -> com.artifex.mupdf.l:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    android.os.Bundle val$savedInstanceState -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdf.MuPDFActivity$3 -> com.artifex.mupdf.m:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.artifex.mupdf.MuPDFActivity$4 -> com.artifex.mupdf.MuPDFActivity$4:
    boolean showButtonsDisabled -> b
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onChildSetup(int,android.view.View) -> a
    void onMoveToChild(int) -> a
    void onSettle(android.view.View) -> a
    void onUnsettle(android.view.View) -> b
com.artifex.mupdf.MuPDFActivity$5 -> com.artifex.mupdf.n:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.artifex.mupdf.MuPDFActivity$6 -> com.artifex.mupdf.o:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.artifex.mupdf.MuPDFActivity$7 -> com.artifex.mupdf.p:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.artifex.mupdf.MuPDFActivity$8 -> com.artifex.mupdf.q:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.artifex.mupdf.MuPDFActivity$9 -> com.artifex.mupdf.r:
    com.artifex.mupdf.MuPDFActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.artifex.mupdf.MuPDFActivity$LinkState -> com.artifex.mupdf.s:
    com.artifex.mupdf.MuPDFActivity$LinkState DEFAULT -> a
    com.artifex.mupdf.MuPDFActivity$LinkState HIGHLIGHT -> b
    com.artifex.mupdf.MuPDFActivity$LinkState INHIBIT -> c
    com.artifex.mupdf.MuPDFActivity$LinkState[] ENUM$VALUES -> d
    com.artifex.mupdf.MuPDFActivity$LinkState[] values() -> values
    com.artifex.mupdf.MuPDFActivity$LinkState valueOf(java.lang.String) -> valueOf
com.artifex.mupdf.MuPDFCore -> com.artifex.mupdf.MuPDFCore:
    int pageNum -> c
    int numPages -> d
    float pageWidth -> a
    float pageHeight -> b
    int openFile(java.lang.String) -> openFile
    int countPagesInternal() -> countPagesInternal
    void gotoPageInternal(int) -> gotoPageInternal
    float getPageWidth() -> getPageWidth
    float getPageHeight() -> getPageHeight
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> drawPage
    android.graphics.RectF[] searchPage(java.lang.String) -> searchPage
    int getPageLink(int,float,float) -> getPageLink
    com.artifex.mupdf.LinkInfo[] getPageLinksInternal(int) -> getPageLinksInternal
    com.artifex.mupdf.OutlineItem[] getOutlineInternal() -> getOutlineInternal
    boolean hasOutlineInternal() -> hasOutlineInternal
    boolean needsPasswordInternal() -> needsPasswordInternal
    boolean authenticatePasswordInternal(java.lang.String) -> authenticatePasswordInternal
    void destroying() -> destroying
    int countPages() -> a
    int countPagesSynchronized() -> f
    void gotoPage(int) -> a
    android.graphics.PointF getPageSize(int) -> b
    void onDestroy() -> b
    void drawPage(int,android.graphics.Bitmap,int,int,int,int,int,int) -> a
    int hitLinkPage(int,float,float) -> a
    com.artifex.mupdf.LinkInfo[] getPageLinks(int) -> c
    android.graphics.RectF[] searchPage(int,java.lang.String) -> a
    boolean hasOutline() -> c
    com.artifex.mupdf.OutlineItem[] getOutline() -> d
    boolean needsPassword() -> e
    boolean authenticatePassword(java.lang.String) -> a
com.artifex.mupdf.MuPDFPageAdapter -> com.artifex.mupdf.t:
    android.content.Context mContext -> a
    com.artifex.mupdf.MuPDFCore mCore -> b
    android.util.SparseArray mPageSizes -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.artifex.mupdf.MuPDFCore access$0(com.artifex.mupdf.MuPDFPageAdapter) -> a
    android.util.SparseArray access$1(com.artifex.mupdf.MuPDFPageAdapter) -> b
com.artifex.mupdf.MuPDFPageAdapter$1 -> com.artifex.mupdf.u:
    com.artifex.mupdf.MuPDFPageAdapter this$0 -> a
    int val$position -> b
    com.artifex.mupdf.MuPDFPageView val$pageView -> c
    android.graphics.PointF doInBackground(java.lang.Void[]) -> a
    void onPostExecute(android.graphics.PointF) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdf.MuPDFPageAdapterNew -> com.artifex.mupdf.v:
    android.content.Context mContext -> a
    com.artifex.mupdf.MuPDFCore mCore -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.artifex.mupdf.MuPDFPageView -> com.artifex.mupdf.MuPDFPageView:
    com.artifex.mupdf.MuPDFCore mCore -> h
    int hitLinkPage(float,float) -> a
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> a
    com.artifex.mupdf.LinkInfo[] getLinkInfo() -> a
com.artifex.mupdf.MuPDFPageViewNew -> com.artifex.mupdf.MuPDFPageViewNew:
    com.artifex.mupdf.MuPDFCore mCore -> h
    int hitLinkPage(float,float) -> a
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> a
    com.artifex.mupdf.LinkInfo[] getLinkInfo() -> a
com.artifex.mupdf.OpaqueImageView -> com.artifex.mupdf.OpaqueImageView:
    boolean isOpaque() -> isOpaque
com.artifex.mupdf.OpaqueImageViewNew -> com.artifex.mupdf.OpaqueImageViewNew:
    boolean isOpaque() -> isOpaque
com.artifex.mupdf.OutlineActivity -> com.artifex.mupdf.OutlineActivity:
    com.artifex.mupdf.OutlineItem[] mItems -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
com.artifex.mupdf.OutlineActivityData -> com.artifex.mupdf.w:
    com.artifex.mupdf.OutlineItem[] items -> a
    int position -> b
    com.artifex.mupdf.OutlineActivityData singleton -> c
    void set(com.artifex.mupdf.OutlineActivityData) -> a
    com.artifex.mupdf.OutlineActivityData get() -> a
com.artifex.mupdf.OutlineAdapter -> com.artifex.mupdf.x:
    com.artifex.mupdf.OutlineItem[] mItems -> a
    android.view.LayoutInflater mInflater -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.artifex.mupdf.OutlineItem -> com.artifex.mupdf.y:
    int level -> a
    java.lang.String title -> b
    int page -> c
com.artifex.mupdf.PageView -> com.artifex.mupdf.PageView:
    int HIGHLIGHT_COLOR -> h
    int LINK_COLOR -> i
    int BACKGROUND_COLOR -> j
    int PROGRESS_DIALOG_DELAY -> k
    android.content.Context mContext -> l
    int mPageNumber -> a
    android.graphics.Point mParentSize -> b
    android.graphics.Point mSize -> c
    float mSourceScale -> d
    android.widget.ImageView mEntire -> m
    android.graphics.Bitmap mEntireBm -> n
    android.os.AsyncTask mDrawEntire -> o
    android.graphics.Point mPatchViewSize -> p
    android.graphics.Rect mPatchArea -> q
    android.widget.ImageView mPatch -> r
    android.os.AsyncTask mDrawPatch -> s
    android.graphics.RectF[] mSearchBoxes -> t
    com.artifex.mupdf.LinkInfo[] mLinks -> u
    android.view.View mSearchView -> v
    boolean mIsBlank -> w
    boolean mUsingHardwareAcceleration -> x
    boolean mHighlightLinks -> y
    android.widget.ProgressBar mBusyIndicator -> e
    android.os.Handler mHandler -> z
    android.graphics.PointF pageSize -> f
    float scale -> g
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> a
    com.artifex.mupdf.LinkInfo[] getLinkInfo() -> a
    void blank(int) -> a
    void setPage(int,android.graphics.PointF) -> a
    void setSearchBoxes(android.graphics.RectF[]) -> a
    void setLinkHighlighting(boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void addHq() -> b
    void removeHq() -> c
    int getPage() -> d
    boolean isOpaque() -> isOpaque
    android.graphics.Bitmap access$0(com.artifex.mupdf.PageView) -> a
    android.widget.ImageView access$1(com.artifex.mupdf.PageView) -> b
    android.content.Context access$2(com.artifex.mupdf.PageView) -> c
    android.os.Handler access$3(com.artifex.mupdf.PageView) -> d
    void access$4(com.artifex.mupdf.PageView,com.artifex.mupdf.LinkInfo[]) -> a
    boolean access$5(com.artifex.mupdf.PageView) -> e
    android.graphics.RectF[] access$6(com.artifex.mupdf.PageView) -> f
    com.artifex.mupdf.LinkInfo[] access$7(com.artifex.mupdf.PageView) -> g
    boolean access$8(com.artifex.mupdf.PageView) -> h
    void access$9(com.artifex.mupdf.PageView,android.graphics.Point) -> a
    void access$10(com.artifex.mupdf.PageView,android.graphics.Rect) -> a
    android.widget.ImageView access$11(com.artifex.mupdf.PageView) -> i
    android.graphics.Rect access$12(com.artifex.mupdf.PageView) -> j
com.artifex.mupdf.PageView$1 -> com.artifex.mupdf.z:
    com.artifex.mupdf.PageView this$0 -> a
    com.artifex.mupdf.LinkInfo[] doInBackground(java.lang.Void[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.artifex.mupdf.LinkInfo[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.artifex.mupdf.PageView access$2(com.artifex.mupdf.PageView$1) -> a
com.artifex.mupdf.PageView$1$1 -> com.artifex.mupdf.aa:
    com.artifex.mupdf.PageView$1 this$1 -> a
    void run() -> run
com.artifex.mupdf.PageView$2 -> com.artifex.mupdf.PageView$2:
    com.artifex.mupdf.PageView this$0 -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.artifex.mupdf.PageView$3 -> com.artifex.mupdf.ab:
    com.artifex.mupdf.PageView this$0 -> a
    com.artifex.mupdf.PatchInfo doInBackground(com.artifex.mupdf.PatchInfo[]) -> a
    void onPostExecute(com.artifex.mupdf.PatchInfo) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdf.PageViewNew -> com.artifex.mupdf.PageViewNew:
    int HIGHLIGHT_COLOR -> h
    int LINK_COLOR -> i
    int BACKGROUND_COLOR -> j
    int PROGRESS_DIALOG_DELAY -> k
    android.content.Context mContext -> l
    int mPageNumber -> a
    android.graphics.Point mParentSize -> b
    android.graphics.Point mSize -> c
    float mSourceScale -> d
    android.widget.ImageView mEntire -> m
    android.graphics.Bitmap mEntireBm -> n
    android.os.AsyncTask mDrawEntire -> o
    android.graphics.Point mPatchViewSize -> p
    android.graphics.Rect mPatchArea -> q
    android.widget.ImageView mPatch -> r
    android.os.AsyncTask mDrawPatch -> s
    android.graphics.RectF[] mSearchBoxes -> t
    com.artifex.mupdf.LinkInfo[] mLinks -> u
    android.view.View mSearchView -> v
    boolean mIsBlank -> w
    boolean mUsingHardwareAcceleration -> x
    boolean mHighlightLinks -> y
    android.widget.ProgressBar mBusyIndicator -> e
    android.os.Handler mHandler -> z
    android.graphics.PointF pageSize -> f
    float scale -> g
    void drawPage(android.graphics.Bitmap,int,int,int,int,int,int) -> a
    com.artifex.mupdf.LinkInfo[] getLinkInfo() -> a
    void blank(int) -> a
    void remveViewIm() -> e
    void setPage(int,android.graphics.PointF) -> a
    void setSearchBoxes(android.graphics.RectF[]) -> a
    void setLinkHighlighting(boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void addHq() -> b
    void removeHq() -> c
    int getPage() -> d
    boolean isOpaque() -> isOpaque
    android.graphics.Bitmap access$0(com.artifex.mupdf.PageViewNew) -> a
    android.widget.ImageView access$1(com.artifex.mupdf.PageViewNew) -> b
    android.content.Context access$2(com.artifex.mupdf.PageViewNew) -> c
    android.os.Handler access$3(com.artifex.mupdf.PageViewNew) -> d
    void access$4(com.artifex.mupdf.PageViewNew) -> e
    void access$5(com.artifex.mupdf.PageViewNew,com.artifex.mupdf.LinkInfo[]) -> a
    boolean access$6(com.artifex.mupdf.PageViewNew) -> f
    android.graphics.RectF[] access$7(com.artifex.mupdf.PageViewNew) -> g
    com.artifex.mupdf.LinkInfo[] access$8(com.artifex.mupdf.PageViewNew) -> h
    boolean access$9(com.artifex.mupdf.PageViewNew) -> i
    void access$10(com.artifex.mupdf.PageViewNew,android.graphics.Point) -> a
    void access$11(com.artifex.mupdf.PageViewNew,android.graphics.Rect) -> a
    android.widget.ImageView access$12(com.artifex.mupdf.PageViewNew) -> j
    android.graphics.Rect access$13(com.artifex.mupdf.PageViewNew) -> k
com.artifex.mupdf.PageViewNew$1 -> com.artifex.mupdf.ac:
    com.artifex.mupdf.PageViewNew this$0 -> a
    com.artifex.mupdf.LinkInfo[] doInBackground(java.lang.Void[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.artifex.mupdf.LinkInfo[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.artifex.mupdf.PageViewNew access$2(com.artifex.mupdf.PageViewNew$1) -> a
com.artifex.mupdf.PageViewNew$1$1 -> com.artifex.mupdf.ad:
    com.artifex.mupdf.PageViewNew$1 this$1 -> a
    void run() -> run
com.artifex.mupdf.PageViewNew$2 -> com.artifex.mupdf.PageViewNew$2:
    com.artifex.mupdf.PageViewNew this$0 -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.artifex.mupdf.PageViewNew$3 -> com.artifex.mupdf.ae:
    com.artifex.mupdf.PageViewNew this$0 -> a
    com.artifex.mupdf.PatchInfoNew doInBackground(com.artifex.mupdf.PatchInfoNew[]) -> a
    void onPostExecute(com.artifex.mupdf.PatchInfoNew) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.artifex.mupdf.PatchInfo -> com.artifex.mupdf.af:
    android.graphics.Bitmap bm -> a
    android.graphics.Point patchViewSize -> b
    android.graphics.Rect patchArea -> c
com.artifex.mupdf.PatchInfoNew -> com.artifex.mupdf.ag:
    android.graphics.Bitmap bm -> a
    android.graphics.Point patchViewSize -> b
    android.graphics.Rect patchArea -> c
com.artifex.mupdf.ProgressDialogX -> com.artifex.mupdf.ah:
    boolean mCancelled -> a
    boolean isCancelled() -> a
    void cancel() -> cancel
com.artifex.mupdf.ReaderView -> com.artifex.mupdf.ReaderView:
    int MOVING_DIAGONALLY -> a
    int MOVING_LEFT -> b
    int MOVING_RIGHT -> c
    int MOVING_UP -> d
    int MOVING_DOWN -> e
    int FLING_MARGIN -> f
    int GAP -> g
    int SCROLL_SPEED -> h
    float MIN_SCALE -> i
    float MAX_SCALE -> j
    android.widget.Adapter mAdapter -> k
    int mCurrent -> l
    boolean mResetLayout -> m
    android.view.View pageView -> n
    java.util.LinkedList mViewCache -> o
    boolean mUserInteracting -> p
    boolean mScaling -> q
    float mScale -> r
    int mXScroll -> s
    int mYScroll -> t
    android.view.GestureDetector mGestureDetector -> u
    android.view.ScaleGestureDetector mScaleGestureDetector -> v
    android.widget.Scroller mScroller -> w
    int mScrollerLastX -> x
    int mScrollerLastY -> y
    boolean mScrollDisabled -> z
    int getDisplayedViewIndex() -> a
    void setDisplayedViewIndex(int) -> b
    void moveToNext() -> b
    void moveToPrevious() -> c
    void resetupChildren() -> d
    void onChildSetup(int,android.view.View) -> a
    void onMoveToChild(int) -> a
    void onSettle(android.view.View) -> a
    void onUnsettle(android.view.View) -> b
    android.view.View getDisplayedView() -> e
    void run() -> run
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.widget.Adapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setSelection(int) -> setSelection
    android.view.View getCached() -> f
    android.view.View getOrCreateChild(int) -> c
    void addAndMeasureChild(int,android.view.View) -> b
    void measureView(android.view.View) -> c
    android.graphics.Rect getScrollBounds(int,int,int,int) -> a
    android.graphics.Rect getScrollBounds(android.view.View) -> d
    android.graphics.Point getCorrection(android.graphics.Rect) -> a
    void postSettle(android.view.View) -> e
    void postUnsettle(android.view.View) -> f
    void slideViewOntoScreen(android.view.View) -> g
    android.graphics.Point subScreenSizeOffset(android.view.View) -> h
    int directionOfTravel(float,float) -> a
    boolean withinBoundsInDirectionOfTravel(android.graphics.Rect,float,float) -> a
com.artifex.mupdf.ReaderView$1 -> com.artifex.mupdf.ai:
    com.artifex.mupdf.ReaderView this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.artifex.mupdf.ReaderView$2 -> com.artifex.mupdf.aj:
    com.artifex.mupdf.ReaderView this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.artifex.mupdf.ReaderViewEnbed -> com.artifex.mupdf.ReaderViewEnbed:
    int MOVING_DIAGONALLY -> a
    int MOVING_LEFT -> b
    int MOVING_RIGHT -> c
    int MOVING_UP -> d
    int MOVING_DOWN -> e
    int FLING_MARGIN -> f
    int GAP -> g
    int SCROLL_SPEED -> h
    float MIN_SCALE -> i
    float MAX_SCALE -> j
    android.widget.Adapter mAdapter -> k
    int mCurrent -> l
    boolean mResetLayout -> m
    android.view.View pageView -> n
    java.util.LinkedList mViewCache -> o
    boolean mUserInteracting -> p
    boolean mScaling -> q
    float mScale -> r
    int mXScroll -> s
    int mYScroll -> t
    com.mouee.android.controller.GestureDetector mGestureDetector -> u
    android.view.ScaleGestureDetector mScaleGestureDetector -> v
    android.widget.Scroller mScroller -> w
    int mScrollerLastX -> x
    int mScrollerLastY -> y
    boolean mScrollDisabled -> z
    com.artifex.mupdf.SearchTaskResult mSearchTaskResult -> A
    com.artifex.mupdf.ReaderViewEnbed$LinkState mLinkState -> B
    android.widget.TextView mFilenameView -> C
    android.widget.SeekBar mPageSlider -> D
    android.widget.TextView mPageNumberView -> E
    int getDisplayedViewIndex() -> a
    void setDisplayedViewIndex(int) -> a
    void moveToNext() -> b
    void moveToPrevious() -> c
    void resetupChildren() -> d
    void onChildSetup(int,android.view.View) -> a
    void onMoveToChild(int) -> b
    void onSettle(android.view.View) -> a
    void onUnsettle(android.view.View) -> b
    android.view.View getDisplayedView() -> e
    void run() -> run
    boolean onDown(android.view.MotionEvent) -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    void onLongPress(android.view.MotionEvent) -> b
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> b
    void onShowPress(android.view.MotionEvent) -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> d
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.widget.Adapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setSelection(int) -> setSelection
    android.view.View getCached() -> f
    android.view.View getOrCreateChild(int) -> c
    void addAndMeasureChild(int,android.view.View) -> b
    void measureView(android.view.View) -> c
    android.graphics.Rect getScrollBounds(int,int,int,int) -> a
    android.graphics.Rect getScrollBounds(android.view.View) -> d
    android.graphics.Point getCorrection(android.graphics.Rect) -> a
    void postSettle(android.view.View) -> e
    void postUnsettle(android.view.View) -> f
    void slideViewOntoScreen(android.view.View) -> g
    android.graphics.Point subScreenSizeOffset(android.view.View) -> h
    int directionOfTravel(float,float) -> a
    boolean withinBoundsInDirectionOfTravel(android.graphics.Rect,float,float) -> a
com.artifex.mupdf.ReaderViewEnbed$1 -> com.artifex.mupdf.ak:
    com.artifex.mupdf.ReaderViewEnbed this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.artifex.mupdf.ReaderViewEnbed$2 -> com.artifex.mupdf.al:
    com.artifex.mupdf.ReaderViewEnbed this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.artifex.mupdf.ReaderViewEnbed$LinkState -> com.artifex.mupdf.am:
    com.artifex.mupdf.ReaderViewEnbed$LinkState DEFAULT -> a
    com.artifex.mupdf.ReaderViewEnbed$LinkState HIGHLIGHT -> b
    com.artifex.mupdf.ReaderViewEnbed$LinkState INHIBIT -> c
    com.artifex.mupdf.ReaderViewEnbed$LinkState[] ENUM$VALUES -> d
    com.artifex.mupdf.ReaderViewEnbed$LinkState[] values() -> values
    com.artifex.mupdf.ReaderViewEnbed$LinkState valueOf(java.lang.String) -> valueOf
com.artifex.mupdf.SearchTaskResult -> com.artifex.mupdf.an:
    int pageNumber -> a
    android.graphics.RectF[] searchBoxes -> b
com.mouee.android.BeginActivity -> com.mouee.android.BeginActivity:
    com.mouee.android.view.ViewPage viewPage -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setMetaData() -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.mouee.android.BeginActivity$MyCount -> com.mouee.android.a:
    com.mouee.android.BeginActivity this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
    com.mouee.android.BeginActivity access$0(com.mouee.android.BeginActivity$MyCount) -> a
com.mouee.android.BeginActivity$MyCount$1 -> com.mouee.android.b:
    com.mouee.android.BeginActivity$MyCount this$1 -> a
    void run() -> run
com.mouee.android.BuildConfig -> com.mouee.android.c:
    boolean DEBUG -> a
com.mouee.android.MoueeActivity -> com.mouee.android.MoueeActivity:
    android.widget.ImageButton galleyViewButton -> n
    android.widget.ImageButton homeButton -> o
    android.widget.ImageButton leftButton -> p
    android.widget.ImageButton rightButton -> q
    com.mouee.android.view.gallary.base.AbstractGalley gallery -> r
    boolean initState -> s
    android.widget.TextView pageTextView -> a
    android.graphics.Bitmap mCurPageBitmap -> b
    android.graphics.Bitmap mNextPageBitmap -> c
    android.graphics.Canvas mCurPageCanvas -> d
    android.graphics.Canvas mNextPageCanvas -> e
    android.widget.RelativeLayout rLayout -> f
    com.mouee.android.view.pageflip.AbstractPageFlipView apf -> g
    android.view.Display disp -> h
    com.mouee.android.book.entity.Book book -> i
    android.app.ProgressDialog progressDialog -> j
    android.widget.PopupWindow operationContainer -> k
    android.widget.TextView tryTextView -> t
    android.view.View bfView -> l
    com.mouee.android.controller.EventDispatcher eventDispatcher -> m
    boolean isShelves -> isShelves
    void addBFView() -> k
    void onCreate(android.os.Bundle) -> onCreate
    void doLoadAndInit() -> a
    boolean doZipRelease() -> l
    void onStart() -> onStart
    void startReadBook() -> m
    void setupScreen() -> b
    void setupViews() -> n
    void setFlipView() -> c
    void setflip(android.widget.RelativeLayout,android.view.ViewGroup$LayoutParams) -> a
    void playBook() -> o
    void playBookChange1() -> p
    void setGolabalBackground(android.view.View) -> a
    void setGalley() -> d
    void removeGalley() -> e
    void setSnapshots() -> f
    void setAD(android.widget.RelativeLayout) -> a
    void setDefaultView() -> g
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void removeFromWindowManager(android.view.View) -> b
    void onStop() -> onStop
    void remember() -> q
    void onResume() -> onResume
    void setMetaData() -> r
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void pause() -> h
    void resume() -> i
    int getRequestedOrientation() -> getRequestedOrientation
    int ScreenOrient(android.app.Activity) -> a
    int getScreenOrientation() -> j
    void onBackPressed() -> onBackPressed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onSdCarsBookStart(java.lang.String) -> onSdCarsBookStart
    void access$0(com.mouee.android.MoueeActivity) -> a
    boolean access$1(com.mouee.android.MoueeActivity) -> b
    android.widget.ImageButton access$2(com.mouee.android.MoueeActivity) -> c
    android.widget.ImageButton access$3(com.mouee.android.MoueeActivity) -> d
    android.widget.ImageButton access$4(com.mouee.android.MoueeActivity) -> e
    android.widget.ImageButton access$5(com.mouee.android.MoueeActivity) -> f
com.mouee.android.MoueeActivity$1 -> com.mouee.android.d:
    com.mouee.android.MoueeActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mouee.android.MoueeActivity$2 -> com.mouee.android.e:
    boolean down -> a
    com.mouee.android.MoueeActivity this$0 -> b
    android.graphics.drawable.Drawable val$dbg1 -> c
    android.graphics.drawable.Drawable val$dbg -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.MoueeActivity$3 -> com.mouee.android.f:
    boolean down -> a
    com.mouee.android.MoueeActivity this$0 -> b
    android.graphics.drawable.Drawable val$dbg1 -> c
    android.graphics.drawable.Drawable val$dbg -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.MoueeActivity$4 -> com.mouee.android.g:
    boolean down -> a
    com.mouee.android.MoueeActivity this$0 -> b
    android.graphics.drawable.Drawable val$dbg1 -> c
    android.graphics.drawable.Drawable val$dbg -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.MoueeActivity$5 -> com.mouee.android.h:
    boolean down -> a
    com.mouee.android.MoueeActivity this$0 -> b
    android.graphics.drawable.Drawable val$dbg1 -> c
    android.graphics.drawable.Drawable val$dbg -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.MoueeActivity$MyCount -> com.mouee.android.i:
    com.mouee.android.MoueeActivity this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.MoueeActivity$StartPageCompleteCallBack -> com.mouee.android.j:
    long mStartTime -> b
    com.mouee.android.MoueeActivity this$0 -> a
    void doAction() -> a
com.mouee.android.MoueeReader -> com.mouee.android.MoueeReader:
    void show(android.content.Context,java.lang.String) -> show
com.mouee.android.PDFPageViewerActivity -> com.mouee.android.PDFPageViewerActivity:
    void onCreate(android.os.Bundle) -> onCreate
    org.vudroid.core.DecodeService createDecodeService() -> createDecodeService
com.mouee.android.PDFViewerActivity -> com.mouee.android.PDFViewerActivity:
    void onCreate(android.os.Bundle) -> onCreate
    org.vudroid.core.DecodeService createDecodeService() -> createDecodeService
com.mouee.android.R -> com.mouee.android.R:
com.mouee.android.R$attr -> com.mouee.android.R$attr:
    int backAlpha -> backAlpha
    int backColor -> backColor
    int backgroundColor -> backgroundColor
    int curlMode -> curlMode
    int curlSpeed -> curlSpeed
    int enableDebugMode -> enableDebugMode
    int initialEdgeOffset -> initialEdgeOffset
    int keywords -> keywords
    int primaryTextColor -> primaryTextColor
    int refreshInterval -> refreshInterval
    int spots -> spots
    int titleColor -> titleColor
    int updateRate -> updateRate
com.mouee.android.R$color -> com.mouee.android.R$color:
    int all_black -> all_black
    int all_white -> all_white
    int bar -> bar
    int canvas -> canvas
    int listbg -> listbg
    int listselect -> listselect
com.mouee.android.R$drawable -> com.mouee.android.R$drawable:
    int arrowup -> arrowup
    int audio_play -> audio_play
    int audio_stop -> audio_stop
    int black -> black
    int blue -> blue
    int book -> book
    int btngarally -> btngarally
    int busy -> busy
    int camer_b -> camer_b
    int camer_f -> camer_f
    int center -> center
    int darkdenim3 -> darkdenim3
    int defaultbackground -> defaultbackground
    int folderopen -> folderopen
    int home -> home
    int ic_arrow_left -> ic_arrow_left
    int ic_arrow_right -> ic_arrow_right
    int ic_cancel -> ic_cancel
    int ic_hl_link -> ic_hl_link
    int ic_launcher -> ic_launcher
    int ic_link -> ic_link
    int ic_list -> ic_list
    int ic_magnifying_glass -> ic_magnifying_glass
    int ic_nolink -> ic_nolink
    int icon -> icon
    int ios_media_pause -> ios_media_pause
    int ios_media_play -> ios_media_play
    int ios_media_zoomout -> ios_media_zoomout
    int left -> left
    int media_control_bg -> media_control_bg
    int media_player_seekbar_selector -> media_player_seekbar_selector
    int page_num -> page_num
    int player_seekbar_thumbnail -> player_seekbar_thumbnail
    int right -> right
    int scan_disable -> scan_disable
    int scan_enable -> scan_enable
    int serifs -> serifs
    int skip -> skip
    int slider -> slider
    int tbp -> tbp
    int tiled_background -> tiled_background
    int transparent -> transparent
    int white -> white
com.mouee.android.R$id -> com.mouee.android.R$id:
    int Dynamic -> Dynamic
    int Simple -> Simple
    int back -> back
    int backnew -> backnew
    int browserItemIcon -> browserItemIcon
    int browserItemText -> browserItemText
    int browserTabHost -> browserTabHost
    int btn_next -> btn_next
    int btn_nextnew -> btn_nextnew
    int btn_prev -> btn_prev
    int btn_prevnew -> btn_prevnew
    int cancel -> cancel
    int docNameText -> docNameText
    int gallery1 -> gallery1
    int goToButton -> goToButton
    int gotopage -> gotopage
    int imageButton1 -> imageButton1
    int lowerButtons -> lowerButtons
    int mediaplayer_btnAction -> mediaplayer_btnAction
    int mediaplayer_leftText -> mediaplayer_leftText
    int mediaplayer_rightText -> mediaplayer_rightText
    int mediaplayer_seekBar -> mediaplayer_seekBar
    int outlineButton -> outlineButton
    int page -> page
    int pageNumber -> pageNumber
    int pageNumberTextEdit -> pageNumberTextEdit
    int pageSlider -> pageSlider
    int pagenumber -> pagenumber
    int pdf_toolbar -> pdf_toolbar
    int pdf_toolbarnew -> pdf_toolbarnew
    int pdf_view -> pdf_view
    int pdf_viewnew -> pdf_viewnew
    int relativeLayout1 -> relativeLayout1
    int searchBack -> searchBack
    int searchButton -> searchButton
    int searchForward -> searchForward
    int searchText -> searchText
    int switcher -> switcher
    int testButton -> testButton
    int title -> title
    int topBar -> topBar
    int topBar2 -> topBar2
com.mouee.android.R$layout -> com.mouee.android.R$layout:
    int browser -> browser
    int browseritem -> browseritem
    int buttons -> buttons
    int garallary -> garallary
    int gotopage -> gotopage
    int main -> main
    int medialayout -> medialayout
    int moueebook -> moueebook
    int outline_entry -> outline_entry
    int pdf -> pdf
    int pdfpage -> pdfpage
    int picker_entry -> picker_entry
    int testmask -> testmask
com.mouee.android.R$raw -> com.mouee.android.R$raw:
    int flip -> flip
com.mouee.android.R$string -> com.mouee.android.R$string:
    int app_name -> app_name
    int cancel -> cancel
    int enter_password -> enter_password
    int hello -> hello
    int link_control -> link_control
    int no_media_hint -> no_media_hint
    int no_media_warning -> no_media_warning
    int open_failed -> open_failed
    int outline_title -> outline_title
    int picker_title -> picker_title
    int search_backwards -> search_backwards
    int search_document -> search_document
    int search_forwards -> search_forwards
    int searching_ -> searching_
    int text_not_found -> text_not_found
com.mouee.android.R$styleable -> com.mouee.android.R$styleable:
    int[] AdView -> AdView
    int AdView_backAlpha -> AdView_backAlpha
    int AdView_backColor -> AdView_backColor
    int AdView_titleColor -> AdView_titleColor
    int[] Gallery1 -> Gallery1
    int Gallery1_android_galleryItemBackground -> Gallery1_android_galleryItemBackground
    int[] PageCurlView -> PageCurlView
    int PageCurlView_curlMode -> PageCurlView_curlMode
    int PageCurlView_curlSpeed -> PageCurlView_curlSpeed
    int PageCurlView_enableDebugMode -> PageCurlView_enableDebugMode
    int PageCurlView_initialEdgeOffset -> PageCurlView_initialEdgeOffset
    int PageCurlView_updateRate -> PageCurlView_updateRate
    int[] TogglePrefAttrs -> TogglePrefAttrs
    int TogglePrefAttrs_android_preferenceLayoutChild -> TogglePrefAttrs_android_preferenceLayoutChild
    int[] cn_domob_android_ads_DomobAdView -> cn_domob_android_ads_DomobAdView
    int cn_domob_android_ads_DomobAdView_backgroundColor -> cn_domob_android_ads_DomobAdView_backgroundColor
    int cn_domob_android_ads_DomobAdView_keywords -> cn_domob_android_ads_DomobAdView_keywords
    int cn_domob_android_ads_DomobAdView_primaryTextColor -> cn_domob_android_ads_DomobAdView_primaryTextColor
    int cn_domob_android_ads_DomobAdView_refreshInterval -> cn_domob_android_ads_DomobAdView_refreshInterval
    int cn_domob_android_ads_DomobAdView_spots -> cn_domob_android_ads_DomobAdView_spots
com.mouee.android.animation.AbstractAnimator -> com.mouee.android.a.a:
    void playAnimation(android.view.View) -> a
com.mouee.android.animation.AnimationExcutor -> com.mouee.android.a.b:
    void playAnimation(java.util.ArrayList,android.view.View,int,int) -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.mouee.android.animation.AnimationExcutor$MyCount1 -> com.mouee.android.a.c:
    android.view.View view -> a
    android.view.animation.AnimationSet animationset -> b
    com.mouee.android.animation.AnimationExcutor this$0 -> c
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.animation.AnimationLoader -> com.mouee.android.a.d:
    java.lang.String ANIMATION_WIPEIN -> a
    java.lang.String ANIMATION_WIPEOUT -> b
    java.lang.String ANIMATION_SEESAW -> c
    java.lang.String ANIMATION_MOVE_UP -> d
    java.lang.String ANIMATION_MOVE_DOWN -> e
    java.lang.String ANIMATION_MOVE_LEFT -> f
    java.lang.String ANIMATION_MOVE_RIGHT -> g
    java.lang.String ANIMATION_ANIMATION_ZOOMOUT -> h
    java.lang.String ANIMATION_ANIMATION_FADEOUT -> i
    java.lang.String ANIMATION_SCALE_ALL -> j
    java.lang.String ANIMATION_ANIMATION_ROTATEOUT -> k
    java.lang.String ANIMATION_ANIMATION_TURNOUT -> l
    java.lang.String ANIMATION_ANIMATION_ZOOMIN -> m
    java.lang.String ANIMATION_ANIMATION_FADEIN -> n
    java.lang.String ANIMATION_FLOATOUT_UP -> o
    java.util.ArrayList _anims -> p
    android.view.animation.AnimationSet _animationset -> q
    android.view.animation.Animation _wipset -> r
    java.util.ArrayList _animations -> s
    boolean _playcomponent -> t
    boolean _iswipe -> u
    boolean _isPath -> v
    float deltaX -> w
    float deltaY -> x
    boolean getIsPlayComponent() -> a
    android.view.animation.Animation getWipeAnimationForContainer() -> b
    android.view.animation.AnimationSet getAnimation(int,int,int,int,float,float) -> a
    boolean isPath() -> c
    com.mouee.android.animation.AbstractAnimator getAnimator() -> d
    double getDis(android.graphics.PointF,android.graphics.PointF) -> a
com.mouee.android.animation.ArcTranslateAnimation -> com.mouee.android.a.e:
    int mFromXType -> a
    int mToXType -> b
    int mFromYType -> c
    int mToYType -> d
    float mFromXValue -> e
    float mToXValue -> f
    float mFromYValue -> g
    float mToYValue -> h
    float mFromXDelta -> i
    float mToXDelta -> j
    float mFromYDelta -> k
    float mToYDelta -> l
    android.graphics.PointF mStart -> m
    android.graphics.PointF mControl -> n
    android.graphics.PointF mEnd -> o
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void initialize(int,int,int,int) -> initialize
    long calcBezier(float,float,float,float) -> a
com.mouee.android.animation.CatmullRoom -> com.mouee.android.a.f:
    java.util.ArrayList _points -> a
    java.util.List AllPoints -> b
    int point_number -> c
    int eachduration -> d
    float centerX -> e
    float centerY -> f
    float mFromXDelta -> h
    float mToXDelta -> i
    float mFromYDelta -> j
    float mToYDelta -> k
    int mFromXType -> l
    int mToXType -> m
    int mFromYType -> n
    int mToYType -> o
    float mFromXValue -> p
    float mToXValue -> q
    float mFromYValue -> r
    float mToYValue -> s
    java.util.List list -> g
    boolean isTranslate -> t
    boolean flag -> u
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.mouee.android.animation.MoueeAnimation -> com.mouee.android.a.g:
    int _duration -> a
    long _startTime -> b
    java.lang.String _CustomProperties -> c
    int _repeat -> d
    long _delay -> e
    float deltaX -> f
    float deltaY -> g
    java.util.ArrayList _animations -> h
    void addAnimation(android.view.animation.Animation) -> a
    java.util.ArrayList getAnimation() -> a
    int getDuration() -> b
    void setDuration(int) -> a
    long get_startTime() -> c
    void set_startTime(long) -> a
    java.lang.String getCustomProperties() -> d
    void setCustomProperties(java.lang.String) -> a
    int getRepeat() -> e
    void setRepeat(int) -> b
    long getDelay() -> f
    void setDelay(long) -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.mouee.android.animation.MoueeAnimationListener -> com.mouee.android.a.h:
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.mouee.android.animation.MoueeCatmullRoomAnimation -> com.mouee.android.a.i:
    float mToXDelta -> p
    float mToYDelta -> q
    java.util.ArrayList _points -> i
    android.graphics.PointF lastP -> j
    java.util.List AllPoints -> k
    int point_number -> l
    int eachduration -> m
    int x -> n
    int y -> o
    java.util.ArrayList getAnimation() -> a
    com.mouee.android.animation.CatmullRoom getAnim() -> g
    float getToXDelta() -> h
    float getToYDelta() -> i
com.mouee.android.animation.MoueeFadeIn -> com.mouee.android.a.j:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeFadeOut -> com.mouee.android.a.k:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeFloatInDirectAnimation -> com.mouee.android.a.l:
    java.lang.String _direction -> i
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeFloatOutDirectAnimation -> com.mouee.android.a.m:
    java.lang.String _direction -> i
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeFlyInAnimation -> com.mouee.android.a.n:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeMoveInDirection -> com.mouee.android.a.o:
    java.lang.String _direction -> i
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeQiQiaoAnimation -> com.mouee.android.a.p:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeRotateAnimation -> com.mouee.android.a.q:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeRotateScaleInAnimation -> com.mouee.android.a.r:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeRotateScaleOutAnimation -> com.mouee.android.a.s:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeScaleInAnimation -> com.mouee.android.a.t:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeScaleOutAnimation -> com.mouee.android.a.u:
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeWipeInAnimation -> com.mouee.android.a.v:
    java.lang.String _direction -> i
    android.view.animation.Animation getReAnimation() -> g
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeWipeOutAnimation -> com.mouee.android.a.w:
    java.lang.String _direction -> i
    android.view.animation.Animation getReAnimation() -> g
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.MoueeYaixRotateInAnimation -> com.mouee.android.a.x:
    java.util.ArrayList getAnimation(int,int,int,int) -> a
com.mouee.android.animation.MoueeYaixRotateOutAnimation -> com.mouee.android.a.y:
    java.util.ArrayList getAnimation(int,int,int,int) -> a
com.mouee.android.animation.MoueeZoomInAnimation -> com.mouee.android.a.z:
    float fxsize -> i
    float fysize -> j
    float txsize -> k
    float tysize -> l
    java.util.ArrayList getAnimation() -> a
com.mouee.android.animation.PathAnimation -> com.mouee.android.a.aa:
    android.view.animation.AnimationSet mAnimationSet -> a
    int currentIndex -> b
    android.view.View currentView -> c
    int delay -> d
    float deltaX -> e
    float deltaY -> f
    int repeat -> g
    int currentPlayCount -> h
    void playAnimation(android.view.View) -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    android.view.animation.AnimationSet getAnimationSet() -> a
    void setAnimationSet(android.view.animation.AnimationSet) -> a
    int getDelay() -> b
    float getDeltaY() -> c
    void setDeltaY(float) -> a
    float getDeltaX() -> d
    void setDeltaX(float) -> b
    void setDelay(int) -> a
    int getRepeat() -> e
    void setRepeat(int) -> b
    android.view.View access$0(com.mouee.android.animation.PathAnimation) -> a
    android.view.animation.AnimationSet access$1(com.mouee.android.animation.PathAnimation) -> b
    int access$2(com.mouee.android.animation.PathAnimation) -> c
com.mouee.android.animation.PathAnimation$MyCount1 -> com.mouee.android.a.ab:
    com.mouee.android.animation.PathAnimation this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.animation.YRotateAnimation -> com.mouee.android.a.ac:
    int centerX -> a
    int centerY -> b
    boolean isZoomin -> c
    android.graphics.Camera camera -> d
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.mouee.android.animation._QiQiaoAnimation -> com.mouee.android.a.ad:
    float fromDegree -> a
    float toDegree -> b
    float timeDuration -> c
    float degreeDuration -> d
    float startTime -> e
    float mPivotX -> f
    float mPivotY -> g
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.mouee.android.animation.catmullroom.CatMullRoomAction -> com.mouee.android.a.a.a:
    long serialVersionUID -> serialVersionUID
    java.util.List controlPoints -> c
    com.mouee.android.animation.catmullroom.Vector3 T1 -> a
    com.mouee.android.animation.catmullroom.Vector3 T2 -> b
    void add(com.mouee.android.animation.catmullroom.Vector3) -> a
    java.util.List getControlPoints() -> a
    java.util.List getPath(int) -> a
    void getPath(com.mouee.android.animation.catmullroom.Vector3[],int) -> a
    java.util.List getTangents(int) -> b
    java.util.List getTangentNormals2D(int) -> c
    java.util.List getTangentNormals(int,com.mouee.android.animation.catmullroom.Vector3) -> a
    java.util.List getTangentNormals(int,java.util.List) -> a
com.mouee.android.animation.catmullroom.GdxRuntimeException -> com.mouee.android.a.a.b:
    long serialVersionUID -> serialVersionUID
com.mouee.android.animation.catmullroom.MathUtils -> com.mouee.android.a.a.c:
    float PI -> a
    int SIN_BITS -> g
    int SIN_MASK -> h
    int SIN_COUNT -> i
    float radFull -> j
    float degFull -> k
    float radToIndex -> l
    float degToIndex -> m
    float radiansToDegrees -> b
    float degreesToRadians -> c
    float[] sin -> d
    float[] cos -> e
    int ATAN2_BITS -> n
    int ATAN2_BITS2 -> o
    int ATAN2_MASK -> p
    int ATAN2_COUNT -> q
    int ATAN2_DIM -> r
    float INV_ATAN2_DIM_MINUS_1 -> s
    float[] atan2 -> t
    java.util.Random random -> f
    int BIG_ENOUGH_INT -> u
    double BIG_ENOUGH_FLOOR -> v
    double CEIL -> w
    double BIG_ENOUGH_CEIL -> x
    double BIG_ENOUGH_ROUND -> y
    float sin(float) -> a
    float cos(float) -> b
    float sinDeg(float) -> c
    float cosDeg(float) -> d
    float atan2(float,float) -> a
    int random(int) -> a
    int random(int,int) -> a
    boolean randomBoolean() -> a
    float random() -> b
    float random(float) -> e
    float random(float,float) -> b
    int nextPowerOfTwo(int) -> b
    boolean isPowerOfTwo(int) -> c
    int floor(float) -> f
    int floorPositive(float) -> g
    int ceil(float) -> h
    int ceilPositive(float) -> i
    int round(float) -> j
    int roundPositive(float) -> k
com.mouee.android.animation.catmullroom.Matrix3 -> com.mouee.android.a.a.d:
    long serialVersionUID -> serialVersionUID
    float DEGREE_TO_RAD -> b
    float[] vals -> a
    com.mouee.android.animation.catmullroom.Matrix3 idt() -> a
    com.mouee.android.animation.catmullroom.Matrix3 mul(com.mouee.android.animation.catmullroom.Matrix3) -> a
    com.mouee.android.animation.catmullroom.Matrix3 setToRotation(float) -> a
    com.mouee.android.animation.catmullroom.Matrix3 setToTranslation(float,float) -> a
    com.mouee.android.animation.catmullroom.Matrix3 setToScaling(float,float) -> b
    java.lang.String toString() -> toString
    float det() -> b
    com.mouee.android.animation.catmullroom.Matrix3 inv() -> c
    com.mouee.android.animation.catmullroom.Matrix3 set(com.mouee.android.animation.catmullroom.Matrix3) -> b
    float[] getValues() -> d
com.mouee.android.animation.catmullroom.Matrix4 -> com.mouee.android.a.a.e:
    long serialVersionUID -> serialVersionUID
    int M00 -> a
    int M01 -> b
    int M02 -> c
    int M03 -> d
    int M10 -> e
    int M11 -> f
    int M12 -> g
    int M13 -> h
    int M20 -> i
    int M21 -> j
    int M22 -> k
    int M23 -> l
    int M30 -> m
    int M31 -> n
    int M32 -> o
    int M33 -> p
    float[] tmp -> q
    float[] val -> r
    com.mouee.android.animation.catmullroom.Quaternion quat -> s
    com.mouee.android.animation.catmullroom.Vector3 l_vez -> t
    com.mouee.android.animation.catmullroom.Vector3 l_vex -> u
    com.mouee.android.animation.catmullroom.Vector3 l_vey -> v
    com.mouee.android.animation.catmullroom.Vector3 tmpVec -> w
    com.mouee.android.animation.catmullroom.Matrix4 tmpMat -> x
    com.mouee.android.animation.catmullroom.Vector3 right -> y
    com.mouee.android.animation.catmullroom.Vector3 tmpForward -> z
    com.mouee.android.animation.catmullroom.Vector3 tmpUp -> A
    com.mouee.android.animation.catmullroom.Matrix4 set(com.mouee.android.animation.catmullroom.Matrix4) -> a
    com.mouee.android.animation.catmullroom.Matrix4 set(float[]) -> a
    com.mouee.android.animation.catmullroom.Matrix4 set(com.mouee.android.animation.catmullroom.Quaternion) -> a
    void set(com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3) -> a
    com.mouee.android.animation.catmullroom.Matrix4 cpy() -> a
    com.mouee.android.animation.catmullroom.Matrix4 trn(com.mouee.android.animation.catmullroom.Vector3) -> a
    com.mouee.android.animation.catmullroom.Matrix4 trn(float,float,float) -> a
    float[] getValues() -> b
    com.mouee.android.animation.catmullroom.Matrix4 mul(com.mouee.android.animation.catmullroom.Matrix4) -> b
    com.mouee.android.animation.catmullroom.Matrix4 tra() -> c
    com.mouee.android.animation.catmullroom.Matrix4 idt() -> d
    com.mouee.android.animation.catmullroom.Matrix4 inv() -> e
    float det() -> f
    com.mouee.android.animation.catmullroom.Matrix4 setToProjection(float,float,float,float) -> a
    com.mouee.android.animation.catmullroom.Matrix4 setToOrtho2D(float,float,float,float) -> b
    com.mouee.android.animation.catmullroom.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> a
    com.mouee.android.animation.catmullroom.Matrix4 setToOrtho(float,float,float,float,float,float) -> b
    com.mouee.android.animation.catmullroom.Matrix4 setToTranslation(com.mouee.android.animation.catmullroom.Vector3) -> b
    com.mouee.android.animation.catmullroom.Matrix4 setToTranslation(float,float,float) -> b
    com.mouee.android.animation.catmullroom.Matrix4 setToTranslationAndScaling(com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3) -> a
    com.mouee.android.animation.catmullroom.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> c
    com.mouee.android.animation.catmullroom.Matrix4 setToRotation(com.mouee.android.animation.catmullroom.Vector3,float) -> a
    com.mouee.android.animation.catmullroom.Matrix4 setFromEulerAngles(float,float,float) -> c
    com.mouee.android.animation.catmullroom.Matrix4 setToScaling(com.mouee.android.animation.catmullroom.Vector3) -> c
    com.mouee.android.animation.catmullroom.Matrix4 setToScaling(float,float,float) -> d
    com.mouee.android.animation.catmullroom.Matrix4 setToLookAt(com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3) -> b
    com.mouee.android.animation.catmullroom.Matrix4 setToLookAt(com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3) -> a
    com.mouee.android.animation.catmullroom.Matrix4 setToWorld(com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3,com.mouee.android.animation.catmullroom.Vector3) -> b
    java.lang.String toString() -> toString
    void lerp(com.mouee.android.animation.catmullroom.Matrix4,float) -> a
    com.mouee.android.animation.catmullroom.Matrix4 set(com.mouee.android.animation.catmullroom.Matrix3) -> a
    void scl(com.mouee.android.animation.catmullroom.Vector3) -> d
    void getTranslation(com.mouee.android.animation.catmullroom.Vector3) -> e
    void getRotation(com.mouee.android.animation.catmullroom.Quaternion) -> b
com.mouee.android.animation.catmullroom.Quaternion -> com.mouee.android.a.a.f:
    long serialVersionUID -> serialVersionUID
    float NORMALIZATION_TOLERANCE -> e
    com.mouee.android.animation.catmullroom.Quaternion tmp1 -> f
    com.mouee.android.animation.catmullroom.Quaternion tmp2 -> g
    float x -> a
    float y -> b
    float z -> c
    float w -> d
    com.mouee.android.animation.catmullroom.Quaternion set(float,float,float,float) -> a
    com.mouee.android.animation.catmullroom.Quaternion set(com.mouee.android.animation.catmullroom.Quaternion) -> a
    com.mouee.android.animation.catmullroom.Quaternion set(com.mouee.android.animation.catmullroom.Vector3,float) -> a
    com.mouee.android.animation.catmullroom.Quaternion cpy() -> a
    float len() -> b
    java.lang.String toString() -> toString
    com.mouee.android.animation.catmullroom.Quaternion setEulerAngles(float,float,float) -> a
    float len2() -> c
    com.mouee.android.animation.catmullroom.Quaternion nor() -> d
    com.mouee.android.animation.catmullroom.Quaternion conjugate() -> e
    void transform(com.mouee.android.animation.catmullroom.Vector3) -> a
    com.mouee.android.animation.catmullroom.Quaternion mul(com.mouee.android.animation.catmullroom.Quaternion) -> b
    com.mouee.android.animation.catmullroom.Quaternion mulLeft(com.mouee.android.animation.catmullroom.Quaternion) -> c
    void toMatrix(float[]) -> a
    com.mouee.android.animation.catmullroom.Quaternion idt() -> f
    com.mouee.android.animation.catmullroom.Quaternion setFromAxis(com.mouee.android.animation.catmullroom.Vector3,float) -> b
    com.mouee.android.animation.catmullroom.Quaternion setFromAxis(float,float,float,float) -> b
    com.mouee.android.animation.catmullroom.Quaternion setFromMatrix(com.mouee.android.animation.catmullroom.Matrix4) -> a
    com.mouee.android.animation.catmullroom.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float) -> a
    com.mouee.android.animation.catmullroom.Quaternion slerp(com.mouee.android.animation.catmullroom.Quaternion,float) -> a
    boolean equals(java.lang.Object) -> equals
    float dot(com.mouee.android.animation.catmullroom.Quaternion) -> d
    com.mouee.android.animation.catmullroom.Quaternion mul(float) -> a
com.mouee.android.animation.catmullroom.Vector3 -> com.mouee.android.a.a.g:
    long serialVersionUID -> serialVersionUID
    float x -> a
    float y -> b
    float z -> c
    com.mouee.android.animation.catmullroom.Vector3 tmp -> d
    com.mouee.android.animation.catmullroom.Vector3 tmp2 -> e
    com.mouee.android.animation.catmullroom.Vector3 tmp3 -> f
    com.mouee.android.animation.catmullroom.Vector3 set(float,float,float) -> a
    com.mouee.android.animation.catmullroom.Vector3 set(com.mouee.android.animation.catmullroom.Vector3) -> a
    com.mouee.android.animation.catmullroom.Vector3 set(float[]) -> a
    com.mouee.android.animation.catmullroom.Vector3 cpy() -> a
    com.mouee.android.animation.catmullroom.Vector3 tmp() -> b
    com.mouee.android.animation.catmullroom.Vector3 tmp2() -> c
    com.mouee.android.animation.catmullroom.Vector3 tmp3() -> d
    com.mouee.android.animation.catmullroom.Vector3 add(com.mouee.android.animation.catmullroom.Vector3) -> b
    com.mouee.android.animation.catmullroom.Vector3 add(float,float,float) -> b
    com.mouee.android.animation.catmullroom.Vector3 add(float) -> a
    com.mouee.android.animation.catmullroom.Vector3 sub(com.mouee.android.animation.catmullroom.Vector3) -> c
    com.mouee.android.animation.catmullroom.Vector3 sub(float,float,float) -> c
    com.mouee.android.animation.catmullroom.Vector3 sub(float) -> b
    com.mouee.android.animation.catmullroom.Vector3 mul(float) -> c
    com.mouee.android.animation.catmullroom.Vector3 div(float) -> d
    float len() -> e
    float len2() -> f
    boolean idt(com.mouee.android.animation.catmullroom.Vector3) -> d
    float dst(com.mouee.android.animation.catmullroom.Vector3) -> e
    com.mouee.android.animation.catmullroom.Vector3 nor() -> g
    float dot(com.mouee.android.animation.catmullroom.Vector3) -> f
    com.mouee.android.animation.catmullroom.Vector3 crs(com.mouee.android.animation.catmullroom.Vector3) -> g
    com.mouee.android.animation.catmullroom.Vector3 crs(float,float,float) -> d
    com.mouee.android.animation.catmullroom.Vector3 mul(com.mouee.android.animation.catmullroom.Matrix4) -> a
    com.mouee.android.animation.catmullroom.Vector3 prj(com.mouee.android.animation.catmullroom.Matrix4) -> b
    com.mouee.android.animation.catmullroom.Vector3 rot(com.mouee.android.animation.catmullroom.Matrix4) -> c
    boolean isUnit() -> h
    boolean isZero() -> i
    com.mouee.android.animation.catmullroom.Vector3 lerp(com.mouee.android.animation.catmullroom.Vector3,float) -> a
    com.mouee.android.animation.catmullroom.Vector3 slerp(com.mouee.android.animation.catmullroom.Vector3,float) -> b
    java.lang.String toString() -> toString
    float dot(float,float,float) -> e
    float dst2(com.mouee.android.animation.catmullroom.Vector3) -> h
    float dst2(float,float,float) -> f
    float dst(float,float,float) -> g
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.mouee.android.animation.catmullroom.Vector3 scale(float,float,float) -> h
com.mouee.android.book.BookConstants -> com.mouee.android.b.a:
    java.lang.String IMAGECOMPONENT_CLASSNAME -> a
com.mouee.android.book.BookDecoder -> com.mouee.android.b.b:
    com.mouee.android.book.BookDecoder bookDecoder -> a
    java.util.HashMap itemMap -> b
    byte[] data -> c
    int lenD -> d
    com.mouee.android.book.BookDecoder getInstance() -> a
    com.mouee.android.book.entity.Book decode(java.io.InputStream) -> a
    com.mouee.android.book.entity.PageEntity decodePageEntity(java.io.InputStream) -> b
    com.mouee.android.book.entity.PageEntity decodePageEntity(android.content.Context,java.lang.String) -> a
    void initBookItemList(android.content.Context) -> a
    int fromArray(byte[]) -> a
    java.io.InputStream getInputStream(java.lang.String) -> a
    void readXML(java.io.StringReader) -> a
com.mouee.android.book.BookIndex -> com.mouee.android.b.c:
    java.lang.String itemID -> a
    int start -> b
    int end -> c
    java.lang.String getItemID() -> a
    void setItemID(java.lang.String) -> a
    int getStart() -> b
    void setStart(int) -> a
    int getEnd() -> c
    void setEnd(int) -> b
com.mouee.android.book.BookXmlHandler -> com.mouee.android.b.d:
    java.lang.String val -> d
    java.lang.String tagName -> e
    boolean Ispages -> f
    boolean IsSection -> g
    boolean IsSnapshot -> h
    boolean IsBookInfo -> i
    boolean IsButton -> j
    com.mouee.android.book.entity.Book book -> k
    com.mouee.android.book.entity.SectionEntity section -> a
    com.mouee.android.book.entity.SnapshotEntity snaps -> b
    com.mouee.android.book.entity.ButtonEntity button -> c
    void characters(char[],int,int) -> characters
    void endDocument() -> endDocument
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void skippedEntity(java.lang.String) -> skippedEntity
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
com.mouee.android.book.PageMoudleXmlHandler -> com.mouee.android.b.e:
    void makeText(com.mouee.android.book.entity.moudle.MoudleComponentEntity,java.lang.String,java.lang.String) -> a
com.mouee.android.book.PageXmlHandler -> com.mouee.android.b.f:
    com.mouee.android.book.entity.PageEntity page -> a
    java.lang.String tagName -> c
    boolean ispage -> d
    boolean isAnimation -> e
    boolean isContainers -> f
    boolean isPlaySequence -> g
    boolean isPlaySequenceDelay -> h
    boolean isBackground -> i
    boolean isPoint -> j
    boolean isBehavior -> k
    boolean flg -> l
    boolean isGifComponent -> m
    boolean isPDFComponent -> n
    boolean isMoudleComponent -> o
    java.lang.String val -> p
    android.graphics.PointF p -> q
    com.mouee.android.book.entity.ContainerEntity container -> r
    com.mouee.android.book.entity.AnimationEntity animation -> s
    com.mouee.android.book.entity.BehaviorEntity Behavior -> t
    com.mouee.android.book.entity.GroupEntity group -> u
    com.mouee.android.book.entity.TextComponentLineEntity lineEntity -> b
    void characters(char[],int,int) -> characters
    void endDocument() -> endDocument
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void skippedEntity(java.lang.String) -> skippedEntity
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
com.mouee.android.book.XmlIndexBookXmlHandler -> com.mouee.android.b.g:
    java.lang.String val -> c
    java.lang.String tagName -> d
    boolean Ispages -> e
    boolean IsSection -> f
    boolean IsSnapshot -> g
    boolean IsBookInfo -> h
    com.mouee.android.book.entity.Book book -> i
    com.mouee.android.book.entity.SectionEntity section -> a
    com.mouee.android.book.entity.SnapshotEntity snaps -> b
    void characters(char[],int,int) -> characters
    void endDocument() -> endDocument
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void skippedEntity(java.lang.String) -> skippedEntity
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
com.mouee.android.book.entity.AnimationEntity -> com.mouee.android.b.a.a:
    java.lang.String ClassName -> a
    java.lang.String CurrentAnimationIndex -> b
    java.lang.String Repeat -> c
    java.lang.String Delay -> d
    java.lang.String Duration -> e
    java.lang.String AnimationType -> f
    java.lang.String AnimationEnterOrQuit -> g
    java.lang.String AnimationTypeLabel -> h
    java.lang.String CustomProperties -> i
    java.util.ArrayList Points -> j
com.mouee.android.book.entity.BehaviorEntity -> com.mouee.android.b.a.b:
    java.lang.String EventName -> a
    java.lang.String FunctionObjectID -> b
    java.lang.String FunctionName -> c
    boolean IsRepeat -> d
    java.lang.String Value -> e
    java.lang.String triggerComponentID -> f
com.mouee.android.book.entity.Book -> com.mouee.android.b.a.c:
    com.mouee.android.book.entity.BookInfoEntity bookInfo -> a
    java.util.ArrayList pages -> b
    java.util.ArrayList sections -> c
    java.lang.String startPageID -> d
    java.util.ArrayList snapshots -> e
    java.util.ArrayList buttons -> f
    com.mouee.android.book.entity.BookInfoEntity getBookInfo() -> a
    void setBookInfo(com.mouee.android.book.entity.BookInfoEntity) -> a
    java.util.ArrayList getPages() -> b
    void setPages(java.util.ArrayList) -> a
    java.lang.String getStartPageID() -> c
    void setStartPageID(java.lang.String) -> a
    java.util.ArrayList getSections() -> d
    void setSections(java.util.ArrayList) -> b
    java.util.ArrayList getSnapshots() -> e
    void setSnapshots(java.util.ArrayList) -> c
    java.util.ArrayList getButtons() -> f
    void setButtons(java.util.ArrayList) -> d
    java.lang.String getSnapshotIdByPageId(java.lang.String) -> b
com.mouee.android.book.entity.BookInfoEntity -> com.mouee.android.b.a.d:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String backgroundMusicId -> c
    java.lang.String bookType -> d
    java.lang.String deviceType -> e
    java.lang.String description -> f
    java.lang.String bookIconId -> g
    java.lang.String bookFlipType -> h
    java.lang.String homePageID -> i
    double startPageTime -> j
    java.lang.String getId() -> a
    void setId(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    java.lang.String getBackgroundMusicId() -> c
    void setBackgroundMusicId(java.lang.String) -> c
    java.lang.String getBookType() -> d
    void setBookType(java.lang.String) -> d
    java.lang.String getDeviceType() -> e
    void setDeviceType(java.lang.String) -> e
    java.lang.String getDescription() -> f
    void setDescription(java.lang.String) -> f
    java.lang.String getBookIconId() -> g
    void setBookIconId(java.lang.String) -> g
    java.lang.String getHomePageID() -> h
    void setHomePageID(java.lang.String) -> h
    double getStartPageTime() -> i
    void setStartPageTime(double) -> a
com.mouee.android.book.entity.BookListEntity -> com.mouee.android.b.a.e:
    java.lang.String ID -> a
    java.lang.String Title -> b
    java.lang.String UploadTime -> c
    java.lang.String Account -> d
    java.lang.String Descrption -> e
    java.lang.String Icon -> f
com.mouee.android.book.entity.ButtonEntity -> com.mouee.android.b.a.f:
    java.lang.String HOME_PAGE_BTN -> a
    java.lang.String PRE_PAGE_BTN -> b
    java.lang.String NEXT_PAGE_BTN -> c
    java.lang.String OPEN_NAVIGATE_BTN -> d
    float x -> e
    float y -> f
    int width -> g
    int height -> h
    java.lang.String type -> i
    boolean isVisible -> j
    java.lang.String source -> k
    java.lang.String selectedSource -> l
    float getX() -> a
    void setX(float) -> a
    float getY() -> b
    void setY(float) -> b
    int getWidth() -> c
    void setWidth(int) -> a
    int getHeight() -> d
    void setHeight(int) -> b
    java.lang.String getType() -> e
    void setType(java.lang.String) -> a
    boolean isVisible() -> f
    void setVisible(boolean) -> a
    java.lang.String getSource() -> g
    void setSource(java.lang.String) -> b
    java.lang.String getSelectedSource() -> h
    void setSelectedSource(java.lang.String) -> c
com.mouee.android.book.entity.ComponentEntity -> com.mouee.android.b.a.g:
    java.lang.String localSourceId -> a
    boolean isSynchronized -> b
    java.lang.String className -> c
    boolean autoLoop -> d
    java.lang.String multiMediaUrl -> e
    boolean isAllowUserZoom -> f
    java.lang.String htmlUrl -> g
    double delay -> h
    float rotation -> i
    java.util.ArrayList anims -> j
    boolean isPlayAnimationAtBegining -> k
    boolean isPlayVideoOrAudioAtBegining -> l
    boolean isHideAtBegining -> m
    java.util.ArrayList behaviors -> n
    int x -> o
    int y -> p
    java.lang.String componentId -> q
    float oldWidth -> r
    float oldHeight -> s
    java.util.ArrayList pointList -> t
    boolean isStroyTelling -> u
    java.lang.String getComponentId() -> a
    void setComponentId(java.lang.String) -> a
    java.util.ArrayList getAnims() -> b
    void setAnims(java.util.ArrayList) -> a
    float getRotation() -> c
    void setRotation(float) -> a
    double getDelay() -> d
    void setDelay(double) -> a
    java.lang.String getLocalSourceId() -> e
    void setLocalSourceId(java.lang.String) -> b
    boolean isSynchronized() -> f
    void setSynchronized(boolean) -> a
    java.lang.String getClassName() -> g
    void setClassName(java.lang.String) -> c
    boolean isAutoLoop() -> h
    void setAutoLoop(boolean) -> b
    java.lang.String getMultiMediaUrl() -> i
    void setMultiMediaUrl(java.lang.String) -> d
    boolean isAllowUserZoom() -> j
    void setAllowUserZoom(boolean) -> c
    java.lang.String getHtmlUrl() -> k
    void setHtmlUrl(java.lang.String) -> e
    java.util.ArrayList getPointList() -> l
    void setPointList(java.util.ArrayList) -> b
    boolean isVideo() -> m
com.mouee.android.book.entity.ContainerEntity -> com.mouee.android.b.a.h:
    java.lang.String name -> a
    java.lang.String ID -> b
    float rotation -> c
    float x -> d
    float y -> e
    float width -> f
    float height -> g
    boolean isPlayAnimationAtBegining -> h
    boolean isPlayVideoOrAudioAtBegining -> i
    boolean isHideAtBegining -> j
    boolean autoLoop -> k
    com.mouee.android.book.entity.ComponentEntity component -> l
    java.util.ArrayList animations -> m
    java.util.ArrayList behaviors -> n
    boolean IsStroyTelling -> o
    java.lang.String getName() -> a
    void setName(java.lang.String) -> a
    java.lang.String getID() -> b
    void setID(java.lang.String) -> b
    float getRotation() -> c
    void setRotation(float) -> a
    float getX() -> d
    void setX(float) -> b
    float getY() -> e
    void setY(float) -> c
    float getWidth() -> f
    void setWidth(float) -> d
    float getHeight() -> g
    void setHeight(float) -> e
    boolean isPlayAnimationAtBegining() -> h
    void setPlayAnimationAtBegining(boolean) -> a
    boolean isPlayVideoOrAudioAtBegining() -> i
    void setPlayVideoOrAudioAtBegining(boolean) -> b
    boolean isHideAtBegining() -> j
    void setHideAtBegining(boolean) -> c
    com.mouee.android.book.entity.ComponentEntity getComponent() -> k
    void setComponent(com.mouee.android.book.entity.ComponentEntity) -> a
    java.util.ArrayList getAnimations() -> l
    void setAnimations(java.util.ArrayList) -> a
    java.util.ArrayList getBehaviors() -> m
    void setBehaviors(java.util.ArrayList) -> b
com.mouee.android.book.entity.GifComponentEntity -> com.mouee.android.b.a.i:
    boolean IsPlayOnetime -> v
    double gifDuration -> w
    java.util.ArrayList frameList -> x
    boolean isIsPlayOnetime() -> n
    void setIsPlayOnetime(boolean) -> d
    double getGifDuration() -> o
    void setGifDuration(double) -> b
    java.util.ArrayList getFrameList() -> p
    void setFrameList(java.util.ArrayList) -> c
com.mouee.android.book.entity.GroupEntity -> com.mouee.android.b.a.j:
    java.util.ArrayList ContainerID -> a
com.mouee.android.book.entity.HTMLComponentEntity -> com.mouee.android.b.a.k:
    java.lang.String htmlFolder -> v
    java.lang.String indexHtml -> w
    java.lang.String getHtmlFolder() -> n
    void setHtmlFolder(java.lang.String) -> f
    java.lang.String getIndexHtml() -> o
    void setIndexHtml(java.lang.String) -> g
com.mouee.android.book.entity.PDFComponentEntity -> com.mouee.android.b.a.l:
    java.lang.String localSourceID -> v
    java.lang.String pdfSourceID -> w
    java.lang.String pdfPageIndex -> x
    java.lang.String intailWidth -> y
    java.lang.String intailHeight -> z
    java.lang.String isAllowUserZoom -> A
    java.lang.String getLocalSourceID() -> n
    void setLocalSourceID(java.lang.String) -> f
    java.lang.String getPdfSourceID() -> o
    void setPdfSourceID(java.lang.String) -> g
    java.lang.String getPdfPageIndex() -> p
    void setPdfPageIndex(java.lang.String) -> h
    java.lang.String getIntailWidth() -> q
    void setIntailWidth(java.lang.String) -> i
    java.lang.String getIntailHeight() -> r
    void setIntailHeight(java.lang.String) -> j
    java.lang.String getIsAllowUserZoom() -> s
    void setIsAllowUserZoom(java.lang.String) -> k
com.mouee.android.book.entity.PageEntity -> com.mouee.android.b.a.m:
    java.lang.String ID -> a
    java.lang.String title -> b
    java.lang.String description -> c
    float width -> d
    float height -> e
    boolean enableNavigation -> f
    java.lang.String type -> g
    java.util.ArrayList containers -> h
    com.mouee.android.book.entity.ContainerEntity background -> i
    com.mouee.android.book.entity.PlaySequenceEntity sequence -> j
    java.util.ArrayList navePageIds -> k
    java.lang.String linkPageID -> l
    boolean snapShotType -> m
    java.lang.String snapShotID -> n
    java.lang.String getSnapShotID() -> a
    void setSnapShotID(java.lang.String) -> a
    boolean isCashSnapshot() -> b
    void setSnapShotType(boolean) -> a
    java.lang.String getID() -> c
    void setID(java.lang.String) -> b
    java.lang.String getTitle() -> d
    void setTitle(java.lang.String) -> c
    java.lang.String getDescription() -> e
    void setDescription(java.lang.String) -> d
    float getWidth() -> f
    void setWidth(float) -> a
    float getHeight() -> g
    void setHeight(float) -> b
    boolean isEnableNavigation() -> h
    void setEnableNavigation(boolean) -> b
    java.util.ArrayList getContainers() -> i
    void setContainers(java.util.ArrayList) -> a
    com.mouee.android.book.entity.ContainerEntity getBackground() -> j
    void setBackground(com.mouee.android.book.entity.ContainerEntity) -> a
    com.mouee.android.book.entity.PlaySequenceEntity getSequence() -> k
    void setSequence(com.mouee.android.book.entity.PlaySequenceEntity) -> a
    java.util.ArrayList getNavePageIds() -> l
    void setNavePageIds(java.util.ArrayList) -> b
    java.lang.String getType() -> m
    void setType(java.lang.String) -> e
    java.lang.String getLinkPageID() -> n
    void setLinkPageID(java.lang.String) -> f
com.mouee.android.book.entity.PlaySequenceEntity -> com.mouee.android.b.a.n:
    java.util.ArrayList Group -> a
    java.util.ArrayList Delay -> b
com.mouee.android.book.entity.ResourceEntity -> com.mouee.android.b.a.o:
    java.util.ArrayList ResourcesFile -> a
com.mouee.android.book.entity.ResourceFileEntity -> com.mouee.android.b.a.p:
    java.lang.String Name -> a
com.mouee.android.book.entity.SectionEntity -> com.mouee.android.b.a.q:
    java.lang.String ID -> a
    java.lang.String Name -> b
    java.util.ArrayList pages -> c
    java.lang.String getID() -> a
    void setID(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    java.util.ArrayList getPages() -> c
    void setPages(java.util.ArrayList) -> a
com.mouee.android.book.entity.SnapshotEntity -> com.mouee.android.b.a.r:
    java.lang.String id -> a
    java.lang.String width -> b
    java.lang.String height -> c
    java.lang.String pageID -> d
    java.lang.String getId() -> a
    void setId(java.lang.String) -> a
    java.lang.String getWidth() -> b
    void setWidth(java.lang.String) -> b
    java.lang.String getHeight() -> c
    void setHeight(java.lang.String) -> c
    java.lang.String getPageID() -> d
    void setPageID(java.lang.String) -> d
com.mouee.android.book.entity.TextComponentEntity -> com.mouee.android.b.a.s:
    java.lang.String htmlXML -> v
    java.lang.String bgcolor -> w
    java.lang.String bgalpha -> x
    java.lang.String borderVisible -> y
    java.lang.String borderColor -> z
    java.lang.String textContent -> A
    java.lang.String defaultTextLayoutFormat -> B
    java.lang.String fontFamily -> C
    java.lang.String fontSize -> D
    java.lang.String fontWeight -> E
    java.lang.String fontStyle -> F
    java.lang.String textDecoration -> G
    java.lang.String textAlign -> H
    java.lang.String textColor -> I
    java.lang.String totalParaTextContent -> J
    java.lang.String lineHeight -> K
    java.lang.String trackingLeft -> L
    java.lang.String trackingRight -> M
    java.util.ArrayList lineEntitys -> N
    java.util.ArrayList getLineEntitys() -> n
    void setLineEntitys(java.util.ArrayList) -> c
    java.lang.String getHtmlXML() -> o
    void setHtmlXML(java.lang.String) -> f
    java.lang.String getBgcolor() -> p
    void setBgcolor(java.lang.String) -> g
    java.lang.String getBgalpha() -> q
    void setBgalpha(java.lang.String) -> h
    java.lang.String getBorderVisible() -> r
    void setBorderVisible(java.lang.String) -> i
    java.lang.String getBorderColor() -> s
    void setBorderColor(java.lang.String) -> j
    java.lang.String getTextContent() -> t
    void setTextContent(java.lang.String) -> k
    java.lang.String getDefaultTextLayoutFormat() -> u
    void setDefaultTextLayoutFormat(java.lang.String) -> l
    java.lang.String getFontFamily() -> v
    void setFontFamily(java.lang.String) -> m
    java.lang.String getFontSize() -> w
    void setFontSize(java.lang.String) -> n
    java.lang.String getFontWeight() -> x
    void setFontWeight(java.lang.String) -> o
    java.lang.String getFontStyle() -> y
    void setFontStyle(java.lang.String) -> p
    java.lang.String getTextDecoration() -> z
    void setTextDecoration(java.lang.String) -> q
    java.lang.String getTextAlign() -> A
    void setTextAlign(java.lang.String) -> r
    java.lang.String getTextColor() -> B
    void setTextColor(java.lang.String) -> s
    java.lang.String getTotalParaTextContent() -> C
    void setTotalParaTextContent(java.lang.String) -> t
    java.lang.String getLineHeight() -> D
    void setLineHeight(java.lang.String) -> u
    java.lang.String getTrackingLeft() -> E
    void setTrackingLeft(java.lang.String) -> v
    java.lang.String getTrackingRight() -> F
    void setTrackingRight(java.lang.String) -> w
com.mouee.android.book.entity.TextComponentLineEntity -> com.mouee.android.b.a.t:
    java.lang.String textContent -> a
    java.lang.String lineHeight -> b
    java.lang.String getTextContent() -> a
    void setTextContent(java.lang.String) -> a
    java.lang.String getLineHeight() -> b
    void setLineHeight(java.lang.String) -> b
com.mouee.android.book.entity.VideoComponentEntity -> com.mouee.android.b.a.u:
    boolean videoControlBarIsShow -> v
    boolean isVideoControlBarIsShow() -> n
    void setVideoControlBarIsShow(boolean) -> d
com.mouee.android.book.entity.moudle.MoudleComponentEntity -> com.mouee.android.b.a.a.a:
    java.lang.String moduleID -> v
    java.util.ArrayList sourceIDList -> w
    java.util.ArrayList downIDList -> x
    int itemWidth -> y
    int itemHeight -> z
    long timerDelay -> A
    java.lang.String getModuleID() -> n
    void setModuleID(java.lang.String) -> f
    java.util.ArrayList getSourceIDList() -> o
    void setSourceIDList(java.util.ArrayList) -> c
    int getItemWidth() -> p
    void setItemWidth(int) -> a
    int getItemHeight() -> q
    void setItemHeight(int) -> b
    long getTimerDelay() -> r
    void setTimerDelay(long) -> a
    java.util.ArrayList getDownIDList() -> s
    void setDownIDList(java.util.ArrayList) -> d
com.mouee.android.common.BookSetting -> com.mouee.android.c.a:
    java.lang.String BOOK_RESOURCE_DIR -> a
    java.lang.String BOOK_RESOURCESD_ROOT -> b
    java.lang.String BOOK_RESOURCE_ZIP_NAME -> c
    int SCREEN_WIDTH -> d
    int SCREEN_HEIGHT -> e
    int SNAPSHOTS_WIDTH -> f
    int SNAPSHOTS_HEIGHT -> g
    float RESIZE_WIDTH -> h
    float RESIZE_HEIGHT -> i
    float RESIZE_COUNT -> j
    boolean IS_HOR -> k
    boolean IS_AUTOPAGE -> l
    int FLIPCODE -> m
    int GALLEYCODE -> n
    boolean ISSUBPAGE_ENABLE -> o
    int INIT_SCREEN_WIDTH -> p
    int INIT_SCREEN_HEIGHT -> q
    java.lang.String CURRENTBOOKID -> r
    boolean IS_REMEMBER_READPAGE -> s
    boolean IS_HOR_VER -> t
    java.lang.String BOOK_PATH -> u
    boolean IS_READER -> v
    boolean IS_SHOW_LOADINGBAR -> w
    boolean IS_TRY -> x
    java.lang.String ScaleType -> y
com.mouee.android.common.MoueeBugHelper -> com.mouee.android.c.b:
    void passBug(java.lang.String,java.lang.String,java.lang.String) -> a
com.mouee.android.common.MoueeCallBack -> com.mouee.android.c.c:
    void doAction() -> a
com.mouee.android.common.MoueeSetting -> com.mouee.android.c.d:
    boolean IsResourceSD -> a
    boolean IS_ASSETS_ZIP -> b
    boolean IsAD -> c
    int FlipTime -> d
    int FLING_MIN_DISTANCE -> e
    int FLING_MIN_VELOCIT -> f
    int FLING_SUB_MIN_VELOCIT -> g
    boolean isHoneyComb -> h
    android.view.Display display -> i
    boolean PlayBackGroundMusic -> j
    boolean FitScreen -> k
    java.lang.String DomobADPID -> l
    boolean isCacheEnabled -> m
    boolean isSettingTumb -> n
    boolean isBookStore -> o
    boolean isAdapterView -> p
com.mouee.android.common.MyIntent -> com.mouee.android.c.e:
    android.content.Intent getHtmlFileIntent(java.lang.String) -> a
    android.content.Intent getImageFileIntent(java.lang.String) -> b
    android.content.Intent getPdfFileIntent(java.lang.String) -> c
    android.content.Intent getTextFileIntent(java.lang.String,boolean,java.lang.String) -> a
    android.content.Intent getAudioFileIntent(java.lang.String) -> d
    android.content.Intent getVideoFileIntent(java.lang.String) -> e
    android.content.Intent getChmFileIntent(java.lang.String) -> f
    android.content.Intent getWordFileIntent(java.lang.String) -> g
    android.content.Intent getExcelFileIntent(java.lang.String) -> h
    android.content.Intent getPptFileIntent(java.lang.String) -> i
com.mouee.android.controller.BookCompositeController -> com.mouee.android.d.a:
    com.mouee.android.view.ViewPage viewPage -> a
    com.mouee.android.view.ViewPage mainViewPage -> b
    com.mouee.android.book.entity.Book book -> c
    com.mouee.android.view.pageflip.AbstractPageFlipView flipView -> f
    com.mouee.android.view.pageflip.AbstractPageFlipView subPageViewFlip -> g
    int currendsectionindex -> h
    com.mouee.android.book.entity.SectionEntity section -> d
    com.mouee.android.controller.BookCompositeController bookController -> i
    java.util.ArrayList snapshots -> j
    android.widget.ImageButton preButton -> k
    android.widget.ImageButton nextButton -> l
    android.widget.ImageButton galleyButton -> m
    android.widget.ImageButton homeButton -> n
    com.mouee.android.view.component.AudioComponent backgroundMusic -> o
    com.mouee.android.view.gallary.base.AbstractGalley gallery -> p
    com.mouee.android.view.layout.MoueeRelativeLayout moueeBookLayout -> q
    android.view.WindowManager windwoManager -> r
    com.mouee.android.controller.BookCompositeController$AutoPageCountDown autoPageViewCountDown -> s
    android.view.View adView -> t
    android.widget.RelativeLayout pdfMenuBarelativeLayout -> u
    com.mouee.android.MoueeActivity moueeActivity -> v
    boolean isSettingGallery -> w
    java.lang.String newPageID -> x
    java.util.ArrayList subPageList -> y
    java.lang.String mainPageID -> z
    java.lang.String lastPageID -> e
    com.mouee.android.controller.BookCompositeController getInstance() -> a
    void loadStartPage(com.mouee.android.view.ViewPage) -> a
    void playStartPage(com.mouee.android.view.ViewPage) -> b
    void playStartPage(com.mouee.android.view.ViewPage,com.mouee.android.book.entity.PageEntity) -> a
    void playBook() -> b
    void playBookByID(com.mouee.android.view.ViewPage,java.lang.String) -> a
    void playBackgroundMusic() -> w
    void setDefaultView(int) -> a
    void pageViewPrepare() -> x
    android.graphics.Bitmap getSnapShotCashImage(com.mouee.android.book.entity.PageEntity) -> a
    void pageViewPost() -> c
    boolean isCanScreenChangeTo() -> d
    void flipPage(int) -> b
    void prePage() -> e
    void switchPage(int,int) -> a
    void nextPage() -> f
    android.widget.LinearLayout getLoadLayout() -> g
    void playPageById(java.lang.String) -> f
    void changePageById(java.lang.String) -> a
    void showPage(java.lang.String) -> g
    void goHomePage() -> h
    void startPlay() -> i
    void loadPage(java.lang.String) -> h
    com.mouee.android.book.entity.PageEntity getPageEntityByID(java.lang.String) -> b
    void flipSubPage(int) -> c
    void flipSubPageUp() -> y
    void flipSubPageDown() -> z
    void pageSubViewPrepare(int) -> e
    void flipSubPageAnimation(int) -> f
    void playSubPageFlipAnimation(boolean) -> a
    boolean runBehavior(com.mouee.android.book.entity.ComponentEntity,java.lang.String) -> a
    void runBehavior(com.mouee.android.book.entity.BehaviorEntity) -> a
    int getSectionPagePosition(java.lang.String) -> i
    boolean isPageExist(java.lang.String) -> c
    int getSectionPagePositionForGallery(java.lang.String) -> d
    void resume() -> j
    java.lang.String getSectionPageIdByPosition(int) -> d
    void initBookState() -> A
    void registerButton(android.widget.ImageButton,android.widget.ImageButton,android.widget.ImageButton,android.widget.ImageButton) -> a
    void setGarllary() -> k
    java.util.ArrayList getCurrentSnapshots() -> l
    java.lang.String getSnapshotIdByPageId(java.lang.String) -> e
    com.mouee.android.book.entity.Book getBook() -> m
    void setBook(com.mouee.android.book.entity.Book) -> a
    android.view.View getFlipView() -> n
    void setFlipView(com.mouee.android.view.pageflip.AbstractPageFlipView) -> a
    com.mouee.android.view.ViewPage getViewPage() -> o
    void setViewPage(com.mouee.android.view.ViewPage) -> c
    com.mouee.android.view.component.AudioComponent getBackgroundMusic() -> p
    void setBackgroundMusic(com.mouee.android.view.component.AudioComponent) -> a
    android.view.WindowManager getWindwoManager() -> q
    void setWindwoManager(android.view.WindowManager) -> a
    android.widget.RelativeLayout getMoueeBookLayout() -> r
    void setMoueeBookLayout(android.widget.RelativeLayout) -> a
    void setGallery(com.mouee.android.view.gallary.base.AbstractGalley) -> a
    android.view.View getAdView() -> s
    void setAdView(android.view.View) -> a
    android.widget.RelativeLayout getPdfMenuBarelativeLayout() -> t
    void setPdfMenuBarelativeLayout(android.widget.RelativeLayout) -> b
    com.mouee.android.view.pageflip.AbstractPageFlipView getSubPageViewFlip() -> u
    void setSubPageViewFlip(com.mouee.android.view.pageflip.AbstractPageFlipView) -> b
    com.mouee.android.MoueeActivity getMoueeActivity() -> v
    void setMoueeActivity(com.mouee.android.MoueeActivity) -> a
    java.lang.String access$0(com.mouee.android.controller.BookCompositeController) -> a
    void access$1(com.mouee.android.controller.BookCompositeController,java.lang.String) -> a
    int access$2(com.mouee.android.controller.BookCompositeController,java.lang.String) -> b
    void access$3(com.mouee.android.controller.BookCompositeController) -> b
    boolean access$4(com.mouee.android.controller.BookCompositeController) -> c
    com.mouee.android.view.gallary.base.AbstractGalley access$5(com.mouee.android.controller.BookCompositeController) -> d
    void access$6(com.mouee.android.controller.BookCompositeController,boolean) -> a
    void access$7(com.mouee.android.controller.BookCompositeController,java.lang.String) -> c
com.mouee.android.controller.BookCompositeController$1 -> com.mouee.android.d.b:
    com.mouee.android.controller.BookCompositeController this$0 -> a
    void doAction() -> a
com.mouee.android.controller.BookCompositeController$2 -> com.mouee.android.d.c:
    com.mouee.android.controller.BookCompositeController this$0 -> a
    void run() -> run
com.mouee.android.controller.BookCompositeController$3 -> com.mouee.android.d.d:
    com.mouee.android.controller.BookCompositeController this$0 -> a
    java.lang.String val$pageId -> b
    void run() -> run
com.mouee.android.controller.BookCompositeController$4 -> com.mouee.android.d.e:
    com.mouee.android.controller.BookCompositeController this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.controller.BookCompositeController$5 -> com.mouee.android.d.f:
    com.mouee.android.controller.BookCompositeController this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.controller.BookCompositeController$6 -> com.mouee.android.d.g:
    com.mouee.android.controller.BookCompositeController this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.mouee.android.controller.BookCompositeController$7 -> com.mouee.android.d.h:
    com.mouee.android.controller.BookCompositeController this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.mouee.android.controller.BookCompositeController$AutoPageCountDown -> com.mouee.android.d.i:
    com.mouee.android.controller.BookCompositeController this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.controller.BookController -> com.mouee.android.d.j:
    com.mouee.android.view.ViewPage viewPage -> a
    com.mouee.android.view.ViewPage mainViewPage -> b
    com.mouee.android.book.entity.Book book -> c
    com.mouee.android.view.pageflip.AbstractPageFlipView flipView -> i
    com.mouee.android.view.pageflip.AbstractPageFlipView subPageViewFlip -> j
    int currendsectionindex -> k
    com.mouee.android.book.entity.SectionEntity section -> d
    com.mouee.android.controller.BookController bookController -> l
    java.util.ArrayList snapshots -> m
    android.widget.ImageButton preButton -> n
    android.widget.ImageButton nextButton -> o
    android.widget.ImageButton galleyButton -> p
    android.widget.ImageButton homeButton -> q
    com.mouee.android.view.component.AudioComponent backgroundMusic -> r
    com.mouee.android.view.gallary.base.AbstractGalley gallery -> s
    com.mouee.android.view.layout.MoueeRelativeLayout moueeBookLayout -> t
    android.view.WindowManager windwoManager -> u
    com.mouee.android.controller.BookController$AutoPageCountDown autoPageViewCountDown -> v
    android.view.View adView -> w
    android.widget.RelativeLayout pdfMenuBarelativeLayout -> x
    com.mouee.android.MoueeActivity moueeActivity -> e
    boolean isSettingGallery -> y
    java.lang.String newPageID -> z
    android.graphics.Bitmap bl -> f
    android.graphics.Bitmap resizeBmp -> g
    java.util.ArrayList subPageList -> A
    java.lang.String mainPageID -> B
    java.lang.String lastPageID -> h
    com.mouee.android.controller.BookController getInstance() -> a
    void loadStartPage(com.mouee.android.view.ViewPage) -> a
    void playStartPage(com.mouee.android.view.ViewPage) -> b
    void playStartPage(com.mouee.android.view.ViewPage,com.mouee.android.book.entity.PageEntity) -> a
    void playBook() -> b
    void playBookByID(com.mouee.android.view.ViewPage,java.lang.String) -> a
    void playBackgroundMusic() -> w
    void setDefaultView(int) -> a
    void prepare4Switch() -> x
    android.graphics.Bitmap getSnapShotCashImage(com.mouee.android.book.entity.PageEntity) -> a
    void pageViewPost() -> c
    boolean isCanScreenChangeTo() -> d
    void flipPage(int) -> b
    void prePage() -> e
    void switchPage(int,int) -> a
    void nextPage() -> f
    android.widget.LinearLayout getLoadLayout() -> g
    void playPageById(java.lang.String) -> f
    void changePageById(java.lang.String) -> a
    void showPage(java.lang.String) -> g
    void goHomePage() -> h
    void startPlay() -> i
    void loadPage(java.lang.String) -> h
    com.mouee.android.book.entity.PageEntity getPageEntityByID(java.lang.String) -> b
    void flipSubPage(int) -> c
    void flipSubPageUp() -> y
    void flipSubPageDown() -> z
    void pageSubViewPrepare(int) -> e
    void flipSubPageAnimation(int) -> f
    void playSubPageFlipAnimation(boolean) -> a
    boolean runBehavior(com.mouee.android.book.entity.ComponentEntity,java.lang.String) -> a
    void runBehavior(com.mouee.android.book.entity.BehaviorEntity) -> a
    int getSectionPagePosition(java.lang.String) -> i
    boolean isPageExist(java.lang.String) -> c
    int getSectionPagePositionForGallery(java.lang.String) -> d
    void resume() -> j
    java.lang.String getSectionPageIdByPosition(int) -> d
    void initBookState() -> A
    void registerButton(android.widget.ImageButton,android.widget.ImageButton,android.widget.ImageButton,android.widget.ImageButton) -> a
    void setGarllary() -> k
    java.util.ArrayList getCurrentSnapshots() -> l
    java.lang.String getSnapshotIdByPageId(java.lang.String) -> e
    com.mouee.android.book.entity.Book getBook() -> m
    void setBook(com.mouee.android.book.entity.Book) -> a
    android.view.View getFlipView() -> n
    void setFlipView(com.mouee.android.view.pageflip.AbstractPageFlipView) -> a
    com.mouee.android.view.ViewPage getViewPage() -> o
    void setViewPage(com.mouee.android.view.ViewPage) -> c
    com.mouee.android.view.component.AudioComponent getBackgroundMusic() -> p
    void setBackgroundMusic(com.mouee.android.view.component.AudioComponent) -> a
    android.view.WindowManager getWindwoManager() -> q
    void setWindwoManager(android.view.WindowManager) -> a
    android.widget.RelativeLayout getMoueeBookLayout() -> r
    void setMoueeBookLayout(android.widget.RelativeLayout) -> a
    void setGallery(com.mouee.android.view.gallary.base.AbstractGalley) -> a
    android.view.View getAdView() -> s
    void setAdView(android.view.View) -> a
    android.widget.RelativeLayout getPdfMenuBarelativeLayout() -> t
    void setPdfMenuBarelativeLayout(android.widget.RelativeLayout) -> b
    com.mouee.android.view.pageflip.AbstractPageFlipView getSubPageViewFlip() -> u
    void setSubPageViewFlip(com.mouee.android.view.pageflip.AbstractPageFlipView) -> b
    com.mouee.android.MoueeActivity getMoueeActivity() -> v
    void setMoueeActivity(com.mouee.android.MoueeActivity) -> a
    java.lang.String access$0(com.mouee.android.controller.BookController) -> a
    void access$1(com.mouee.android.controller.BookController,java.lang.String) -> a
    com.mouee.android.view.pageflip.AbstractPageFlipView access$2(com.mouee.android.controller.BookController) -> b
    int access$3(com.mouee.android.controller.BookController,java.lang.String) -> b
    void access$4(com.mouee.android.controller.BookController) -> c
    boolean access$5(com.mouee.android.controller.BookController) -> d
    com.mouee.android.view.gallary.base.AbstractGalley access$6(com.mouee.android.controller.BookController) -> e
    void access$7(com.mouee.android.controller.BookController,boolean) -> a
    void access$8(com.mouee.android.controller.BookController,java.lang.String) -> c
com.mouee.android.controller.BookController$1 -> com.mouee.android.d.k:
    com.mouee.android.controller.BookController this$0 -> a
    void run() -> run
com.mouee.android.controller.BookController$2 -> com.mouee.android.d.l:
    com.mouee.android.controller.BookController this$0 -> a
    java.lang.String val$pageId -> b
    void run() -> run
com.mouee.android.controller.BookController$3 -> com.mouee.android.d.m:
    com.mouee.android.controller.BookController this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.controller.BookController$4 -> com.mouee.android.d.n:
    com.mouee.android.controller.BookController this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.controller.BookController$5 -> com.mouee.android.d.o:
    com.mouee.android.controller.BookController this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.mouee.android.controller.BookController$6 -> com.mouee.android.d.p:
    com.mouee.android.controller.BookController this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.mouee.android.controller.BookController$AutoPageCountDown -> com.mouee.android.d.q:
    com.mouee.android.controller.BookController this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.controller.BookController$MyActionOnEnd -> com.mouee.android.d.r:
    com.mouee.android.controller.BookController this$0 -> a
    void doAction() -> a
    com.mouee.android.controller.BookController access$0(com.mouee.android.controller.BookController$MyActionOnEnd) -> a
com.mouee.android.controller.BookController$MyActionOnEnd$1 -> com.mouee.android.d.s:
    com.mouee.android.controller.BookController$MyActionOnEnd this$1 -> a
    void run() -> run
com.mouee.android.controller.BookState -> com.mouee.android.d.t:
    com.mouee.android.controller.BookState bookState -> e
    boolean isFliping -> a
    boolean galleryDiaplay -> b
    boolean isPlayingViewPage -> c
    boolean isChangeTo -> d
    com.mouee.android.controller.BookState getInstance() -> a
    boolean setFlipState() -> b
    void restoreFlipState() -> c
    boolean setPlayViewPage() -> d
    boolean setGalleryDisplay() -> e
    boolean isPlayingViewPage() -> f
    void setPlayingViewPage(boolean) -> a
com.mouee.android.controller.CacheController -> com.mouee.android.d.u:
    com.mouee.android.controller.CacheController cacheController -> a
    java.util.HashMap pageEntityMap -> b
    android.os.AsyncTask pageEntityTask -> c
    com.mouee.android.book.entity.SectionEntity section -> d
    com.mouee.android.controller.CacheController getInstance() -> a
    void initPageEntityMap(android.content.Context) -> a
    com.mouee.android.book.entity.PageEntity getPageEntityByPageId(android.content.Context,java.lang.String) -> a
    com.mouee.android.book.entity.PageEntity loadPageEntity(android.content.Context,java.lang.String) -> b
    java.util.HashMap access$0(com.mouee.android.controller.CacheController) -> a
    com.mouee.android.book.entity.PageEntity access$1(com.mouee.android.controller.CacheController,android.content.Context,java.lang.String) -> a
com.mouee.android.controller.CacheController$1 -> com.mouee.android.d.v:
    com.mouee.android.controller.CacheController this$0 -> a
    android.content.Context val$context -> b
    com.mouee.android.book.entity.SectionEntity doInBackground(com.mouee.android.book.entity.SectionEntity[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.mouee.android.book.entity.SectionEntity) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mouee.android.controller.CacheController$2 -> com.mouee.android.d.w:
    com.mouee.android.controller.CacheController this$0 -> a
    android.content.Context val$context -> b
    com.mouee.android.book.entity.SectionEntity doInBackground(com.mouee.android.book.entity.SectionEntity[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.mouee.android.book.entity.SectionEntity) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mouee.android.controller.EventDispatcher -> com.mouee.android.d.x:
    com.mouee.android.controller.EventDispatcher eventDispatcher -> b
    com.mouee.android.controller.GestureDetector detector -> c
    java.util.ArrayList componentList -> d
    float oldTouchValue -> a
    com.mouee.android.controller.EventDispatcher getInstance() -> a
    void init() -> b
    void init(android.content.Context) -> a
    boolean onTouch(android.view.MotionEvent) -> e
    void registComponent(com.mouee.android.view.component.inter.Component) -> a
    boolean onDown(android.view.MotionEvent) -> a
    void onShowPress(android.view.MotionEvent) -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> d
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> b
    void onLongPress(android.view.MotionEvent) -> b
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
com.mouee.android.controller.GestureDetector -> com.mouee.android.d.y:
    int mBiggerTouchSlopSquare -> a
    int mTouchSlopSquare -> b
    int mDoubleTapSlopSquare -> c
    int mMinimumFlingVelocity -> d
    int mMaximumFlingVelocity -> e
    int LONGPRESS_TIMEOUT -> f
    int TAP_TIMEOUT -> g
    int DOUBLE_TAP_TIMEOUT -> h
    int SHOW_PRESS -> i
    int LONG_PRESS -> j
    int TAP -> k
    android.os.Handler mHandler -> l
    com.mouee.android.controller.GestureDetector$OnGestureListener mListener -> m
    com.mouee.android.controller.GestureDetector$OnDoubleTapListener mDoubleTapListener -> n
    boolean mStillDown -> o
    boolean mInLongPress -> p
    boolean mAlwaysInTapRegion -> q
    boolean mAlwaysInBiggerTapRegion -> r
    android.view.MotionEvent mCurrentDownEvent -> s
    android.view.MotionEvent mPreviousUpEvent -> t
    boolean mIsDoubleTapping -> u
    float mLastMotionY -> v
    float mLastMotionX -> w
    boolean mIsLongpressEnabled -> x
    boolean mIgnoreMultitouch -> y
    android.view.VelocityTracker mVelocityTracker -> z
    void init(android.content.Context,boolean) -> a
    void setOnDoubleTapListener(com.mouee.android.controller.GestureDetector$OnDoubleTapListener) -> a
    void setIsLongpressEnabled(boolean) -> a
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void cancel() -> b
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> a
    void dispatchLongPress() -> c
    com.mouee.android.controller.GestureDetector$OnGestureListener access$0(com.mouee.android.controller.GestureDetector) -> a
    android.view.MotionEvent access$1(com.mouee.android.controller.GestureDetector) -> b
    void access$2(com.mouee.android.controller.GestureDetector) -> c
    com.mouee.android.controller.GestureDetector$OnDoubleTapListener access$3(com.mouee.android.controller.GestureDetector) -> d
    boolean access$4(com.mouee.android.controller.GestureDetector) -> e
com.mouee.android.controller.GestureDetector$GestureHandler -> com.mouee.android.d.z:
    com.mouee.android.controller.GestureDetector this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.controller.GestureDetector$OnDoubleTapListener -> com.mouee.android.d.aa:
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> e
    boolean onDoubleTap(android.view.MotionEvent) -> f
    boolean onDoubleTapEvent(android.view.MotionEvent) -> g
com.mouee.android.controller.GestureDetector$OnGestureListener -> com.mouee.android.d.ab:
    boolean onDown(android.view.MotionEvent) -> a
    void onShowPress(android.view.MotionEvent) -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> d
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> b
    void onLongPress(android.view.MotionEvent) -> b
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
com.mouee.android.controller.GestureDetector$SimpleOnGestureListener -> com.mouee.android.d.ac:
    boolean onSingleTapUp(android.view.MotionEvent) -> d
    void onLongPress(android.view.MotionEvent) -> b
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> b
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    void onShowPress(android.view.MotionEvent) -> c
    boolean onDown(android.view.MotionEvent) -> a
    boolean onDoubleTap(android.view.MotionEvent) -> f
    boolean onDoubleTapEvent(android.view.MotionEvent) -> g
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> e
com.mouee.android.controller.PdfController -> com.mouee.android.d.ad:
    com.mouee.android.controller.PdfController pdfController -> c
    java.lang.String documentName -> a
    com.artifex.mupdf.MuPDFCore muPDFCore -> b
    com.mouee.android.controller.PdfController getInstance() -> a
    void openFile(java.lang.String) -> a
    void destroy() -> b
com.mouee.android.core.utils.BitmapManageUtil -> com.mouee.android.e.a.a:
    int HARD_CACHE_CAPACITY -> b
    android.graphics.Bitmap currentscreen -> a
    java.util.HashMap sHardBitmapCache -> c
    java.util.concurrent.ConcurrentHashMap sSoftBitmapCache -> d
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    void putBitmap(java.lang.String,android.graphics.Bitmap) -> a
    java.util.concurrent.ConcurrentHashMap access$0() -> a
com.mouee.android.core.utils.BitmapManageUtil$1 -> com.mouee.android.e.a.b:
    long serialVersionUID -> serialVersionUID
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.mouee.android.core.utils.BitmapUtil -> com.mouee.android.e.a.c:
    android.graphics.Bitmap getBitmap(android.graphics.Bitmap,int,int,int,int) -> a
    android.graphics.Bitmap getImage(android.content.Context,android.graphics.Bitmap,int,int,int,int,float,boolean) -> a
    android.graphics.drawable.Drawable getDrawableImage(android.content.Context,android.graphics.Bitmap,int,int,int,int,float) -> a
    android.graphics.drawable.Drawable[] getDrawables(android.content.Context,int,int,int,float) -> a
    android.graphics.drawable.Drawable[] getDrawables(android.content.Context,java.lang.String,int,int,float) -> a
    android.graphics.Bitmap[] getBitmaps(android.content.Context,int,int,int,float) -> b
    android.graphics.Bitmap[] getBitmaps(android.content.Context,java.lang.String,int,int,float) -> b
    android.graphics.Bitmap[] getBitmapsByBitmap(android.content.Context,android.graphics.Bitmap,int,int,float) -> a
    android.graphics.Bitmap decodeResource(android.content.Context,int) -> a
    android.graphics.Bitmap decodeBitmapFromAssets(android.content.Context,java.lang.String) -> a
    void recycleBitmap(android.graphics.Bitmap) -> a
    android.graphics.Bitmap getOneFrameImg(android.graphics.Bitmap,int,int) -> a
    void recycleBitmaps(android.graphics.Bitmap[]) -> a
    void recycleBitmaps(java.util.ArrayList) -> a
    android.graphics.Bitmap loadByResourceID(android.content.Context,java.lang.String,int,int) -> a
    android.graphics.Bitmap load(java.io.InputStream,int,int) -> a
    android.graphics.Bitmap getBitmapFromResource(android.content.Context,int) -> b
    android.graphics.Bitmap getBitmapFromFile(android.content.Context,java.lang.String) -> b
    android.graphics.Bitmap getBitmapBySourceID(android.content.Context,java.lang.String) -> c
    android.graphics.drawable.BitmapDrawable getBitmapDrawable(android.content.Context,java.lang.String) -> d
    android.graphics.Bitmap load(java.io.InputStream) -> a
    byte[] bitmapToBytes(android.graphics.Bitmap) -> b
    android.graphics.Bitmap Bytes2Bimap(byte[]) -> a
    android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable) -> a
com.mouee.android.core.utils.CommonUtils -> com.mouee.android.e.a.d:
    java.lang.String getCPUSerial() -> a
    java.lang.String getWiFiAddr(android.content.Context) -> a
    boolean isNetworkAvailable(android.content.Context) -> b
    java.lang.String getPackageName(android.content.Context) -> c
    java.lang.String getAppVersionName(android.content.Context) -> d
    int getX(int) -> a
    int getY(int) -> b
    int getWidth(int) -> c
    int getHeight(int) -> d
com.mouee.android.core.utils.Config -> com.mouee.android.e.a.e:
    int GD_LOG_LEVEL_INFO -> d
    int GD_LOG_LEVEL_WARNING -> e
    int GD_LOG_LEVEL_ERROR -> f
    int GD_LOG_LEVEL_NONE -> g
    int GD_LOG_LEVEL -> h
    boolean GD_INFO_LOGS_ENABLED -> a
    boolean GD_WARNING_LOGS_ENABLED -> b
    boolean GD_ERROR_LOGS_ENABLED -> c
com.mouee.android.core.utils.DensityUtil -> com.mouee.android.e.a.f:
    java.lang.String TAG -> a
    float dmDensityDpi -> b
    android.util.DisplayMetrics dm -> c
    float scale -> d
    float getDmDensityDpi() -> a
    void setDmDensityDpi(float) -> a
    int dip2px(float) -> b
    int px2dip(float) -> c
    java.lang.String toString() -> toString
    int DipToPixels(android.content.Context,int) -> a
    float PixelsToDip(android.content.Context,int) -> b
    android.graphics.Bitmap decodeBitmap(android.graphics.Bitmap,int,int) -> a
    void writePhotoJpg(android.graphics.Bitmap,java.lang.String) -> a
    void writePhotoPng(android.graphics.Bitmap,java.lang.String) -> b
com.mouee.android.core.utils.FileUtil -> com.mouee.android.e.a.g:
    com.mouee.android.core.utils.FileUtil fileUtil -> a
    java.lang.String bookStorePath -> b
    void init(android.content.Context) -> a
    com.mouee.android.core.utils.FileUtil getInstance() -> a
    android.content.res.AssetFileDescriptor getFileFD(android.content.Context,java.lang.String) -> a
    java.io.InputStream getFileInputStream(android.content.Context,java.lang.String) -> b
    java.lang.String getFilePath(java.lang.String) -> a
    java.io.InputStream getFileInputStream(java.lang.String) -> b
    java.io.InputStream getFileInputStreamFilePath(java.lang.String) -> c
    byte[] readFileToByteArray(android.content.Context,java.lang.String) -> c
    java.lang.String inputStream2String(java.io.InputStream) -> a
    byte[] readFileToByteArray(java.lang.String) -> d
    android.graphics.Bitmap load(java.lang.String,int,int,android.content.Context) -> a
    java.lang.String getDataFilePath(android.content.Context,java.lang.String) -> d
    java.io.File getDataFile(android.content.Context,java.lang.String) -> e
    void copyFileToData(android.content.Context,java.lang.String) -> f
    void copyFileToSDCard(android.content.Context,java.lang.String) -> g
    boolean isExist(java.lang.String) -> e
    void deleteFile(java.lang.String) -> f
    java.lang.String getBookStorePath() -> b
    void setBookStorePath(java.lang.String) -> g
    void del(java.lang.String) -> h
com.mouee.android.core.utils.ImageUtil -> com.mouee.android.e.a.h:
    android.graphics.drawable.Drawable getDrawableById(android.content.Context,int) -> a
    android.graphics.Bitmap getBitmapById(android.content.Context,int) -> b
    byte[] bitmap2byte(android.graphics.Bitmap) -> a
    android.graphics.Bitmap byte2bitmap(byte[]) -> a
    android.graphics.Bitmap drawable2bitmap(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable bitmap2Drawable(android.graphics.Bitmap) -> b
    android.graphics.Bitmap zoomBitmap(android.graphics.Bitmap,int,int) -> a
    boolean saveBitmap(android.graphics.Bitmap,java.lang.String) -> a
    boolean saveBitmap(android.graphics.Bitmap,java.lang.String,android.graphics.Bitmap$CompressFormat,int) -> a
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,float) -> a
    android.graphics.Bitmap createReflectionImageWithOrigin(android.graphics.Bitmap) -> c
com.mouee.android.core.utils.ReflectHelp -> com.mouee.android.e.a.i:
    java.lang.Object getProperty(java.lang.Object,java.lang.String) -> a
    java.lang.Object getStaticProperty(java.lang.String,java.lang.String) -> a
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    java.lang.Object invokeMethod(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    boolean isInstance(java.lang.Object,java.lang.Class) -> a
    java.lang.Object getByArray(java.lang.Object,int) -> a
com.mouee.android.core.utils.ZipUtil -> com.mouee.android.e.a.j:
    void unzip(java.io.InputStream,java.lang.String) -> a
    java.util.List GetFileList(java.lang.String,boolean,boolean) -> a
    java.io.InputStream UpZip(java.lang.String,java.lang.String) -> a
    void UnZipFolder(java.lang.String,java.lang.String) -> b
    void ZipFolder(java.lang.String,java.lang.String) -> c
    void ZipFiles(java.lang.String,java.lang.String,java.util.zip.ZipOutputStream) -> a
    void finalize() -> finalize
com.mouee.android.test.CopyOfTestClipVIew -> com.mouee.android.test.CopyOfTestClipVIew:
    android.graphics.Paint mPaint -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawScene(android.graphics.Canvas) -> a
com.mouee.android.test.DrawMask -> com.mouee.android.test.DrawMask:
    android.widget.LinearLayout reload -> a
    android.view.View mask -> b
    void onCreate(android.os.Bundle) -> onCreate
    void startOpenAnimation() -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    android.view.View access$0(com.mouee.android.test.DrawMask) -> a
com.mouee.android.test.DrawMask$1 -> com.mouee.android.test.a:
    com.mouee.android.test.DrawMask this$0 -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.mouee.android.test.ExpandableList1 -> com.mouee.android.test.ExpandableList1:
    android.widget.ExpandableListAdapter mAdapter -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
com.mouee.android.test.ExpandableList1$MyExpandableListAdapter -> com.mouee.android.test.b:
    java.lang.String[] groups -> b
    java.lang.String[][] children -> c
    com.mouee.android.test.ExpandableList1 this$0 -> a
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    int getChildrenCount(int) -> getChildrenCount
    android.widget.TextView getGenericView() -> a
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean isChildSelectable(int,int) -> isChildSelectable
    boolean hasStableIds() -> hasStableIds
com.mouee.android.test.Mask -> com.mouee.android.test.Mask:
    int width -> a
    int higth -> b
    void onDraw(android.graphics.Canvas) -> onDraw
com.mouee.android.test.MyImageView -> com.mouee.android.test.MyImageView:
    android.graphics.Bitmap bmp -> a
    android.graphics.Bitmap mBitmap -> b
    android.graphics.Matrix mMatrix -> c
    void onDraw(android.graphics.Canvas) -> onDraw
com.mouee.android.test.Myfloatview -> com.mouee.android.test.Myfloatview:
    float mTouchStartX -> g
    float mTouchStartY -> h
    float x -> i
    float y -> j
    android.graphics.drawable.AnimationDrawable frameAnimation -> a
    android.content.Context mContext -> b
    android.graphics.drawable.Drawable mBitAnimation -> c
    android.view.WindowManager wm -> d
    android.view.WindowManager$LayoutParams wmParams -> e
    android.view.ViewTreeObserver$OnPreDrawListener opdl -> f
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void updateViewPosition() -> a
com.mouee.android.test.Myfloatview$1 -> com.mouee.android.test.c:
    com.mouee.android.test.Myfloatview this$0 -> a
    boolean onPreDraw() -> onPreDraw
com.mouee.android.test.PageViewActivity -> com.mouee.android.test.PageViewActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.Scroller -> com.mouee.android.test.d:
    int mMode -> a
    int mStartX -> b
    int mStartY -> c
    int mFinalX -> d
    int mFinalY -> e
    int mMinX -> f
    int mMaxX -> g
    int mMinY -> h
    int mMaxY -> i
    int mCurrX -> j
    int mCurrY -> k
    long mStartTime -> l
    int mDuration -> m
    float mDurationReciprocal -> n
    float mDeltaX -> o
    float mDeltaY -> p
    boolean mFinished -> q
    android.view.animation.Interpolator mInterpolator -> r
    float mCoeffX -> s
    float mCoeffY -> t
    float mVelocity -> u
    int DEFAULT_DURATION -> v
    int SCROLL_MODE -> w
    int FLING_MODE -> x
    float mDeceleration -> y
    float sViscousFluidScale -> z
    float sViscousFluidNormalize -> A
    boolean isFinished() -> a
    void forceFinished(boolean) -> a
    int getDuration() -> b
    int getCurrX() -> c
    int getCurrY() -> d
    float getCurrVelocity() -> e
    int getStartX() -> f
    int getStartY() -> g
    int getFinalX() -> h
    int getFinalY() -> i
    boolean computeScrollOffset() -> j
    void startScroll(int,int,int,int) -> a
    void startScroll(int,int,int,int,int) -> a
    void fling(int,int,int,int,int,int,int,int) -> a
    float viscousFluid(float) -> a
    void abortAnimation() -> k
    void extendDuration(int) -> a
    int timePassed() -> l
    void setFinalX(int) -> b
    void setFinalY(int) -> c
com.mouee.android.test.Test -> com.mouee.android.test.e:
    void main(java.lang.String[]) -> a
    int fromArray(byte[]) -> a
    void readXML(java.io.InputStream) -> a
com.mouee.android.test.Test3DFlip -> com.mouee.android.test.Test3DFlip:
    android.graphics.Bitmap mCurPageBitmap -> a
    android.graphics.Bitmap mNextPageBitmap -> b
    android.graphics.Canvas mCurPageCanvas -> c
    android.graphics.Canvas mNextPageCanvas -> d
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestAnimation -> com.mouee.android.test.TestAnimation:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestBookDecoder -> com.mouee.android.test.TestBookDecoder:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestClip -> com.mouee.android.test.TestClip:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestClipVIew -> com.mouee.android.test.TestClipVIew:
    android.graphics.Paint mPaint -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawScene(android.graphics.Canvas) -> a
com.mouee.android.test.TestExpandableList -> com.mouee.android.test.TestExpandableList:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestGif -> com.mouee.android.test.TestGif:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestImageView -> com.mouee.android.test.TestImageView:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestImageViewRotateActivity -> com.mouee.android.test.TestImageViewRotateActivity:
    android.graphics.Bitmap resizeBmp -> a
    android.graphics.Matrix mMatrix -> b
    void onCreate(android.os.Bundle) -> onCreate
    void load(java.io.InputStream) -> a
com.mouee.android.test.TestOpenFile -> com.mouee.android.test.TestOpenFile:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestScrollTextView -> com.mouee.android.test.TestScrollTextView:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestSurfaceView -> com.mouee.android.test.TestSurfaceView:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestSurfaceView$MyView -> com.mouee.android.test.TestSurfaceView$MyView:
    android.view.SurfaceHolder holder -> a
    android.graphics.Bitmap bitmap -> b
    com.mouee.android.test.TestSurfaceView this$0 -> c
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    android.graphics.Bitmap loadBitmap(java.io.InputStream) -> a
com.mouee.android.test.TestSurfaceView$MyView$MyThread -> com.mouee.android.test.f:
    com.mouee.android.test.TestSurfaceView$MyView this$1 -> a
    void run() -> run
com.mouee.android.test.TestTransformMatrixActivity -> com.mouee.android.test.TestTransformMatrixActivity:
    com.mouee.android.test.TestTransformMatrixActivity$TransformMatrixView view -> b
    int i -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.test.TestTransformMatrixActivity$TransformMatrixView -> com.mouee.android.test.TestTransformMatrixActivity$TransformMatrixView:
    android.graphics.Bitmap bitmap -> b
    android.graphics.Matrix matrix -> c
    com.mouee.android.test.TestTransformMatrixActivity this$0 -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    android.graphics.Bitmap getImageBitmap() -> a
com.mouee.android.test.TestVideo -> com.mouee.android.test.TestVideo:
    void onCreate(android.os.Bundle) -> onCreate
com.mouee.android.test.TestViewPage -> com.mouee.android.test.TestViewPage:
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.mouee.android.test.TestWindowsView -> com.mouee.android.test.g:
com.mouee.android.test.Testaaa -> com.mouee.android.test.h:
    void main(java.lang.String[]) -> a
com.mouee.android.test.VideoTest -> com.mouee.android.test.VideoTest:
    com.mouee.android.view.component.VideoComponent surfaceView -> a
    android.view.SurfaceHolder surfaceHolder -> b
    void onCreate(android.os.Bundle) -> onCreate
    void PlayVideo() -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.mouee.android.test.ViewPage1 -> com.mouee.android.test.ViewPage1:
    void onLayout(boolean,int,int,int,int) -> onLayout
com.mouee.android.test.flip.AbstractPageWidget -> com.mouee.android.test.flip.AbstractPageWidget:
    android.graphics.Bitmap mCurPageBitmap -> a
    android.graphics.Bitmap mNextPageBitmap -> b
    com.mouee.android.test.flip.BookPageFactory bookPageFactory -> c
    void setBitmaps(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void setBookPageFactory(com.mouee.android.test.flip.BookPageFactory) -> a
    void abortAnimation() -> a
    boolean eventHandler(android.view.View,android.view.MotionEvent,android.graphics.Canvas,android.graphics.Canvas) -> a
    boolean doTouchEvent(android.view.MotionEvent) -> a
com.mouee.android.test.flip.BookPageFactory -> com.mouee.android.test.flip.a:
    java.io.File book_file -> b
    java.nio.MappedByteBuffer m_mbBuf -> c
    int m_mbBufLen -> d
    int m_mbBufBegin -> e
    int m_mbBufEnd -> f
    java.lang.String m_strCharsetName -> g
    android.graphics.Bitmap m_book_bg -> h
    int mWidth -> i
    int mHeight -> j
    java.util.Vector m_lines -> k
    int m_fontSize -> l
    int m_textColor -> m
    int m_backColor -> n
    int marginWidth -> o
    int marginHeight -> p
    int mLineCount -> q
    float mVisibleHeight -> r
    float mVisibleWidth -> s
    boolean m_isfirstPage -> t
    boolean m_islastPage -> u
    android.graphics.Paint mPaint -> v
    java.text.DecimalFormat df -> a
    void openbook(java.lang.String) -> a
    byte[] readParagraphBack(int) -> a
    byte[] readParagraphForward(int) -> b
    java.util.Vector pageDown() -> a
    void pageUp() -> b
    void prePage() -> c
    void nextPage() -> d
    void onDraw(android.graphics.Canvas) -> a
    void setBgBitmap(android.graphics.Bitmap) -> a
    boolean isfirstPage() -> e
    boolean islastPage() -> f
com.mouee.android.test.flip.PageWidgentFactory -> com.mouee.android.test.flip.b:
    java.lang.String COMMON_PAGE_FLIPPER -> a
    java.lang.String SLIDE_PAGE_FLIPPER -> b
    com.mouee.android.test.flip.AbstractPageWidget createPageWidget(java.lang.String,android.content.Context) -> a
com.mouee.android.test.flip.PageWidget -> com.mouee.android.test.flip.PageWidget:
    int mWidth -> H
    int mHeight -> I
    int mCornerX -> J
    int mCornerY -> K
    android.graphics.Path mPath0 -> L
    android.graphics.Path mPath1 -> M
    android.graphics.PointF mTouch -> d
    android.graphics.PointF mBezierStart1 -> e
    android.graphics.PointF mBezierControl1 -> f
    android.graphics.PointF mBeziervertex1 -> g
    android.graphics.PointF mBezierEnd1 -> h
    android.graphics.PointF mBezierStart2 -> i
    android.graphics.PointF mBezierControl2 -> j
    android.graphics.PointF mBeziervertex2 -> k
    android.graphics.PointF mBezierEnd2 -> l
    float mMiddleX -> m
    float mMiddleY -> n
    float mDegrees -> o
    float mTouchToCornerDis -> p
    android.graphics.ColorMatrixColorFilter mColorMatrixFilter -> q
    android.graphics.Matrix mMatrix -> r
    float[] mMatrixArray -> s
    boolean mIsRTandLB -> t
    float mMaxLength -> u
    int[] mBackShadowColors -> v
    int[] mFrontShadowColors -> w
    android.graphics.drawable.GradientDrawable mBackShadowDrawableLR -> x
    android.graphics.drawable.GradientDrawable mBackShadowDrawableRL -> y
    android.graphics.drawable.GradientDrawable mFolderShadowDrawableLR -> z
    android.graphics.drawable.GradientDrawable mFolderShadowDrawableRL -> A
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableHBT -> B
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableHTB -> C
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableVLR -> D
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableVRL -> E
    android.graphics.Paint mPaint -> F
    android.widget.Scroller mScroller -> G
    void calcCornerXY(float,float) -> a
    boolean doTouchEvent(android.view.MotionEvent) -> a
    android.graphics.PointF getCross(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> a
    void calcPoints() -> d
    void drawCurrentPageArea(android.graphics.Canvas,android.graphics.Bitmap,android.graphics.Path) -> a
    void drawNextPageAreaAndShadow(android.graphics.Canvas,android.graphics.Bitmap) -> a
    void setScreen(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void createDrawable() -> e
    void drawCurrentPageShadow(android.graphics.Canvas) -> a
    void drawCurrentBackArea(android.graphics.Canvas,android.graphics.Bitmap) -> b
    void computeScroll() -> computeScroll
    void startAnimation(int) -> a
    void abortAnimation() -> a
    boolean canDragOver() -> b
    boolean DragToRight() -> c
    boolean eventHandler(android.view.View,android.view.MotionEvent,android.graphics.Canvas,android.graphics.Canvas) -> a
com.mouee.android.test.flip.PageWidget1 -> com.mouee.android.test.flip.PageWidget1:
    android.graphics.Bitmap mCurPageBitmap -> d
    android.graphics.Bitmap mNextPageBitmap -> e
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCurrentPageArea(android.graphics.Canvas,android.graphics.Bitmap,android.graphics.Path) -> a
    void drawCurrentPageShadow(android.graphics.Canvas) -> a
    void drawNextPageAreaAndShadow(android.graphics.Canvas,android.graphics.Bitmap) -> a
    void drawCurrentBackArea(android.graphics.Canvas,android.graphics.Bitmap) -> b
    void setBitmaps(android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void abortAnimation() -> a
    void calcCornerXY(float,float) -> a
    boolean doTouchEvent(android.view.MotionEvent) -> a
    boolean eventHandler(android.view.View,android.view.MotionEvent,android.graphics.Canvas,android.graphics.Canvas) -> a
com.mouee.android.util.StringUtils -> com.mouee.android.f.a:
    java.lang.String C_String_Date_Format -> a
    java.lang.String C_String_Date_Time_Format -> b
    java.text.SimpleDateFormat dateFormater -> c
    java.text.SimpleDateFormat dateTimeFormater -> d
    java.lang.String formatNowDate(java.lang.String[]) -> a
    java.lang.String formatNowDateTime(java.lang.String[]) -> b
    java.lang.String formatDate(java.util.Date,java.lang.String[]) -> a
    java.lang.String formatDateTime(java.util.Date,java.lang.String[]) -> b
    java.lang.String contactForPath(java.lang.String[]) -> c
    java.lang.String contactForFile(java.lang.String[]) -> d
    boolean isEmpty(java.lang.String) -> a
    java.lang.String getParameter(java.lang.String,int,java.lang.String) -> a
    int getParameter(java.lang.String,int,int) -> a
    java.lang.String file2String(java.io.File,java.lang.String) -> a
com.mouee.android.view.ViewPage -> com.mouee.android.view.ViewPage:
    java.lang.String PAGE_TYPE_HOR -> a
    java.lang.String PAGE_TYPE_VER -> b
    com.mouee.android.book.entity.Book book -> f
    com.mouee.android.book.entity.PageEntity entity -> g
    int pageX -> h
    int pageWidth -> i
    int pageY -> j
    int pageHeight -> k
    boolean issequence -> l
    long touchtime -> m
    int groupindex -> n
    long maxtime -> o
    com.mouee.android.view.ViewPage$MyCount mc -> p
    java.util.ArrayList videoComponnetList -> q
    com.mouee.android.view.ViewPageState viewPageState -> r
    int autoPlayCount -> c
    int autoPlayFinishCount -> s
    com.mouee.android.common.MoueeCallBack mMoueeCallBack -> d
    com.mouee.android.view.ViewPage$AutoPageCountDown autoPageViewCountDown -> e
    com.mouee.android.book.entity.PageEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.PageEntity) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams getCurrentLayoutParams() -> b
    void fitScreen() -> v
    void load(com.mouee.android.book.entity.PageEntity) -> b
    void startPlay() -> c
    void setPageCompletion(com.mouee.android.common.MoueeCallBack) -> a
    void playVideo() -> d
    android.graphics.Bitmap getCurrentScreen() -> e
    void pause() -> f
    void resume() -> g
    void stop() -> h
    void setBK() -> w
    void load() -> x
    void measureAndAdd(com.mouee.android.view.component.inter.Component) -> a
    void stopSequence() -> y
    void hideMenu() -> i
    void playSequence() -> j
    com.mouee.android.view.component.inter.Component getComponentByID(java.lang.String) -> a
    void computeScroll() -> computeScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isHasChildPage() -> k
    void clean() -> l
    void cleanForChangePage() -> m
    int getPageX() -> n
    void setPageX(int) -> a
    int getPageWidth() -> o
    void setPageWidth(int) -> b
    int getPageY() -> p
    void setPageY(int) -> c
    int getPageHeight() -> q
    void setPageHeight(int) -> d
    com.mouee.android.book.entity.Book getBook() -> r
    void setBook(com.mouee.android.book.entity.Book) -> a
    boolean getIsSequence() -> s
    com.mouee.android.view.ViewPageState getViewPageState() -> t
    void setViewPageState(com.mouee.android.view.ViewPageState) -> a
    void setPlayComplete() -> u
com.mouee.android.view.ViewPage$AutoPageCountDown -> com.mouee.android.view.a:
    com.mouee.android.view.ViewPage this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.ViewPage$MyCount -> com.mouee.android.view.b:
    com.mouee.android.view.ViewPage this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.ViewPage$MyCount1 -> com.mouee.android.view.c:
    com.mouee.android.view.component.inter.Component component -> a
    com.mouee.android.view.ViewPage this$0 -> b
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.ViewPageState -> com.mouee.android.view.d:
    boolean papared -> a
    boolean playing -> b
    boolean stopped -> c
    boolean idied -> d
    void setIdiled() -> a
    void setStoped() -> b
    boolean isPapared() -> c
    void setPapared(boolean) -> a
    boolean isPlaying() -> d
    void setPlaying(boolean) -> b
    boolean isStopped() -> e
    void setStopped(boolean) -> c
    boolean isIdied() -> f
    void setIdied(boolean) -> d
com.mouee.android.view.component.AudioComponent -> com.mouee.android.view.component.AudioComponent:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.media.MediaPlayer mediaPlayer -> c
    com.mouee.android.view.component.listener.OnBehaviorListener audioComponentListener -> d
    java.util.ArrayList anims -> b
    com.mouee.android.view.component.listener.OnComponentCallbackListener onComponentCallbackListener -> e
    android.widget.ImageView img -> f
    android.widget.SeekBar mSeekBar -> g
    int totalMileSeconds -> h
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> i
    android.os.Handler mHandler -> j
    boolean isPaused -> k
    boolean isStopped -> l
    boolean isPlaying -> m
    boolean init -> n
    boolean isCompleted -> o
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    int setProgress() -> n
    void loadStream() -> d
    void load(java.io.InputStream) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void play() -> e
    void initPlaying() -> o
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void stop() -> f
    void pause() -> pause
    void resume() -> resume
    void playOrStop() -> g
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void stopAnimation() -> i
    void hide() -> j
    void show() -> k
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void registerCallbackListener(com.mouee.android.view.component.listener.OnComponentCallbackListener) -> a
    void recyle() -> l
    void callBackListener() -> m
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.os.Handler access$0(com.mouee.android.view.component.AudioComponent) -> a
    android.media.MediaPlayer access$1(com.mouee.android.view.component.AudioComponent) -> b
    void access$2(com.mouee.android.view.component.AudioComponent,int) -> a
    int access$3(com.mouee.android.view.component.AudioComponent) -> c
    int access$4(com.mouee.android.view.component.AudioComponent) -> d
com.mouee.android.view.component.AudioComponent$1 -> com.mouee.android.view.component.a:
    com.mouee.android.view.component.AudioComponent this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.mouee.android.view.component.AudioComponent$2 -> com.mouee.android.view.component.b:
    com.mouee.android.view.component.AudioComponent this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.AudioComponent$3 -> com.mouee.android.view.component.c:
    com.mouee.android.view.component.AudioComponent this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.mouee.android.view.component.Behavior -> com.mouee.android.view.component.d:
    java.lang.String BEHAVIOR_ON_SHOW -> a
    java.lang.String BEHAVIRO_ON_AUDIO_VIDEO_PLAY -> b
    java.lang.String BEHAVIOR_ON_AUDIO_VIDEO_END -> c
    java.lang.String BEHAVIOR_ON_HIDE -> d
    java.lang.String BEHAVIOR_ON_ANIMATION_PLAY -> e
    java.lang.String BEHAVIOR_ON_ANIMATION_END -> f
    java.lang.String BEHAVIOR_ON_CLICK -> g
    java.lang.String BEHAVIOR_ON_TEMPLATE_ITEM_CLICK -> h
    java.lang.String BEHAVIOR_ON_CLICK_UP -> i
    java.lang.String BEHAVIOR_ON_MOUSE_DOWN -> j
    java.lang.String BEHAVIOR_ON_TEMPLATE_ITEM_CHANGE_COMPLETE -> k
com.mouee.android.view.component.ComponentListener -> com.mouee.android.view.component.e:
    void registerCallbackListener(com.mouee.android.view.component.listener.OnComponentCallbackListener) -> a
    void callBackListener() -> m
com.mouee.android.view.component.HTMLComponent -> com.mouee.android.view.component.HTMLComponent:
    com.mouee.android.book.entity.HTMLComponentEntity _entity -> a
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
com.mouee.android.view.component.ImageComponent -> com.mouee.android.view.component.ImageComponent:
    java.lang.Object realObject -> o
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.view.animation.AnimationSet animationset -> b
    com.mouee.android.view.component.listener.OnComponentCallbackListener onComponentCallbackListener -> p
    android.graphics.Bitmap bitmap -> c
    android.graphics.Bitmap resizeBmp -> d
    boolean mPausing -> q
    boolean isSendAutoPage -> r
    android.graphics.Bitmap bp -> e
    float last_x -> f
    float last_y -> g
    int lastX -> h
    int lastY -> i
    boolean isSpot -> j
    com.mouee.android.view.component.inter.Component component -> k
    boolean isOutExcute -> l
    boolean isInExcute -> m
    boolean isEndHide -> s
    boolean isClearAnimation -> t
    com.mouee.android.view.component.ImageComponent$MyCount1 count -> n
    int repeatCount -> u
    float deltaX -> v
    float deltaY -> w
    int repeat -> x
    void load() -> c
    void loadBitmap() -> d
    void load(java.io.InputStream) -> a
    android.graphics.Bitmap rotateImg(android.graphics.Bitmap,float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isInside(android.view.MotionEvent) -> a
    void hotRectBeheavor(android.view.MotionEvent) -> b
    void picMove(android.view.MotionEvent) -> c
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void playAnimation() -> h
    void play() -> e
    void setRotation(float) -> a
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void pause() -> pause
    void registerCallbackListener(com.mouee.android.view.component.listener.OnComponentCallbackListener) -> a
    void recyle() -> l
    void callBackListener() -> m
com.mouee.android.view.component.ImageComponent$MyCount1 -> com.mouee.android.view.component.f:
    com.mouee.android.view.component.ImageComponent this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.component.ImageGifComponent -> com.mouee.android.view.component.ImageGifComponent:
    boolean mPausing -> o
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.view.animation.AnimationSet animationset -> b
    java.util.ArrayList bitmapList -> p
    int duration -> q
    int currentIndex -> r
    com.mouee.android.view.component.listener.OnComponentCallbackListener onComponentCallbackListener -> s
    boolean isOnetime -> t
    java.util.ArrayList sourceIDS -> u
    android.graphics.Bitmap currentBitmap -> c
    float last_x -> d
    float last_y -> e
    int lastX -> f
    int lastY -> g
    boolean isSpot -> h
    com.mouee.android.view.component.inter.Component component -> i
    boolean isOutExcute -> j
    boolean isInExcute -> k
    com.mouee.android.view.component.ImageGifComponent$MyCount1 count -> l
    int repeatCount -> v
    boolean isEndHide -> w
    float deltaX -> x
    float deltaY -> y
    int repeat -> m
    boolean mRunning -> n
    int FLIP_MSG -> z
    android.os.Handler mHandler -> A
    int iCount -> B
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void load() -> c
    void loadGifFrame() -> p
    android.graphics.Bitmap setThisBitmap(java.io.InputStream) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void hotRectBeheavor(android.view.MotionEvent) -> a
    void picMove(android.view.MotionEvent) -> b
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void registerCallbackListener(com.mouee.android.view.component.listener.OnComponentCallbackListener) -> a
    void recyle() -> l
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void loadNextBItmap() -> q
    float getDeltaX() -> d
    float getDeltaY() -> g
    void onClick() -> n
    void callBackListener() -> m
    boolean isOnetime() -> o
    void setOnetime(boolean) -> a
    void access$0(com.mouee.android.view.component.ImageGifComponent) -> a
    int access$1(com.mouee.android.view.component.ImageGifComponent) -> b
com.mouee.android.view.component.ImageGifComponent$1 -> com.mouee.android.view.component.g:
    com.mouee.android.view.component.ImageGifComponent this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.ImageGifComponent$MyCount1 -> com.mouee.android.view.component.h:
    com.mouee.android.view.component.ImageGifComponent this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.component.ImageWipeComponent -> com.mouee.android.view.component.ImageWipeComponent:
    android.widget.ImageView imageView -> e
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.view.animation.AnimationSet animationset -> b
    com.mouee.android.animation.AnimationLoader aniloder -> f
    android.view.animation.Animation containerAn -> g
    com.mouee.android.view.component.listener.OnComponentCallbackListener onComponentCallbackListener -> h
    android.graphics.Bitmap resizeBmp -> c
    android.graphics.Bitmap bitmap -> d
    boolean mPausing -> i
    android.view.animation.AnimationSet getAnimationset() -> d
    void setAnimationset(android.view.animation.AnimationSet) -> a
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void pause() -> pause
    void registerCallbackListener(com.mouee.android.view.component.listener.OnComponentCallbackListener) -> a
    void recyle() -> l
    void callBackListener() -> m
com.mouee.android.view.component.ImageWipeGifComponent -> com.mouee.android.view.component.ImageWipeGifComponent:
    com.mouee.android.view.component.ImageGifComponent imageGifComponent -> c
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.view.animation.AnimationSet animationset -> b
    com.mouee.android.animation.AnimationLoader aniloder -> d
    android.view.animation.Animation containerAn -> e
    com.mouee.android.view.component.listener.OnComponentCallbackListener onComponentCallbackListener -> f
    boolean mPausing -> g
    int repeatCount -> h
    android.view.animation.AnimationSet getAnimationset() -> d
    void setAnimationset(android.view.animation.AnimationSet) -> a
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void pause() -> pause
    void registerCallbackListener(com.mouee.android.view.component.listener.OnComponentCallbackListener) -> a
    void recyle() -> l
    void callBackListener() -> m
com.mouee.android.view.component.ImageZoomComponent -> com.mouee.android.view.component.ImageZoomComponent:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.view.animation.AnimationSet animationset -> b
    com.mouee.android.view.component.listener.OnComponentCallbackListener onComponentCallbackListener -> B
    boolean mPausing -> C
    android.graphics.Bitmap bitmap -> c
    android.graphics.Bitmap resizeBmp -> d
    android.graphics.Bitmap bp -> e
    com.mouee.android.view.component.ImageZoomComponent$MyCount1 count -> f
    int repeatCount -> D
    boolean isEndHide -> E
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void registerCallbackListener(com.mouee.android.view.component.listener.OnComponentCallbackListener) -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void callBackListener() -> m
    void recyle() -> l
com.mouee.android.view.component.ImageZoomComponent$MyCount1 -> com.mouee.android.view.component.i:
    com.mouee.android.view.component.ImageZoomComponent this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.component.MoueeVideoView -> com.mouee.android.view.component.MoueeVideoView:
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
com.mouee.android.view.component.PDFDocumentViewComponent -> com.mouee.android.view.component.PDFDocumentViewComponent:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
com.mouee.android.view.component.PDFDocumentViewComponentMU -> com.mouee.android.view.component.PDFDocumentViewComponentMU:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    com.artifex.mupdf.ReaderViewEnbed readerViewEnbed -> b
    android.widget.ImageView imageView -> c
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void removeImageView() -> d
    void load(java.io.InputStream) -> a
    void requestLayout() -> requestLayout
    void onMeasure(int,int) -> onMeasure
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void onLayout(boolean,int,int,int,int) -> onLayout
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
com.mouee.android.view.component.ScrollTextViewComponent -> com.mouee.android.view.component.ScrollTextViewComponent:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.view.animation.AnimationSet animationset -> b
    boolean isAutoScroll -> f
    com.mouee.android.view.component.textview.TextViewComponent textView -> c
    android.os.Handler myHandler -> d
    com.mouee.android.view.component.ScrollTextViewComponent$MyThread autoThread -> e
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void load() -> c
    void onLayout(boolean,int,int,int,int) -> onLayout
    void scrollText() -> d
    void autoScroll() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void setFontSize(java.lang.String) -> a
    void access$0(com.mouee.android.view.component.ScrollTextViewComponent) -> a
    boolean access$1(com.mouee.android.view.component.ScrollTextViewComponent) -> b
com.mouee.android.view.component.ScrollTextViewComponent$1 -> com.mouee.android.view.component.j:
    com.mouee.android.view.component.ScrollTextViewComponent this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.ScrollTextViewComponent$MyThread -> com.mouee.android.view.component.k:
    com.mouee.android.view.component.ScrollTextViewComponent this$0 -> a
    void run() -> run
com.mouee.android.view.component.ScrollTextViewComponentEN -> com.mouee.android.view.component.ScrollTextViewComponentEN:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.view.animation.AnimationSet animationset -> b
    boolean isAutoScroll -> f
    com.mouee.android.view.component.textview.TextViewComponentEN textView -> c
    android.os.Handler myHandler -> d
    com.mouee.android.view.component.ScrollTextViewComponentEN$MyThread autoThread -> e
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void load() -> c
    void onLayout(boolean,int,int,int,int) -> onLayout
    void scrollText() -> d
    void autoScroll() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void access$0(com.mouee.android.view.component.ScrollTextViewComponentEN) -> a
    boolean access$1(com.mouee.android.view.component.ScrollTextViewComponentEN) -> b
com.mouee.android.view.component.ScrollTextViewComponentEN$1 -> com.mouee.android.view.component.l:
    com.mouee.android.view.component.ScrollTextViewComponentEN this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.ScrollTextViewComponentEN$MyThread -> com.mouee.android.view.component.m:
    com.mouee.android.view.component.ScrollTextViewComponentEN this$0 -> a
    void run() -> run
com.mouee.android.view.component.VideoComponent -> com.mouee.android.view.component.VideoComponent:
    com.mouee.android.book.entity.VideoComponentEntity entity -> a
    android.media.MediaPlayer mediaPlayer -> b
    android.content.Context context -> e
    boolean isStopped -> f
    java.util.ArrayList anims -> c
    boolean initState -> g
    boolean isPaused -> h
    boolean isPlaying -> i
    com.mouee.android.view.component.listener.OnComponentCallbackListener onComponentCallbackListener -> j
    com.mouee.android.view.component.moudle.MoueeMediaController popupWindow -> k
    com.mouee.android.common.MoueeCallBack doCompletAction -> d
    android.media.MediaPlayer getMediaPlayer() -> d
    void setMediaPlayer(android.media.MediaPlayer) -> a
    void pause() -> pause
    void play() -> e
    void initPlaying() -> g
    void playVideo() -> n
    void loadStream() -> o
    void load() -> c
    void stop() -> f
    void showPopUp() -> p
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load(java.io.InputStream) -> a
    void resume() -> resume
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void stopAnimation() -> i
    void hide() -> j
    void show() -> k
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void registerCallbackListener(com.mouee.android.view.component.listener.OnComponentCallbackListener) -> a
    void callBackListener() -> m
    void recyle() -> l
    boolean canPause() -> canPause
    boolean canSeekBackward() -> canSeekBackward
    boolean canSeekForward() -> canSeekForward
    int getBufferPercentage() -> getBufferPercentage
    int getCurrentPosition() -> getCurrentPosition
    int getDuration() -> getDuration
    boolean isPlaying() -> isPlaying
    void seekTo(int) -> seekTo
    void start() -> start
    com.mouee.android.view.component.moudle.MoueeMediaController access$0(com.mouee.android.view.component.VideoComponent) -> a
    void access$1(com.mouee.android.view.component.VideoComponent) -> b
    boolean access$2(com.mouee.android.view.component.VideoComponent) -> c
    void access$3(com.mouee.android.view.component.VideoComponent,boolean) -> a
    void access$4(com.mouee.android.view.component.VideoComponent) -> d
com.mouee.android.view.component.VideoComponent$1 -> com.mouee.android.view.component.n:
    com.mouee.android.view.component.VideoComponent this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.mouee.android.view.component.VideoComponent$2 -> com.mouee.android.view.component.o:
    com.mouee.android.view.component.VideoComponent this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.view.component.VideoComponent$3 -> com.mouee.android.view.component.p:
    com.mouee.android.view.component.VideoComponent this$0 -> a
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.mouee.android.view.component.WebComponent -> com.mouee.android.view.component.WebComponent:
    com.mouee.android.book.entity.ComponentEntity entity -> d
    java.util.ArrayList anims -> a
    boolean loadingFinished -> b
    boolean redirect -> c
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void load() -> c
    void load(java.io.InputStream) -> a
    void play() -> e
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void pause() -> pause
com.mouee.android.view.component.WebComponent$1 -> com.mouee.android.view.component.q:
    com.mouee.android.view.component.WebComponent this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.mouee.android.view.component.helper.ComponentHelper -> com.mouee.android.view.component.a.a:
    java.util.HashMap componentMap -> b
    java.lang.String COMPONENT_VIDEO_CLASS -> a
    java.lang.String getComponentClassName(java.lang.String) -> a
    com.mouee.android.view.component.inter.Component getComponent(com.mouee.android.book.entity.ContainerEntity,android.view.View) -> a
    float[] computeFactRect(float,float,float,float,float,com.mouee.android.book.entity.ComponentEntity) -> a
com.mouee.android.view.component.helper.ComponentLoadTask -> com.mouee.android.view.component.a.b:
    com.mouee.android.view.component.inter.Component doInBackground(com.mouee.android.view.component.inter.Component[]) -> a
    void onPostExecute(com.mouee.android.view.component.inter.Component) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mouee.android.view.component.helper.ComponentMoudleHelper -> com.mouee.android.view.component.a.c:
    java.util.HashMap moduleMap -> a
    com.mouee.android.view.component.inter.Component getComponent(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
com.mouee.android.view.component.inter.Component -> com.mouee.android.view.component.b.a:
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
com.mouee.android.view.component.inter.ComponentDelta -> com.mouee.android.view.component.b.b:
    float getDeltaX() -> d
    float getDeltaY() -> g
    void onClick() -> n
com.mouee.android.view.component.inter.ComponentPost -> com.mouee.android.view.component.b.c:
    void recyle() -> l
com.mouee.android.view.component.listener.OnBehaviorListener -> com.mouee.android.view.component.c.a:
    void onVideoStart() -> a
    void onVideoEnd() -> b
    void onVideoResume() -> c
com.mouee.android.view.component.listener.OnComponentCallbackListener -> com.mouee.android.view.component.c.b:
    void setPlayComplete() -> u
com.mouee.android.view.component.moudle.CatalogModel -> com.mouee.android.view.component.moudle.CatalogModel:
    android.widget.LinearLayout galleryrl -> a
    android.content.Context _con -> b
    android.graphics.BitmapFactory$Options _option -> c
    java.util.ArrayList imagelist -> f
    boolean CHANGEBUTTON -> d
    boolean ISHORIZONTAL -> e
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void recyle() -> d
com.mouee.android.view.component.moudle.CatalogModel$1 -> com.mouee.android.view.component.moudle.a:
    com.mouee.android.view.component.moudle.CatalogModel this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.view.component.moudle.CatalogModel$runview -> com.mouee.android.view.component.moudle.b:
    java.lang.String _name -> a
    int _index -> b
    com.mouee.android.view.component.moudle.CatalogModel this$0 -> c
    void run() -> run
com.mouee.android.view.component.moudle.GalleryComponent -> com.mouee.android.view.component.moudle.GalleryComponent:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    int height -> b
    int width -> c
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
com.mouee.android.view.component.moudle.GalleyCommonAdapter -> com.mouee.android.view.component.moudle.c:
    java.util.ArrayList snaps -> a
    int width -> b
    int height -> c
    android.graphics.BitmapFactory$Options options -> d
    android.content.Context mContext -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mouee.android.view.component.moudle.Mouee3DViewFlipper -> com.mouee.android.view.component.moudle.Mouee3DViewFlipper:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    java.util.ArrayList bitMapList -> h
    java.util.ArrayList sourceIDS -> b
    android.graphics.Bitmap bitmap -> c
    float oldTouchValue -> i
    int currentID -> d
    boolean mRunning -> e
    boolean mLeft -> f
    boolean mStart -> g
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    android.graphics.Bitmap getBitMap(java.lang.String) -> a
    android.graphics.Bitmap loadBitmap(java.io.InputStream) -> b
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void loadNextBitmap(boolean) -> a
    void setImageBitmapOnly(int) -> a
    void doBehaiors(int) -> b
    java.util.ArrayList getBitMapList() -> d
    void setBitMapList(java.util.ArrayList) -> a
com.mouee.android.view.component.moudle.MoueeCarouselImageUIComponent -> com.mouee.android.view.component.moudle.MoueeCarouselImageUIComponent:
    int selectedViewCenter -> a
    float minScaleRate -> b
    android.graphics.Camera camera -> c
    com.mouee.android.book.entity.ComponentEntity mEntity -> d
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation) -> getChildStaticTransformation
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
com.mouee.android.view.component.moudle.MoueeHorRightUIComponent -> com.mouee.android.view.component.moudle.MoueeHorRightUIComponent:
    com.mouee.android.book.entity.moudle.MoudleComponentEntity componentEntity -> a
    android.widget.LinearLayout contentLayout -> b
    android.widget.LinearLayout btnLayout -> c
    android.content.Context mContext -> d
    boolean isLock -> e
    java.util.ArrayList upMapList -> f
    java.util.ArrayList downMapList -> g
    void hideMenu() -> d
    void showMenu() -> g
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    android.graphics.drawable.StateListDrawable getButtonDrawable(int) -> a
    android.graphics.Bitmap createBitmap(java.io.InputStream) -> b
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void access$0(com.mouee.android.view.component.moudle.MoueeHorRightUIComponent,boolean) -> a
com.mouee.android.view.component.moudle.MoueeHorRightUIComponent$1 -> com.mouee.android.view.component.moudle.d:
    com.mouee.android.view.component.moudle.MoueeHorRightUIComponent this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mouee.android.view.component.moudle.MoueeHorRightUIComponent$2 -> com.mouee.android.view.component.moudle.e:
    com.mouee.android.view.component.moudle.MoueeHorRightUIComponent this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mouee.android.view.component.moudle.MoueeHorRightUIComponent$3 -> com.mouee.android.view.component.moudle.f:
    com.mouee.android.view.component.moudle.MoueeHorRightUIComponent this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.view.component.moudle.MoueeHorRightUIComponent$4 -> com.mouee.android.view.component.moudle.g:
    com.mouee.android.view.component.moudle.MoueeHorRightUIComponent this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.view.component.moudle.MoueeMediaController -> com.mouee.android.view.component.moudle.h:
    android.widget.MediaController$MediaPlayerControl mPlayer -> c
    android.widget.SeekBar mSeekBar -> d
    android.widget.Button btnAction -> e
    android.widget.TextView textLeft -> f
    android.widget.TextView textRight -> g
    android.widget.LinearLayout layout -> h
    java.lang.StringBuilder mFormatBuilder -> a
    java.util.Formatter mFormatter -> b
    boolean mDragging -> i
    boolean mShowing -> j
    int SHOW_PROGRESS -> k
    int totalMileSeconds -> l
    boolean isComplete -> m
    android.media.MediaPlayer mediaPlayer -> n
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> o
    android.os.Handler mHandler -> p
    android.view.View$OnClickListener mPauseListener -> q
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void setVideoView(android.widget.MediaController$MediaPlayerControl) -> a
    void completion(android.media.MediaPlayer) -> a
    void updatePausePlay() -> a
    void doPauseResume() -> b
    int setProgress() -> c
    java.lang.String stringForTime(int) -> a
    android.os.Handler access$0(com.mouee.android.view.component.moudle.MoueeMediaController) -> a
    android.widget.MediaController$MediaPlayerControl access$1(com.mouee.android.view.component.moudle.MoueeMediaController) -> b
    void access$2(com.mouee.android.view.component.moudle.MoueeMediaController,int) -> a
    int access$3(com.mouee.android.view.component.moudle.MoueeMediaController) -> c
    android.widget.TextView access$4(com.mouee.android.view.component.moudle.MoueeMediaController) -> d
    android.widget.TextView access$5(com.mouee.android.view.component.moudle.MoueeMediaController) -> e
    java.lang.String access$6(com.mouee.android.view.component.moudle.MoueeMediaController,int) -> b
    void access$7(com.mouee.android.view.component.moudle.MoueeMediaController,boolean) -> a
    int access$8(com.mouee.android.view.component.moudle.MoueeMediaController) -> f
    boolean access$9(com.mouee.android.view.component.moudle.MoueeMediaController) -> g
    boolean access$10(com.mouee.android.view.component.moudle.MoueeMediaController) -> h
    void access$11(com.mouee.android.view.component.moudle.MoueeMediaController,boolean) -> b
com.mouee.android.view.component.moudle.MoueeMediaController$1 -> com.mouee.android.view.component.moudle.i:
    com.mouee.android.view.component.moudle.MoueeMediaController this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.mouee.android.view.component.moudle.MoueeMediaController$2 -> com.mouee.android.view.component.moudle.j:
    com.mouee.android.view.component.moudle.MoueeMediaController this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.MoueeMediaController$3 -> com.mouee.android.view.component.moudle.k:
    com.mouee.android.view.component.moudle.MoueeMediaController this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.view.component.moudle.MoueeMediaController$4 -> com.mouee.android.view.component.moudle.l:
    com.mouee.android.view.component.moudle.MoueeMediaController this$0 -> a
    void onDismiss() -> onDismiss
com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent -> com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent:
    com.mouee.android.book.entity.moudle.MoudleComponentEntity componentEntity -> a
    android.widget.LinearLayout contentLayout -> b
    android.widget.LinearLayout btnLayout -> c
    android.content.Context mContext -> d
    boolean isLock -> e
    java.util.ArrayList upMapList -> f
    java.util.ArrayList downMapList -> g
    void hideMenu() -> d
    void showMenu() -> g
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    android.graphics.drawable.StateListDrawable getButtonDrawable(int) -> a
    android.graphics.Bitmap createBitmap(java.io.InputStream) -> b
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void access$0(com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent,boolean) -> a
com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent$1 -> com.mouee.android.view.component.moudle.m:
    com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent$2 -> com.mouee.android.view.component.moudle.n:
    com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent$3 -> com.mouee.android.view.component.moudle.o:
    com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent$4 -> com.mouee.android.view.component.moudle.p:
    com.mouee.android.view.component.moudle.MoueeVerBottomUIComponent this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.view.component.moudle.MoueeViewFlipper -> com.mouee.android.view.component.moudle.MoueeViewFlipper:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    java.util.ArrayList bitmapList -> b
    com.mouee.android.view.widget.ImageCacheWidget imageCacheWidget -> c
    android.graphics.Bitmap bitmap -> d
    float oldTouchValue -> j
    int mWhichChild -> e
    boolean mFirstTime -> f
    boolean mAnimateFirstTime -> g
    android.view.animation.Animation mInAnimation -> h
    android.view.animation.Animation mOutAnimation -> i
    boolean LOGD -> k
    int DEFAULT_INTERVAL -> l
    int mFlipInterval -> m
    boolean mAutoStart -> n
    boolean mRunning -> o
    boolean mStarted -> p
    boolean mVisible -> q
    boolean mUserPresent -> r
    android.content.BroadcastReceiver mReceiver -> s
    int FLIP_MSG -> t
    android.os.Handler mHandler -> u
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void loadBitmap() -> y
    void onLayout(boolean,int,int,int,int) -> onLayout
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    android.graphics.Bitmap getBitMap(java.lang.String) -> a
    android.graphics.Bitmap loadBitmap(java.io.InputStream) -> b
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.animation.Animation inFromRightAnimation() -> d
    android.view.animation.Animation outToLeftAnimation() -> g
    android.view.animation.Animation inFromLeftAnimation() -> m
    android.view.animation.Animation outToRightAnimation() -> n
    void setDisplayedChild(int) -> a
    int getDisplayedChild() -> o
    void showNext() -> p
    void showPrevious() -> q
    void showOnly(int) -> b
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeAllViews() -> removeAllViews
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeViewInLayout(android.view.View) -> removeViewInLayout
    void removeViews(int,int) -> removeViews
    void removeViewsInLayout(int,int) -> removeViewsInLayout
    android.view.View getCurrentView() -> r
    android.view.animation.Animation getInAnimation() -> s
    void setInAnimation(android.view.animation.Animation) -> a
    android.view.animation.Animation getOutAnimation() -> t
    void setOutAnimation(android.view.animation.Animation) -> b
    void setInAnimation(android.content.Context,int) -> a
    void setOutAnimation(android.content.Context,int) -> b
    void setAnimateFirstView(boolean) -> a
    int getBaseline() -> getBaseline
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void setFlipInterval(int) -> c
    void startFlipping() -> u
    void stopFlipping() -> v
    void updateRunning() -> z
    boolean isFlipping() -> w
    void setAutoStart(boolean) -> b
    boolean isAutoStart() -> x
    void recyle() -> l
    void access$0(com.mouee.android.view.component.moudle.MoueeViewFlipper,boolean) -> a
    void access$1(com.mouee.android.view.component.moudle.MoueeViewFlipper) -> a
    boolean access$2(com.mouee.android.view.component.moudle.MoueeViewFlipper) -> b
    int access$3(com.mouee.android.view.component.moudle.MoueeViewFlipper) -> c
com.mouee.android.view.component.moudle.MoueeViewFlipper$1 -> com.mouee.android.view.component.moudle.q:
    com.mouee.android.view.component.moudle.MoueeViewFlipper this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mouee.android.view.component.moudle.MoueeViewFlipper$2 -> com.mouee.android.view.component.moudle.r:
    com.mouee.android.view.component.moudle.MoueeViewFlipper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.MoueeViewFlipperInter -> com.mouee.android.view.component.moudle.MoueeViewFlipperInter:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    java.util.ArrayList bitmapList -> b
    com.mouee.android.view.widget.ImageCacheWidget imageCacheWidget -> c
    int currentIndex -> j
    android.graphics.Bitmap bitmap -> d
    float oldTouchValue -> k
    com.mouee.android.book.entity.BehaviorEntity imageClickbeheavior -> l
    int mWhichChild -> e
    boolean mFirstTime -> f
    boolean mAnimateFirstTime -> g
    android.view.animation.Animation mInAnimation -> h
    android.view.animation.Animation mOutAnimation -> i
    boolean LOGD -> m
    int DEFAULT_INTERVAL -> n
    int mFlipInterval -> o
    boolean mAutoStart -> p
    boolean mRunning -> q
    boolean mStarted -> r
    boolean mVisible -> s
    boolean mUserPresent -> t
    android.content.BroadcastReceiver mReceiver -> u
    int FLIP_MSG -> v
    android.os.Handler mHandler -> w
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void setImageBehaiors(int) -> d
    void onLayout(boolean,int,int,int,int) -> onLayout
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    android.graphics.Bitmap getBitMap(java.lang.String) -> a
    android.graphics.Bitmap loadBitmap(java.io.InputStream) -> b
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.animation.Animation inFromRightAnimation() -> d
    android.view.animation.Animation outToLeftAnimation() -> g
    android.view.animation.Animation inFromLeftAnimation() -> m
    android.view.animation.Animation outToRightAnimation() -> n
    void setDisplayedChild(int) -> a
    int getDisplayedChild() -> o
    void showNext() -> p
    void showPrevious() -> q
    void showOnly(int) -> b
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeAllViews() -> removeAllViews
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeViewInLayout(android.view.View) -> removeViewInLayout
    void removeViews(int,int) -> removeViews
    void removeViewsInLayout(int,int) -> removeViewsInLayout
    android.view.View getCurrentView() -> r
    android.view.animation.Animation getInAnimation() -> s
    void setInAnimation(android.view.animation.Animation) -> a
    android.view.animation.Animation getOutAnimation() -> t
    void setOutAnimation(android.view.animation.Animation) -> b
    void setInAnimation(android.content.Context,int) -> a
    void setOutAnimation(android.content.Context,int) -> b
    void setAnimateFirstView(boolean) -> a
    int getBaseline() -> getBaseline
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void setFlipInterval(int) -> c
    void startFlipping() -> u
    void stopFlipping() -> v
    void updateRunning() -> y
    boolean isFlipping() -> w
    void setAutoStart(boolean) -> b
    boolean isAutoStart() -> x
    void recyle() -> l
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void access$0(com.mouee.android.view.component.moudle.MoueeViewFlipperInter,boolean) -> a
    void access$1(com.mouee.android.view.component.moudle.MoueeViewFlipperInter) -> a
    boolean access$2(com.mouee.android.view.component.moudle.MoueeViewFlipperInter) -> b
    int access$3(com.mouee.android.view.component.moudle.MoueeViewFlipperInter) -> c
    void access$4(com.mouee.android.view.component.moudle.MoueeViewFlipperInter,int) -> a
com.mouee.android.view.component.moudle.MoueeViewFlipperInter$1 -> com.mouee.android.view.component.moudle.s:
    com.mouee.android.view.component.moudle.MoueeViewFlipperInter this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mouee.android.view.component.moudle.MoueeViewFlipperInter$2 -> com.mouee.android.view.component.moudle.t:
    com.mouee.android.view.component.moudle.MoueeViewFlipperInter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.MoueeViewFlipperInter$3 -> com.mouee.android.view.component.moudle.u:
    com.mouee.android.view.component.moudle.MoueeViewFlipperInter this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle -> com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    java.util.ArrayList bitmapList -> b
    float oldTouchValue -> h
    int mWhichChild -> c
    boolean mFirstTime -> d
    boolean mAnimateFirstTime -> e
    android.view.animation.Animation mInAnimation -> f
    android.view.animation.Animation mOutAnimation -> g
    boolean LOGD -> i
    int DEFAULT_INTERVAL -> j
    int mFlipInterval -> k
    boolean mAutoStart -> l
    boolean mRunning -> m
    boolean mStarted -> n
    boolean mVisible -> o
    boolean mUserPresent -> p
    android.content.BroadcastReceiver mReceiver -> q
    int FLIP_MSG -> r
    android.os.Handler mHandler -> s
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void onLayout(boolean,int,int,int,int) -> onLayout
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    android.graphics.Bitmap getBitMap(java.lang.String) -> a
    android.graphics.Bitmap loadBitmap(java.io.InputStream) -> b
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.animation.Animation inFromRightAnimation() -> d
    android.view.animation.Animation outToLeftAnimation() -> g
    android.view.animation.Animation inFromLeftAnimation() -> m
    android.view.animation.Animation outToRightAnimation() -> n
    void setDisplayedChild(int) -> a
    int getDisplayedChild() -> o
    void showNext() -> p
    void showPrevious() -> q
    void showOnly(int) -> b
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeAllViews() -> removeAllViews
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeViewInLayout(android.view.View) -> removeViewInLayout
    void removeViews(int,int) -> removeViews
    void removeViewsInLayout(int,int) -> removeViewsInLayout
    android.view.View getCurrentView() -> r
    android.view.animation.Animation getInAnimation() -> s
    void setInAnimation(android.view.animation.Animation) -> a
    android.view.animation.Animation getOutAnimation() -> t
    void setOutAnimation(android.view.animation.Animation) -> b
    void setInAnimation(android.content.Context,int) -> a
    void setOutAnimation(android.content.Context,int) -> b
    void setAnimateFirstView(boolean) -> a
    int getBaseline() -> getBaseline
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void setFlipInterval(int) -> c
    void startFlipping() -> u
    void stopFlipping() -> v
    void updateRunning() -> y
    boolean isFlipping() -> w
    void setAutoStart(boolean) -> b
    boolean isAutoStart() -> x
    void recyle() -> l
    void access$0(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle,boolean) -> a
    void access$1(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle) -> a
    boolean access$2(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle) -> b
    int access$3(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle) -> c
com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle$1 -> com.mouee.android.view.component.moudle.v:
    com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle$2 -> com.mouee.android.view.component.moudle.w:
    com.mouee.android.view.component.moudle.MoueeViewFlipperVerticle this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter -> com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    java.util.ArrayList bitmapList -> b
    int currentIndex -> h
    com.mouee.android.book.entity.BehaviorEntity imageClickbeheavior -> i
    float oldTouchValue -> j
    int mWhichChild -> c
    boolean mFirstTime -> d
    boolean mAnimateFirstTime -> e
    android.view.animation.Animation mInAnimation -> f
    android.view.animation.Animation mOutAnimation -> g
    boolean LOGD -> k
    int DEFAULT_INTERVAL -> l
    int mFlipInterval -> m
    boolean mAutoStart -> n
    boolean mRunning -> o
    boolean mStarted -> p
    boolean mVisible -> q
    boolean mUserPresent -> r
    android.content.BroadcastReceiver mReceiver -> s
    int FLIP_MSG -> t
    android.os.Handler mHandler -> u
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void setImageBehaiors(int) -> d
    void onLayout(boolean,int,int,int,int) -> onLayout
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    android.graphics.Bitmap getBitMap(java.lang.String) -> a
    android.graphics.Bitmap loadBitmap(java.io.InputStream) -> b
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.view.animation.Animation inFromRightAnimation() -> d
    android.view.animation.Animation outToLeftAnimation() -> g
    android.view.animation.Animation inFromLeftAnimation() -> m
    android.view.animation.Animation outToRightAnimation() -> n
    void setDisplayedChild(int) -> a
    int getDisplayedChild() -> o
    void showNext() -> p
    void showPrevious() -> q
    void showOnly(int) -> b
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeAllViews() -> removeAllViews
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeViewInLayout(android.view.View) -> removeViewInLayout
    void removeViews(int,int) -> removeViews
    void removeViewsInLayout(int,int) -> removeViewsInLayout
    android.view.View getCurrentView() -> r
    android.view.animation.Animation getInAnimation() -> s
    void setInAnimation(android.view.animation.Animation) -> a
    android.view.animation.Animation getOutAnimation() -> t
    void setOutAnimation(android.view.animation.Animation) -> b
    void setInAnimation(android.content.Context,int) -> a
    void setOutAnimation(android.content.Context,int) -> b
    void setAnimateFirstView(boolean) -> a
    int getBaseline() -> getBaseline
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void setFlipInterval(int) -> c
    void startFlipping() -> u
    void stopFlipping() -> v
    void updateRunning() -> y
    boolean isFlipping() -> w
    void setAutoStart(boolean) -> b
    boolean isAutoStart() -> x
    void recyle() -> l
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void access$0(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter,boolean) -> a
    void access$1(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter) -> a
    boolean access$2(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter) -> b
    int access$3(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter) -> c
    void access$4(com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter,int) -> a
com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter$1 -> com.mouee.android.view.component.moudle.x:
    com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter$2 -> com.mouee.android.view.component.moudle.y:
    com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter$3 -> com.mouee.android.view.component.moudle.z:
    com.mouee.android.view.component.moudle.MoueeViewFlipperVerticleInter this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.view.component.moudle.carouseimg.GalleryImageAdapter -> com.mouee.android.view.component.moudle.a.a:
    java.util.ArrayList mImgPaths -> a
    android.content.Context context -> b
    int selectPos -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void notifyDataSetChanged(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mouee.android.view.component.moudle.common.CommonImageView -> com.mouee.android.view.component.moudle.common.CommonImageView:
com.mouee.android.view.component.moudle.common.CommonImageView$RecycleBin -> com.mouee.android.view.component.moudle.common.a:
    android.util.SparseArray mScrapHeap -> b
    com.mouee.android.view.component.moudle.common.CommonImageView this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
com.mouee.android.view.component.moudle.enbedpage.AdapterViewPage -> com.mouee.android.view.component.moudle.enbedpage.AdapterViewPage:
    com.mouee.android.view.ViewPage currentViewPage -> a
    com.mouee.android.view.component.moudle.enbedpage.ViewPageAdapter getAdapter() -> a
    void setAdapter(com.mouee.android.view.component.moudle.enbedpage.ViewPageAdapter) -> a
    android.view.View getSelectedView() -> getSelectedView
    void setSelection(int) -> setSelection
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
com.mouee.android.view.component.moudle.enbedpage.ViewPageAdapter -> com.mouee.android.view.component.moudle.enbedpage.a:
    android.content.Context mContext -> a
    java.util.ArrayList mpageIDS -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mouee.android.view.component.moudle.imageseq.Mouee3DViewHorFlipper -> com.mouee.android.view.component.moudle.imageseq.Mouee3DViewHorFlipper:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    java.util.ArrayList bitMapList -> g
    int mCount -> h
    int mCurrentIndex -> b
    java.util.ArrayList sourceIDS -> c
    android.graphics.Bitmap bitmap -> d
    float oldTouchValue -> i
    int FLIP_MSG -> e
    android.os.Handler mHandler -> f
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void loadNextBitmap() -> d
    void loadPreBitmap() -> g
    void setImageBitmapOnly(int) -> a
    java.util.ArrayList getBitMapList() -> m
    void setBitMapList(java.util.ArrayList) -> a
    void recyle() -> l
com.mouee.android.view.component.moudle.imageseq.Mouee3DViewHorFlipper$1 -> com.mouee.android.view.component.moudle.imageseq.a:
    com.mouee.android.view.component.moudle.imageseq.Mouee3DViewHorFlipper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.imageseq.Mouee3DViewHorFlipperS -> com.mouee.android.view.component.moudle.imageseq.Mouee3DViewHorFlipperS:
    java.lang.String notice -> a
    com.mouee.android.book.entity.ComponentEntity entity -> b
    android.view.SurfaceHolder sfh -> f
    android.graphics.Canvas canvas -> g
    android.graphics.Paint paint -> h
    java.util.ArrayList imgList -> i
    android.view.GestureDetector detector -> j
    int currentIndex -> k
    boolean isRun -> l
    android.graphics.BitmapFactory$Options _option -> c
    android.graphics.Bitmap bitmap -> d
    android.graphics.Bitmap bitma1 -> e
    void run() -> run
    void draw() -> d
    void logic() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void getBitMap(java.lang.String) -> a
    void loadBitmap(java.io.InputStream) -> b
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mouee.android.view.component.moudle.imageseq.Mouee3DViewHorFlipperS$LoadImage -> com.mouee.android.view.component.moudle.imageseq.b:
    boolean isRun -> a
    com.mouee.android.view.component.moudle.imageseq.Mouee3DViewHorFlipperS this$0 -> b
    void run() -> run
com.mouee.android.view.component.moudle.imageseq.Mouee3DViewVerFlipper -> com.mouee.android.view.component.moudle.imageseq.Mouee3DViewVerFlipper:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    java.util.ArrayList bitMapList -> f
    android.graphics.Bitmap currentBitmap -> g
    int mCount -> h
    int mCurrentIndex -> b
    java.util.ArrayList sourceIDS -> c
    android.graphics.Bitmap bitmap -> d
    float oldTouchValue -> i
    android.os.Handler mHandler -> e
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    android.graphics.Bitmap getBitMap(java.lang.String) -> a
    android.graphics.Bitmap loadBitmap(java.io.InputStream) -> b
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void loadNextBitmap() -> d
    void loadPreBitmap() -> g
    void setImageBitmapOnly(int) -> a
    java.util.ArrayList getBitMapList() -> m
    void setBitMapList(java.util.ArrayList) -> a
    void recyle() -> l
com.mouee.android.view.component.moudle.imageseq.Mouee3DViewVerFlipper$1 -> com.mouee.android.view.component.moudle.imageseq.c:
    com.mouee.android.view.component.moudle.imageseq.Mouee3DViewVerFlipper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.slide.HorizontalSlide -> com.mouee.android.view.component.moudle.slide.HorizontalSlide:
    android.content.Context _con -> a
    com.mouee.android.book.entity.moudle.MoudleComponentEntity moudleComponentEntity -> b
    java.util.ArrayList imagelist -> s
    java.util.ArrayList mapList -> t
    android.view.animation.AnimationSet animationset -> c
    java.util.HashMap map -> d
    android.widget.BaseAdapter mAdapter -> u
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    android.graphics.Bitmap getBitmapDrawable(java.io.InputStream) -> b
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void recyle() -> l
    java.util.ArrayList access$0(com.mouee.android.view.component.moudle.slide.HorizontalSlide) -> a
    java.util.ArrayList access$1(com.mouee.android.view.component.moudle.slide.HorizontalSlide) -> b
com.mouee.android.view.component.moudle.slide.HorizontalSlide$1 -> com.mouee.android.view.component.moudle.slide.a:
    com.mouee.android.view.component.moudle.slide.HorizontalSlide this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mouee.android.view.component.moudle.slide.HorizontalSlide$2 -> com.mouee.android.view.component.moudle.slide.b:
    com.mouee.android.view.component.moudle.slide.HorizontalSlide this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.mouee.android.view.component.moudle.slide.HorizontalSlideClick -> com.mouee.android.view.component.moudle.slide.HorizontalSlideClick:
    android.widget.LinearLayout galleryrl -> a
    android.content.Context _con -> b
    com.mouee.android.book.entity.ComponentEntity entity -> c
    android.graphics.BitmapFactory$Options _option -> d
    java.util.ArrayList imagelist -> m
    java.util.ArrayList downIDList -> n
    boolean CHANGEBUTTON -> e
    boolean ISHORIZONTAL -> f
    int itemWidth -> o
    int itemHeight -> p
    java.util.ArrayList bitmapList -> q
    int speed -> r
    android.view.animation.AnimationSet animationset -> g
    float oldTouchValue -> s
    int direct -> t
    int FLAG_MESSAGE -> u
    boolean isMove -> h
    android.widget.ImageButton currentButton -> i
    int currentIndex -> j
    boolean clickUp -> k
    int x -> v
    android.os.Handler mHandler -> w
    android.graphics.Bitmap bitmap -> l
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void load(java.io.InputStream) -> a
    void doScroll() -> d
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    void recyle() -> l
    int access$0(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick) -> a
    int access$1(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick) -> b
    void access$2(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick,int) -> a
    void access$3(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick,int) -> b
    void access$4(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick) -> c
    int access$5(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick) -> d
    int access$6(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick) -> e
    java.util.ArrayList access$7(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick) -> f
    android.graphics.Bitmap access$8(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick,java.lang.String) -> a
    java.util.ArrayList access$9(com.mouee.android.view.component.moudle.slide.HorizontalSlideClick) -> g
com.mouee.android.view.component.moudle.slide.HorizontalSlideClick$1 -> com.mouee.android.view.component.moudle.slide.c:
    com.mouee.android.view.component.moudle.slide.HorizontalSlideClick this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.slide.HorizontalSlideClick$2 -> com.mouee.android.view.component.moudle.slide.d:
    com.mouee.android.view.component.moudle.slide.HorizontalSlideClick this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.view.component.moudle.slide.HorizontalSlideClick$MyCount -> com.mouee.android.view.component.moudle.slide.e:
    com.mouee.android.view.component.moudle.slide.HorizontalSlideClick this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree -> com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree:
    android.widget.LinearLayout galleryrl -> a
    android.content.Context _con -> b
    com.mouee.android.book.entity.ComponentEntity entity -> c
    android.graphics.BitmapFactory$Options _option -> d
    java.util.ArrayList imagelist -> g
    boolean CHANGEBUTTON -> e
    boolean ISHORIZONTAL -> f
    int itemWidth -> h
    int itemHeight -> i
    java.util.ArrayList defaultBitmapList -> j
    java.util.ArrayList selectedBitmapList -> k
    java.util.ArrayList selectIDS -> l
    java.util.ArrayList downIDS -> m
    float oldTouchValue -> n
    android.widget.ImageButton currentImageButton -> o
    int currentIndex -> p
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void loadBitmaList() -> d
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void recyle() -> l
    void play() -> e
    android.widget.ImageButton access$0(com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree) -> a
    void access$1(com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree,android.widget.ImageButton) -> a
    java.util.ArrayList access$2(com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree) -> b
    android.graphics.Bitmap access$3(com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree,java.lang.String) -> a
    java.util.ArrayList access$4(com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree) -> c
    int access$5(com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree) -> d
    java.util.ArrayList access$6(com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree) -> e
    void access$7(com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree,int) -> a
com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree$1 -> com.mouee.android.view.component.moudle.slide.f:
    com.mouee.android.view.component.moudle.slide.HorizontalSlideClickThree this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.view.component.moudle.slide.HorizontialListView -> com.mouee.android.view.component.moudle.slide.HorizontialListView:
    boolean mAlwaysOverrideTouch -> e
    android.widget.ListAdapter mAdapter -> f
    int mLeftViewIndex -> a
    int mRightViewIndex -> b
    int mCurrentX -> g
    int mNextX -> h
    int mMaxX -> c
    int mDisplayOffset -> d
    android.widget.Scroller mScroller -> i
    android.view.GestureDetector mGesture -> s
    java.util.Queue mRemovedViewQueue -> t
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelected -> u
    android.widget.AdapterView$OnItemClickListener mOnItemClicked -> v
    boolean mDataChanged -> w
    boolean toleft -> j
    int FLAG_MESSAGE -> k
    int startX -> l
    android.database.DataSetObserver mDataObserver -> x
    int left -> m
    int top -> n
    int right -> o
    int bottom -> p
    java.lang.Runnable myRunnable -> q
    boolean isTouch -> y
    android.view.GestureDetector$OnGestureListener mOnGesture -> z
    android.os.Handler mHandler -> r
    void initView() -> a
    void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.ListAdapter getAdapter() -> d
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.ListAdapter) -> a
    void reset() -> b
    void setSelection(int) -> setSelection
    void addAndMeasureChild(android.view.View,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void fillList(int) -> b
    void fillListRight(int,int) -> a
    void fillListLeft(int,int) -> b
    void removeNonVisibleItems(int) -> c
    void positionItems(int) -> d
    void scrollTo(int) -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    boolean onDown(android.view.MotionEvent) -> a
    void doScroll() -> g
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void access$2(com.mouee.android.view.component.moudle.slide.HorizontialListView,boolean) -> a
    void access$3(com.mouee.android.view.component.moudle.slide.HorizontialListView) -> a
    android.widget.AdapterView$OnItemClickListener access$4(com.mouee.android.view.component.moudle.slide.HorizontialListView) -> b
    int access$5(com.mouee.android.view.component.moudle.slide.HorizontialListView) -> c
    android.widget.AdapterView$OnItemSelectedListener access$6(com.mouee.android.view.component.moudle.slide.HorizontialListView) -> d
com.mouee.android.view.component.moudle.slide.HorizontialListView$1 -> com.mouee.android.view.component.moudle.slide.g:
    com.mouee.android.view.component.moudle.slide.HorizontialListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mouee.android.view.component.moudle.slide.HorizontialListView$2 -> com.mouee.android.view.component.moudle.slide.h:
    com.mouee.android.view.component.moudle.slide.HorizontialListView this$0 -> a
    void run() -> run
com.mouee.android.view.component.moudle.slide.HorizontialListView$3 -> com.mouee.android.view.component.moudle.slide.i:
    com.mouee.android.view.component.moudle.slide.HorizontialListView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.mouee.android.view.component.moudle.slide.HorizontialListView$4 -> com.mouee.android.view.component.moudle.slide.j:
    com.mouee.android.view.component.moudle.slide.HorizontialListView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.slide.VerticleSlide -> com.mouee.android.view.component.moudle.slide.VerticleSlide:
    android.widget.LinearLayout galleryrl -> a
    android.content.Context _con -> b
    com.mouee.android.book.entity.ComponentEntity entity -> c
    android.graphics.BitmapFactory$Options _option -> d
    java.util.ArrayList imagelist -> g
    boolean CHANGEBUTTON -> e
    boolean ISHORIZONTAL -> f
    int itemWidth -> h
    int itemHeight -> i
    long speed -> j
    java.util.ArrayList orginalBitmapList -> k
    float oldTouchValue -> l
    int direct -> m
    int FLAG_MESSAGE -> n
    int y -> o
    android.os.Handler mHandler -> p
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void load(java.io.InputStream) -> a
    void doScroll() -> d
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void recyle() -> l
    int access$0(com.mouee.android.view.component.moudle.slide.VerticleSlide) -> a
    int access$1(com.mouee.android.view.component.moudle.slide.VerticleSlide) -> b
    void access$2(com.mouee.android.view.component.moudle.slide.VerticleSlide,int) -> a
    void access$3(com.mouee.android.view.component.moudle.slide.VerticleSlide,int) -> b
    void access$4(com.mouee.android.view.component.moudle.slide.VerticleSlide) -> c
    int access$5(com.mouee.android.view.component.moudle.slide.VerticleSlide) -> d
    long access$6(com.mouee.android.view.component.moudle.slide.VerticleSlide) -> e
com.mouee.android.view.component.moudle.slide.VerticleSlide$1 -> com.mouee.android.view.component.moudle.slide.k:
    com.mouee.android.view.component.moudle.slide.VerticleSlide this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.component.moudle.slide.VerticleSlide$2 -> com.mouee.android.view.component.moudle.slide.l:
    com.mouee.android.view.component.moudle.slide.VerticleSlide this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.view.component.moudle.slide.VerticleSlideClick -> com.mouee.android.view.component.moudle.slide.VerticleSlideClick:
    android.widget.LinearLayout galleryrl -> a
    android.content.Context _con -> b
    com.mouee.android.book.entity.ComponentEntity entity -> c
    android.graphics.BitmapFactory$Options _option -> d
    java.util.ArrayList imagelist -> l
    boolean CHANGEBUTTON -> e
    boolean ISHORIZONTAL -> f
    int itemWidth -> m
    int itemHeight -> n
    java.util.ArrayList bitmapList -> o
    java.util.ArrayList downIDList -> p
    android.graphics.Bitmap bitmap -> g
    float oldTouchValue -> q
    boolean isMove -> h
    android.widget.ImageButton currentButton -> i
    int currentIndex -> j
    boolean clickUp -> k
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void recyle() -> l
    void play() -> e
    java.util.ArrayList access$0(com.mouee.android.view.component.moudle.slide.VerticleSlideClick) -> a
    android.graphics.Bitmap access$1(com.mouee.android.view.component.moudle.slide.VerticleSlideClick,java.lang.String) -> a
    java.util.ArrayList access$2(com.mouee.android.view.component.moudle.slide.VerticleSlideClick) -> b
com.mouee.android.view.component.moudle.slide.VerticleSlideClick$1 -> com.mouee.android.view.component.moudle.slide.m:
    com.mouee.android.view.component.moudle.slide.VerticleSlideClick this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mouee.android.view.component.moudle.slide.VerticleSlideClick$MyCount -> com.mouee.android.view.component.moudle.slide.n:
    com.mouee.android.view.component.moudle.slide.VerticleSlideClick this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.component.moudle.slide.VerticleSlideClick$runview -> com.mouee.android.view.component.moudle.slide.o:
    java.lang.String _name -> a
    int _index -> b
    com.mouee.android.view.component.moudle.slide.VerticleSlideClick this$0 -> c
    void run() -> run
com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree -> com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree:
    android.widget.LinearLayout galleryrl -> a
    android.content.Context _con -> b
    com.mouee.android.book.entity.ComponentEntity entity -> c
    android.graphics.BitmapFactory$Options _option -> d
    java.util.ArrayList imagelist -> g
    boolean CHANGEBUTTON -> e
    boolean ISHORIZONTAL -> f
    int itemWidth -> h
    int itemHeight -> i
    java.util.ArrayList selectedBitmapList -> j
    java.util.ArrayList defaultBitmapList -> k
    java.util.ArrayList orginalBitmapList -> l
    java.util.ArrayList selectIDS -> m
    float oldTouchValue -> n
    android.widget.ImageButton currentImageButton -> o
    int currentIndex -> p
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void loadSelectedBitmaList() -> d
    android.graphics.Bitmap getBitmap(java.lang.String) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    void recyle() -> l
    void play() -> e
    android.widget.ImageButton access$0(com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree) -> a
    void access$1(com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree,android.widget.ImageButton) -> a
    java.util.ArrayList access$2(com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree) -> b
    android.graphics.Bitmap access$3(com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree,java.lang.String) -> a
    java.util.ArrayList access$4(com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree) -> c
    int access$5(com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree) -> d
    void access$6(com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree,int) -> a
com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree$1 -> com.mouee.android.view.component.moudle.slide.p:
    com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree this$0 -> a
    void onClick(android.view.View) -> onClick
com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree$runview -> com.mouee.android.view.component.moudle.slide.q:
    java.lang.String _name -> a
    int _index -> b
    com.mouee.android.view.component.moudle.slide.VerticleSlideClickThree this$0 -> c
    void run() -> run
com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq -> com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq:
    java.lang.String notice -> a
    com.mouee.android.book.entity.ComponentEntity entity -> b
    android.view.SurfaceHolder sfh -> f
    android.graphics.Canvas canvas -> g
    android.graphics.Paint paint -> h
    java.util.ArrayList imgList -> i
    android.view.GestureDetector detector -> j
    int currentIndex -> k
    android.widget.Scroller mScroller -> l
    boolean isRun -> c
    com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq$LoadImage loadImage -> m
    android.graphics.Bitmap bitmap -> d
    int currentState -> e
    void run() -> run
    void draw() -> d
    void logic() -> g
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void getBitMap(java.lang.String) -> a
    void loadBitmap(java.io.InputStream) -> b
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    android.widget.Scroller access$0(com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq) -> a
    int access$1(com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq) -> b
    void access$2(com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq,int) -> a
    java.util.ArrayList access$3(com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq) -> c
    void access$4(com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq,java.lang.String) -> a
com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq$LoadImage -> com.mouee.android.view.component.moudle.surface.a:
    boolean isRun -> a
    com.mouee.android.view.component.moudle.surface.SurfaceViewImageSeq this$0 -> b
    void run() -> run
com.mouee.android.view.component.textview.TextSurfaceView -> com.mouee.android.view.component.textview.TextSurfaceView:
    boolean isMove -> c
    int orientation -> d
    int MOVE_LEFT -> a
    int MOVE_RIGHT -> b
    long speed -> e
    java.lang.String content -> f
    java.lang.String bgColor -> g
    int bgalpha -> h
    java.lang.String fontColor -> i
    int fontAlpha -> j
    float fontSize -> k
    android.view.SurfaceHolder mSurfaceHolder -> l
    boolean loop -> m
    float x -> n
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void draw() -> b
    void run() -> run
    int getOrientation() -> c
    void setOrientation(int) -> a
    long getSpeed() -> d
    void setSpeed(long) -> a
    boolean isMove() -> a
    void setMove(boolean) -> a
    void setLoop(boolean) -> b
    void setContent(java.lang.String) -> a
    void setBgColor(java.lang.String) -> b
    void setBgalpha(int) -> b
    void setFontColor(java.lang.String) -> c
    void setFontAlpha(int) -> c
    void setFontSize(float) -> a
com.mouee.android.view.component.textview.TextViewComponent -> com.mouee.android.view.component.textview.TextViewComponent:
    com.mouee.android.book.entity.TextComponentEntity mEntity -> a
    android.view.animation.AnimationSet animationset -> b
    int textHeight -> j
    java.util.Vector m_String -> c
    java.util.Vector m_LineWidth -> d
    float m_iFontHeight -> e
    int m_iRealLine -> f
    float x -> g
    float y -> h
    android.text.TextPaint mPaint -> k
    android.graphics.Paint paint -> i
    void loadText() -> d
    void drawView(float) -> b
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void setBGAlphaAndColor(int,java.lang.String) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void setFontSize(java.lang.String) -> a
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void drawText(android.graphics.Canvas) -> a
    void drawLine(java.lang.String,float,float,android.graphics.Canvas,int) -> a
    void drawLineEN(java.lang.String,float,float,android.graphics.Canvas,int) -> b
    java.lang.String getSpace(int) -> b
    float measureLineENWidth(java.lang.String) -> b
    boolean isAllCNAndEN(java.lang.String) -> c
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    int getTextHeight() -> g
    void setTextHeight(int) -> a
com.mouee.android.view.component.textview.TextViewComponentEN -> com.mouee.android.view.component.textview.TextViewComponentEN:
    com.mouee.android.book.entity.ComponentEntity entity -> a
    android.view.animation.AnimationSet animationset -> b
    int textHeight -> m
    java.util.Vector m_String -> c
    java.util.Vector m_LineWidth -> d
    float m_iFontHeight -> e
    int m_iRealLine -> f
    float x -> g
    float y -> h
    android.text.TextPaint mPaint -> n
    java.util.ArrayList alLast -> i
    android.graphics.Paint paint -> j
    java.lang.String SYSTEM_NEWLINE -> k
    float COMPLEXITY -> l
    void loadEnglishText() -> d
    com.mouee.android.book.entity.ComponentEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.ComponentEntity) -> a
    java.lang.Object getRealObject() -> b
    void setRealObject(java.lang.Object) -> a
    void load() -> c
    void setBGAlphaAndColor(int,java.lang.String) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void load(java.io.InputStream) -> a
    void setOnBehaviorListener(com.mouee.android.view.component.listener.OnBehaviorListener) -> a
    void setRotation(float) -> a
    void playAnimation() -> h
    void play() -> e
    void drawText(android.graphics.Canvas) -> a
    void drawLineEN(java.lang.String,float,float,android.graphics.Canvas,int) -> a
    boolean isAllCNAndEN(java.lang.String) -> a
    java.lang.String wrap(java.lang.String,float,android.graphics.Paint) -> a
    java.lang.String removeLast(java.lang.String,java.lang.String) -> a
    void justifyText(java.lang.String,float) -> a
    java.lang.String justifyOperation(java.lang.String,float,android.graphics.Paint) -> b
    java.lang.String justify(java.lang.String,float,android.graphics.Paint) -> c
    void stopAnimation() -> i
    void stop() -> f
    void hide() -> j
    void show() -> k
    void resume() -> resume
    void pause() -> pause
    int getTextHeight() -> g
    void setTextHeight(int) -> a
com.mouee.android.view.component.textview.TextViewJustify -> com.mouee.android.view.component.textview.a:
    java.lang.String SYSTEM_NEWLINE -> a
    float COMPLEXITY -> b
    android.graphics.Paint p -> c
    void justifyText(android.widget.TextView,float) -> a
    java.lang.String wrap(java.lang.String,float,android.graphics.Paint) -> a
    java.lang.String removeLast(java.lang.String,java.lang.String) -> a
    java.lang.String justifyOperation(java.lang.String,float,android.graphics.Paint) -> b
    java.lang.String justify(java.lang.String,float,android.graphics.Paint) -> c
com.mouee.android.view.component.zoom.IDisposable -> com.mouee.android.view.component.zoom.a:
    void dispose() -> d
com.mouee.android.view.component.zoom.ImageViewTouch -> com.mouee.android.view.component.zoom.ImageViewTouch:
    float MIN_ZOOM -> g
    android.view.ScaleGestureDetector mScaleDetector -> h
    android.view.GestureDetector mGestureDetector -> i
    int mTouchSlop -> j
    float mCurrentScaleFactor -> k
    float mScaleFactor -> l
    int mDoubleTapDirection -> m
    com.mouee.android.view.component.zoom.ImageViewTouch$GestureListener mGestureListener -> n
    com.mouee.android.view.component.zoom.ImageViewTouch$ScaleListener mScaleListener -> o
    void init() -> g
    void setImageRotateBitmapReset(com.mouee.android.view.component.zoom.RotateBitmap,boolean) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onZoom(float) -> b
    float onDoubleTapPost(float,float) -> a
com.mouee.android.view.component.zoom.ImageViewTouch$GestureListener -> com.mouee.android.view.component.zoom.b:
    com.mouee.android.view.component.zoom.ImageViewTouch this$0 -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mouee.android.view.component.zoom.ImageViewTouch$ScaleListener -> com.mouee.android.view.component.zoom.c:
    com.mouee.android.view.component.zoom.ImageViewTouch this$0 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.mouee.android.view.component.zoom.ImageViewTouchBase -> com.mouee.android.view.component.zoom.ImageViewTouchBase:
    java.lang.String LOG_TAG -> p
    android.graphics.Matrix mBaseMatrix -> q
    android.graphics.Matrix mSuppMatrix -> r
    android.os.Handler mHandler -> s
    java.lang.Runnable mOnLayoutRunnable -> t
    float mMaxZoom -> u
    android.graphics.Matrix mDisplayMatrix -> v
    float[] mMatrixValues -> w
    int mThisWidth -> x
    int mThisHeight -> y
    com.mouee.android.view.component.zoom.RotateBitmap mBitmapDisplayed -> z
    float MAX_ZOOM -> A
    com.mouee.android.view.component.zoom.ImageViewTouchBase$OnBitmapChangedListener mListener -> a
    void setOnBitmapChangedListener(com.mouee.android.view.component.zoom.ImageViewTouchBase$OnBitmapChangedListener) -> a
    void init() -> g
    void clear() -> n
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setImageBitmapReset(android.graphics.Bitmap,boolean) -> a
    void setImageBitmapReset(android.graphics.Bitmap,int,boolean) -> a
    void setImageRotateBitmapReset(com.mouee.android.view.component.zoom.RotateBitmap,boolean) -> a
    float maxZoom() -> o
    com.mouee.android.view.component.zoom.RotateBitmap getDisplayBitmap() -> p
    float getMaxZoom() -> q
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageBitmap(android.graphics.Bitmap,int) -> a
    android.graphics.Matrix getImageViewMatrix() -> r
    void getProperBaseMatrix(com.mouee.android.view.component.zoom.RotateBitmap,android.graphics.Matrix) -> a
    float getValue(android.graphics.Matrix,int) -> a
    android.graphics.RectF getBitmapRect() -> s
    float getScale(android.graphics.Matrix) -> a
    float getScale() -> t
    void center(boolean,boolean) -> a
    void setImageMatrix(com.mouee.android.view.component.zoom.ImageViewTouchBase$Command,android.graphics.Matrix) -> a
    android.graphics.RectF getCenter(boolean,boolean) -> b
    void postTranslate(float,float) -> b
    void postScale(float,float,float) -> a
    void zoomTo(float) -> c
    void zoomTo(float,float) -> c
    void zoomTo(float,float,float) -> b
    void onZoom(float) -> b
    void scrollBy(float,float) -> d
    void panBy(float,float) -> e
    void updateRect(android.graphics.RectF,android.graphics.RectF) -> a
    void scrollBy(float,float,float) -> c
    void zoomTo(float,float,float,float) -> a
    void dispose() -> d
com.mouee.android.view.component.zoom.ImageViewTouchBase$1 -> com.mouee.android.view.component.zoom.d:
    com.mouee.android.view.component.zoom.ImageViewTouchBase this$0 -> a
    com.mouee.android.view.component.zoom.RotateBitmap val$bitmap -> b
    boolean val$reset -> c
    void run() -> run
com.mouee.android.view.component.zoom.ImageViewTouchBase$2 -> com.mouee.android.view.component.zoom.e:
    float old_x -> a
    float old_y -> b
    com.mouee.android.view.component.zoom.ImageViewTouchBase this$0 -> c
    float val$durationMs -> d
    long val$startTime -> e
    float val$dx -> f
    float val$dy -> g
    void run() -> run
com.mouee.android.view.component.zoom.ImageViewTouchBase$3 -> com.mouee.android.view.component.zoom.f:
    com.mouee.android.view.component.zoom.ImageViewTouchBase this$0 -> a
    float val$durationMs -> b
    long val$startTime -> c
    float val$oldScale -> d
    float val$incrementPerMs -> e
    float val$centerX -> f
    float val$centerY -> g
    void run() -> run
com.mouee.android.view.component.zoom.ImageViewTouchBase$Command -> com.mouee.android.view.component.zoom.g:
    com.mouee.android.view.component.zoom.ImageViewTouchBase$Command Center -> a
    com.mouee.android.view.component.zoom.ImageViewTouchBase$Command Move -> b
    com.mouee.android.view.component.zoom.ImageViewTouchBase$Command Zoom -> c
    com.mouee.android.view.component.zoom.ImageViewTouchBase$Command Layout -> d
    com.mouee.android.view.component.zoom.ImageViewTouchBase$Command Reset -> e
    com.mouee.android.view.component.zoom.ImageViewTouchBase$Command[] ENUM$VALUES -> f
    com.mouee.android.view.component.zoom.ImageViewTouchBase$Command[] values() -> values
    com.mouee.android.view.component.zoom.ImageViewTouchBase$Command valueOf(java.lang.String) -> valueOf
com.mouee.android.view.component.zoom.ImageViewTouchBase$OnBitmapChangedListener -> com.mouee.android.view.component.zoom.h:
    void onBitmapChanged(android.graphics.Bitmap) -> a
com.mouee.android.view.component.zoom.RotateBitmap -> com.mouee.android.view.component.zoom.i:
    java.lang.String TAG -> a
    android.graphics.Bitmap mBitmap -> b
    int mRotation -> c
    int mWidth -> d
    int mHeight -> e
    int mBitmapWidth -> f
    int mBitmapHeight -> g
    void setRotation(int) -> a
    int getRotation() -> a
    android.graphics.Bitmap getBitmap() -> b
    void setBitmap(android.graphics.Bitmap) -> a
    void invalidate() -> g
    android.graphics.Matrix getRotateMatrix() -> c
    int getHeight() -> d
    int getWidth() -> e
    void recycle() -> f
com.mouee.android.view.component.zoom.easing.Cubic -> com.mouee.android.view.component.zoom.a.a:
    float easeOut(float,float,float,float) -> a
com.mouee.android.view.compositeview.AdapterViewPage -> com.mouee.android.view.compositeview.AdapterViewPage:
    int MOVING_DIAGONALLY -> a
    int MOVING_LEFT -> b
    int MOVING_RIGHT -> c
    int MOVING_UP -> d
    int MOVING_DOWN -> e
    int FLING_MARGIN -> f
    int GAP -> g
    float MIN_SCALE -> h
    float MAX_SCALE -> i
    android.widget.Adapter mAdapter -> j
    int mCurrent -> k
    boolean mResetLayout -> l
    android.util.SparseArray mChildViews -> m
    java.util.LinkedList mViewCache -> n
    boolean mUserInteracting -> o
    boolean mScaling -> p
    float mScale -> q
    int mXScroll -> r
    int mYScroll -> s
    android.view.GestureDetector mGestureDetector -> t
    android.view.ScaleGestureDetector mScaleGestureDetector -> u
    android.widget.Scroller mScroller -> v
    int mScrollerLastX -> w
    int mScrollerLastY -> x
    boolean mScrollDisabled -> y
    int getDisplayedViewIndex() -> a
    void setDisplayedViewIndex(int) -> a
    void moveToNext() -> b
    void moveToPrevious() -> c
    void resetupChildren() -> d
    void onChildSetup(int,android.view.View) -> a
    void onMoveToChild(int) -> b
    void onSettle(android.view.View) -> a
    void onUnsettle(android.view.View) -> b
    android.view.View getDisplayedView() -> e
    void run() -> run
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.widget.Adapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setSelection(int) -> setSelection
    android.view.View getCached() -> f
    android.view.View getOrCreateChild(int) -> c
    void addAndMeasureChild(int,android.view.View) -> b
    void measureView(android.view.View) -> c
    android.graphics.Rect getScrollBounds(int,int,int,int) -> a
    android.graphics.Rect getScrollBounds(android.view.View) -> d
    android.graphics.Point getCorrection(android.graphics.Rect) -> a
    void postSettle(android.view.View) -> e
    void postUnsettle(android.view.View) -> f
    void slideViewOntoScreen(android.view.View) -> g
    android.graphics.Point subScreenSizeOffset(android.view.View) -> h
    int directionOfTravel(float,float) -> a
    boolean withinBoundsInDirectionOfTravel(android.graphics.Rect,float,float) -> a
com.mouee.android.view.compositeview.AdapterViewPage$1 -> com.mouee.android.view.compositeview.a:
    com.mouee.android.view.compositeview.AdapterViewPage this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.mouee.android.view.compositeview.AdapterViewPage$2 -> com.mouee.android.view.compositeview.b:
    com.mouee.android.view.compositeview.AdapterViewPage this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.mouee.android.view.compositeview.AdapterViewPageVer -> com.mouee.android.view.compositeview.AdapterViewPageVer:
    int MOVING_DIAGONALLY -> a
    int MOVING_LEFT -> b
    int MOVING_RIGHT -> c
    int MOVING_UP -> d
    int MOVING_DOWN -> e
    int FLING_MARGIN -> f
    int GAP -> g
    float MIN_SCALE -> h
    float MAX_SCALE -> i
    android.widget.Adapter mAdapter -> j
    int mCurrent -> k
    boolean mResetLayout -> l
    android.util.SparseArray mChildViews -> m
    java.util.LinkedList mViewCache -> n
    boolean mUserInteracting -> o
    boolean mScaling -> p
    float mScale -> q
    int mXScroll -> r
    int mYScroll -> s
    android.view.GestureDetector mGestureDetector -> t
    android.view.ScaleGestureDetector mScaleGestureDetector -> u
    android.widget.Scroller mScroller -> v
    int mScrollerLastX -> w
    int mScrollerLastY -> x
    boolean mScrollDisabled -> y
    int getDisplayedViewIndex() -> a
    void setDisplayedViewIndex(int) -> a
    void moveToNext() -> b
    void moveToPrevious() -> c
    void resetupChildren() -> d
    void onChildSetup(int,android.view.View) -> a
    void onMoveToChild(int) -> b
    void onSettle(android.view.View) -> a
    void onUnsettle(android.view.View) -> b
    android.view.View getDisplayedView() -> e
    void run() -> run
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.widget.Adapter getAdapter() -> getAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setAdapter(android.widget.Adapter) -> setAdapter
    void setSelection(int) -> setSelection
    android.view.View getCached() -> f
    android.view.View getOrCreateChild(int) -> c
    void addAndMeasureChild(int,android.view.View) -> b
    void measureView(android.view.View) -> c
    android.graphics.Rect getScrollBounds(int,int,int,int) -> a
    android.graphics.Rect getScrollBounds(android.view.View) -> d
    android.graphics.Point getCorrection(android.graphics.Rect) -> a
    void postSettle(android.view.View) -> e
    void postUnsettle(android.view.View) -> f
    void slideViewOntoScreen(android.view.View) -> g
    android.graphics.Point subScreenSizeOffset(android.view.View) -> h
    int directionOfTravel(float,float) -> a
    boolean withinBoundsInDirectionOfTravel(android.graphics.Rect,float,float) -> a
com.mouee.android.view.compositeview.AdapterViewPageVer$1 -> com.mouee.android.view.compositeview.c:
    com.mouee.android.view.compositeview.AdapterViewPageVer this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.mouee.android.view.compositeview.AdapterViewPageVer$2 -> com.mouee.android.view.compositeview.d:
    com.mouee.android.view.compositeview.AdapterViewPageVer this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.mouee.android.view.compositeview.ViewPageAdapter -> com.mouee.android.view.compositeview.e:
    android.content.Context mContext -> a
    java.util.ArrayList mpageIDS -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mouee.android.view.gallary.GalleryAnimation -> com.mouee.android.view.gallary.a:
    android.view.animation.Animation an -> a
    com.mouee.android.view.gallary.base.AbstractGalley gallery -> b
    void playGallery(boolean,com.mouee.android.view.gallary.base.AbstractGalley) -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.mouee.android.view.gallary.Galley3D -> com.mouee.android.view.gallary.Galley3D:
    android.graphics.Camera mCamera -> c
    int mMaxRotationAngle -> d
    int mMaxZoom -> e
    int mCoveflowCenter -> f
    int width -> a
    int height -> b
    int getMaxRotationAngle() -> a
    void setMaxRotationAngle(int) -> a
    int getMaxZoom() -> b
    void setMaxZoom(int) -> b
    int getCenterOfCoverflow() -> k
    int getCenterOfView(android.view.View) -> a
    boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation) -> getChildStaticTransformation
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void transformImageBitmap(android.widget.ImageView,android.view.animation.Transformation,int) -> a
    void registerAdapter(java.util.ArrayList) -> a
    android.view.WindowManager$LayoutParams getLayoutPrams() -> c
    void playAnimation() -> d
com.mouee.android.view.gallary.Galley3DAdapter -> com.mouee.android.view.gallary.b:
    int mGalleryItemBackground -> a
    android.content.Context mContext -> f
    java.util.ArrayList snaps -> b
    int width -> c
    int height -> d
    android.graphics.BitmapFactory$Options options -> e
    boolean createReflectedImages() -> a
    android.content.res.Resources getResources() -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View makeImage(java.lang.String) -> a
    float getScale(boolean,int) -> a
com.mouee.android.view.gallary.GalleyCommon -> com.mouee.android.view.gallary.GalleyCommon:
    int height -> a
    int width -> b
    android.view.WindowManager wm -> c
    android.view.WindowManager$LayoutParams wmParams -> d
    android.os.Handler mHandler -> e
    int FLIP_MSG -> f
    int x -> g
    int y -> h
    void registerAdapter(java.util.ArrayList) -> a
    android.view.WindowManager$LayoutParams getLayoutPrams() -> c
    void playAnimation() -> d
    void updateViewPosition() -> a
    void access$0(com.mouee.android.view.gallary.GalleyCommon) -> a
com.mouee.android.view.gallary.GalleyCommon$1 -> com.mouee.android.view.gallary.c:
    com.mouee.android.view.gallary.GalleyCommon this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mouee.android.view.gallary.GalleyCommonAdapter -> com.mouee.android.view.gallary.d:
    int mGalleryItemBackground -> a
    java.util.ArrayList snaps -> b
    int width -> c
    int height -> d
    android.graphics.BitmapFactory$Options options -> e
    android.content.Context mContext -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mouee.android.view.gallary.GalleyHelper -> com.mouee.android.view.gallary.e:
    com.mouee.android.view.gallary.base.AbstractGalley getGalley(android.content.Context) -> a
com.mouee.android.view.gallary.base.AbstractGalley -> com.mouee.android.view.gallary.base.AbstractGalley:
    android.widget.TextView pageTextView -> a
    int pageSize -> b
    int currentSectionIndex -> c
    void showPageView() -> e
    void hidePageView() -> f
    void setPageText() -> g
    android.widget.TextView getPageTextView() -> h
    void setPageTextView(android.widget.TextView) -> a
    int getPageSize() -> i
    void setPageSize(int) -> c
    int getCurrentSectionIndex() -> j
    void setCurrentSectionIndex(int) -> d
    void registerAdapter(java.util.ArrayList) -> a
    android.view.WindowManager$LayoutParams getLayoutPrams() -> c
    void playAnimation() -> d
com.mouee.android.view.layout.MoueeRelativeLayout -> com.mouee.android.view.layout.MoueeRelativeLayout:
    android.graphics.Bitmap currentscreen -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.graphics.Bitmap getCurrentScreen() -> a
    boolean onDown(android.view.MotionEvent) -> a
    void onShowPress(android.view.MotionEvent) -> c
    boolean onSingleTapUp(android.view.MotionEvent) -> d
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> b
    void onLongPress(android.view.MotionEvent) -> b
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
com.mouee.android.view.pageflip.AbstractPageFlipView -> com.mouee.android.view.pageflip.AbstractPageFlipView:
    android.graphics.Bitmap mCurPageBitmap -> a
    android.graphics.Bitmap mNextPageBitmap -> b
    com.mouee.android.view.layout.MoueeRelativeLayout viewPage -> c
    boolean _preload -> d
    android.widget.ImageView tmpimg -> e
    void setPreLoad(boolean) -> a
    void play(boolean,com.mouee.android.view.pageflip.ActionOnEnd) -> a
    void show() -> a
    void setBitmap(android.graphics.Bitmap) -> a
    void setNewBitmap(android.graphics.Bitmap) -> b
    com.mouee.android.view.layout.MoueeRelativeLayout getViewPage() -> b
    void setViewPage(com.mouee.android.view.layout.MoueeRelativeLayout) -> a
    void hide() -> c
    void recycleNextBitmap() -> d
com.mouee.android.view.pageflip.ActionOnEnd -> com.mouee.android.view.pageflip.a:
    void doAction() -> a
com.mouee.android.view.pageflip.PageFlipVerticleView -> com.mouee.android.view.pageflip.PageFlipVerticleView:
    android.content.Context _context -> f
    int _index -> g
    android.view.animation.Animation an -> h
    com.mouee.android.view.pageflip.ActionOnEnd mAction -> i
    void hide() -> c
    void play(boolean,com.mouee.android.view.pageflip.ActionOnEnd) -> a
    com.mouee.android.view.pageflip.ActionOnEnd access$0(com.mouee.android.view.pageflip.PageFlipVerticleView) -> a
com.mouee.android.view.pageflip.PageFlipVerticleView$1 -> com.mouee.android.view.pageflip.b:
    com.mouee.android.view.pageflip.PageFlipVerticleView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mouee.android.view.pageflip.PageFlipView -> com.mouee.android.view.pageflip.PageFlipView:
    android.content.Context _context -> f
    int _index -> g
    android.view.animation.Animation an -> h
    com.mouee.android.view.pageflip.ActionOnEnd mAction -> i
    android.view.View v -> j
    void hide() -> c
    void play(boolean,com.mouee.android.view.pageflip.ActionOnEnd) -> a
com.mouee.android.view.pageflip.PageFlipView$1 -> com.mouee.android.view.pageflip.c:
    com.mouee.android.view.pageflip.PageFlipView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mouee.android.view.pageflip.PageWidget -> com.mouee.android.view.pageflip.PageWidget:
    java.lang.String TAG -> M
    int mWidth -> N
    int mHeight -> O
    int mCornerX -> P
    int mCornerY -> Q
    android.graphics.Path mPath0 -> R
    android.graphics.Path mPath1 -> S
    android.graphics.PointF mTouch -> f
    android.graphics.PointF mBezierStart1 -> g
    android.graphics.PointF mBezierControl1 -> h
    android.graphics.PointF mBeziervertex1 -> i
    android.graphics.PointF mBezierEnd1 -> j
    android.graphics.PointF mBezierStart2 -> k
    android.graphics.PointF mBezierControl2 -> l
    android.graphics.PointF mBeziervertex2 -> m
    android.graphics.PointF mBezierEnd2 -> n
    float mMiddleX -> o
    float mMiddleY -> p
    float mDegrees -> q
    float mTouchToCornerDis -> r
    android.graphics.ColorMatrixColorFilter mColorMatrixFilter -> s
    android.graphics.Matrix mMatrix -> t
    float[] mMatrixArray -> u
    boolean mIsRTandLB -> v
    boolean isRight -> w
    float mMaxLength -> x
    int[] mBackShadowColors -> y
    int[] mFrontShadowColors -> z
    android.graphics.drawable.GradientDrawable mBackShadowDrawableLR -> A
    android.graphics.drawable.GradientDrawable mBackShadowDrawableRL -> B
    android.graphics.drawable.GradientDrawable mFolderShadowDrawableLR -> C
    android.graphics.drawable.GradientDrawable mFolderShadowDrawableRL -> D
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableHBT -> E
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableHTB -> F
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableVLR -> G
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableVRL -> H
    android.graphics.Paint mPaint -> I
    android.widget.Scroller mScroller -> J
    com.mouee.android.view.pageflip.PageWidget$MyCount mc -> K
    android.content.Context mContext -> L
    com.mouee.android.view.pageflip.ActionOnEnd mAction -> T
    void calcCornerXY(float,float) -> a
    boolean doTouchEvent(android.view.MotionEvent) -> a
    android.graphics.PointF getCross(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> a
    void calcPoints() -> h
    void drawCurrentPageArea(android.graphics.Canvas,android.graphics.Bitmap,android.graphics.Path) -> a
    void drawNextPageAreaAndShadow(android.graphics.Canvas,android.graphics.Bitmap) -> a
    void drawNextPageAreaAndShadow0(android.graphics.Canvas,android.graphics.Bitmap) -> b
    void setScreen(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void createDrawable() -> i
    void drawCurrentPageShadow(android.graphics.Canvas) -> a
    void drawCurrentPageShadow0(android.graphics.Canvas) -> b
    void drawCurrentBackArea(android.graphics.Canvas,android.graphics.Bitmap) -> c
    void computeScroll() -> computeScroll
    void startAnimation(int) -> a
    void abortAnimation() -> e
    boolean canDragOver() -> f
    boolean DragToRight() -> g
    void play(boolean,com.mouee.android.view.pageflip.ActionOnEnd) -> a
    void hide() -> c
    com.mouee.android.view.pageflip.ActionOnEnd access$0(com.mouee.android.view.pageflip.PageWidget) -> a
com.mouee.android.view.pageflip.PageWidget$MyCount -> com.mouee.android.view.pageflip.d:
    com.mouee.android.view.pageflip.PageWidget this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
    com.mouee.android.view.pageflip.PageWidget access$0(com.mouee.android.view.pageflip.PageWidget$MyCount) -> a
com.mouee.android.view.pageflip.PageWidget$MyCount$1 -> com.mouee.android.view.pageflip.e:
    com.mouee.android.view.pageflip.PageWidget$MyCount this$1 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
com.mouee.android.view.pageflip.TurnPageFlipView -> com.mouee.android.view.pageflip.TurnPageFlipView:
    android.widget.ImageView imageViewRight -> g
    android.widget.ImageView imageViewLeft -> h
    int curWidth -> i
    int curHeight -> j
    android.graphics.Bitmap currentS -> k
    com.mouee.android.view.pageflip.ActionOnEnd mAction -> f
    void show() -> a
    void setimg() -> e
    void hide() -> c
    void play(boolean,com.mouee.android.view.pageflip.ActionOnEnd) -> a
    void applyRotationpre(android.view.View,float,float) -> a
    void applyRotationnext(android.view.View,float,float) -> b
    android.widget.ImageView access$0(com.mouee.android.view.pageflip.TurnPageFlipView) -> a
    int access$1(com.mouee.android.view.pageflip.TurnPageFlipView) -> b
    int access$2(com.mouee.android.view.pageflip.TurnPageFlipView) -> c
    android.widget.ImageView access$3(com.mouee.android.view.pageflip.TurnPageFlipView) -> d
com.mouee.android.view.pageflip.TurnPageFlipView$1 -> com.mouee.android.view.pageflip.f:
    com.mouee.android.view.pageflip.TurnPageFlipView this$0 -> a
    float val$centerX -> b
    float val$centerY -> c
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    com.mouee.android.view.pageflip.TurnPageFlipView access$0(com.mouee.android.view.pageflip.TurnPageFlipView$1) -> a
com.mouee.android.view.pageflip.TurnPageFlipView$1$1 -> com.mouee.android.view.pageflip.g:
    com.mouee.android.view.pageflip.TurnPageFlipView$1 this$1 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mouee.android.view.pageflip.TurnPageFlipView$2 -> com.mouee.android.view.pageflip.h:
    com.mouee.android.view.pageflip.TurnPageFlipView this$0 -> a
    float val$centerY -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    com.mouee.android.view.pageflip.TurnPageFlipView access$0(com.mouee.android.view.pageflip.TurnPageFlipView$2) -> a
com.mouee.android.view.pageflip.TurnPageFlipView$2$1 -> com.mouee.android.view.pageflip.i:
    com.mouee.android.view.pageflip.TurnPageFlipView$2 this$1 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mouee.android.view.pageflip.animation.Flip3dAnimation -> com.mouee.android.view.pageflip.a.a:
    float mFromDegrees -> a
    float mToDegrees -> b
    float mCenterX -> c
    float mCenterY -> d
    android.graphics.Camera mCamera -> e
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.mouee.android.view.pageflip.animation.Rotate3dAnimation -> com.mouee.android.view.pageflip.a.b:
    float mFromDegrees -> a
    float mToDegrees -> b
    float mCenterX -> c
    float mCenterY -> d
    float mDepthZ -> e
    boolean mReverse -> f
    android.graphics.Camera mCamera -> g
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.mouee.android.view.pageflip.animation.SwapViews -> com.mouee.android.view.pageflip.a.c:
    boolean mIsFirstView -> c
    android.view.View image1 -> a
    android.view.View image2 -> b
    void run() -> run
com.mouee.android.view.plugin.sound.RecordThread -> com.mouee.android.view.a.a.a:
    android.media.AudioRecord ar -> a
    int bs -> b
    int SAMPLE_RATE_IN_HZ -> c
    boolean isRun -> d
    void run() -> run
    void pause() -> a
    void start() -> start
com.mouee.android.view.subpage.CompositeEventDispatcher -> com.mouee.android.view.subpage.a:
    com.mouee.android.view.subpage.CompositeEventDispatcher eventDispatcher -> b
    java.util.ArrayList componentList -> c
    android.view.GestureDetector mGestureDetector -> a
    com.mouee.android.view.subpage.CompositeEventDispatcher getInstance() -> a
    void init() -> b
    void init(android.view.GestureDetector) -> a
com.mouee.android.view.subpage.CompositePageAdapter -> com.mouee.android.view.subpage.b:
    android.content.Context mContext -> a
    java.util.ArrayList mPageList -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mouee.android.view.subpage.CompositePageReaderView -> com.mouee.android.view.subpage.CompositePageReaderView:
    android.view.GestureDetector mGestureDetector -> a
    int mCurrent -> b
    android.widget.Adapter mAdapter -> c
    boolean mResetLayout -> d
    int mScrollerLastX -> e
    int mScrollerLastY -> f
    boolean mScrollDisabled -> g
    android.util.SparseArray mChildViews -> h
    boolean mUserInteracting -> i
    int mXScroll -> j
    int mYScroll -> k
    int MOVING_DIAGONALLY -> l
    int MOVING_LEFT -> m
    int MOVING_RIGHT -> n
    int MOVING_UP -> o
    int MOVING_DOWN -> p
    android.widget.Scroller mScroller -> q
    int FLING_MARGIN -> r
    int GAP -> s
    java.util.LinkedList mViewCache -> t
    java.util.ArrayList mPageList -> u
    int getDisplayedViewIndex() -> a
    void setDisplayedViewIndex(int) -> a
    void onMoveToChild(int) -> b
    void moveToNext() -> b
    void moveToPrevious() -> c
    void slideViewOntoScreen(android.view.View) -> c
    android.view.View getDisplayedView() -> d
    android.graphics.Rect getScrollBounds(android.view.View) -> d
    android.graphics.Rect getScrollBounds(int,int,int,int) -> a
    android.graphics.Point getCorrection(android.graphics.Rect) -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void postUnsettle(android.view.View) -> e
    android.graphics.Point subScreenSizeOffset(android.view.View) -> f
    void onMeasure(int,int) -> onMeasure
    void measureView(android.view.View) -> g
    int directionOfTravel(float,float) -> a
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.view.View getSelectedView() -> getSelectedView
    void setSelection(int) -> setSelection
    void run() -> run
    void postSettle(android.view.View) -> h
    android.view.View getOrCreateChild(int) -> c
    void onChildSetup(int,android.view.View) -> a
    void addAndMeasureChild(int,android.view.View) -> b
    android.view.View getCached() -> e
    void onSettle(android.view.View) -> a
    void onUnsettle(android.view.View) -> b
    boolean withinBoundsInDirectionOfTravel(android.graphics.Rect,float,float) -> a
com.mouee.android.view.subpage.CompositePageReaderView$1 -> com.mouee.android.view.subpage.c:
    com.mouee.android.view.subpage.CompositePageReaderView this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.mouee.android.view.subpage.CompositePageReaderView$2 -> com.mouee.android.view.subpage.d:
    com.mouee.android.view.subpage.CompositePageReaderView this$0 -> a
    android.view.View val$v -> b
    void run() -> run
com.mouee.android.view.subpage.ViewPage -> com.mouee.android.view.subpage.ViewPage:
    java.lang.String PAGE_TYPE_HOR -> a
    java.lang.String PAGE_TYPE_VER -> b
    com.mouee.android.book.entity.Book book -> e
    com.mouee.android.book.entity.PageEntity entity -> f
    int pageX -> g
    int pageWidth -> h
    int pageY -> i
    int pageHeight -> j
    boolean issequence -> k
    long touchtime -> l
    int groupindex -> m
    long maxtime -> n
    android.graphics.Bitmap currentscreen -> o
    com.mouee.android.view.subpage.ViewPage$MyCount mc -> p
    java.util.ArrayList videoComponnetList -> q
    com.mouee.android.view.ViewPageState viewPageState -> r
    int autoPlayCount -> c
    int autoPlayFinishCount -> s
    com.mouee.android.view.subpage.ViewPage$AutoPageCountDown autoPageViewCountDown -> d
    com.mouee.android.book.entity.PageEntity getEntity() -> a
    void setEntity(com.mouee.android.book.entity.PageEntity) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams getCurrentLayoutParams() -> b
    void fitScreen() -> v
    void load(com.mouee.android.book.entity.PageEntity) -> b
    void startPlay() -> c
    void playVideo() -> d
    android.graphics.Bitmap getCurrentScreen() -> e
    void pause() -> f
    void resume() -> g
    void stop() -> h
    void setBK() -> w
    void setADView(com.mouee.android.book.entity.ContainerEntity) -> a
    void load() -> x
    void stopSequence() -> y
    void playSequence() -> z
    com.mouee.android.view.component.inter.Component getComponentByID(java.lang.String) -> a
    void computeScroll() -> computeScroll
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isHasChildPage() -> i
    void clean() -> j
    void cleanForChangePage() -> k
    int getPageX() -> l
    void setPageX(int) -> a
    int getPageWidth() -> m
    void setPageWidth(int) -> b
    int getPageY() -> n
    void setPageY(int) -> c
    int getPageHeight() -> o
    void setPageHeight(int) -> d
    com.mouee.android.book.entity.Book getBook() -> p
    void setBook(com.mouee.android.book.entity.Book) -> a
    boolean getIsSequence() -> q
    void addHq() -> r
    void removeHq() -> s
    com.mouee.android.view.ViewPageState getViewPageState() -> t
    void setViewPageState(com.mouee.android.view.ViewPageState) -> a
    void setPlayComplete() -> u
    void access$0(com.mouee.android.view.subpage.ViewPage) -> a
com.mouee.android.view.subpage.ViewPage$AutoPageCountDown -> com.mouee.android.view.subpage.e:
    com.mouee.android.view.subpage.ViewPage this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.subpage.ViewPage$MyCount -> com.mouee.android.view.subpage.f:
    com.mouee.android.view.subpage.ViewPage this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.subpage.ViewPage$MyCount1 -> com.mouee.android.view.subpage.g:
    com.mouee.android.view.component.inter.Component component -> a
    com.mouee.android.view.subpage.ViewPage this$0 -> b
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.mouee.android.view.widget.ImageCacheWidget -> com.mouee.android.view.widget.a:
    android.content.Context mContext -> a
    java.util.HashMap mTaskMap -> b
    java.util.ArrayList mSourceIDS -> c
    java.util.ArrayList mImageList -> d
    android.os.AsyncTask clearAsyncTask -> e
    int imageHeight -> f
    int imageWidth -> g
    void loadBitmap(int) -> a
    void preLoad(int) -> d
    void clear(int) -> e
    boolean isLoadingWork(java.lang.String,android.widget.ImageView) -> a
    com.mouee.android.view.widget.image.BitmapWorkerTask getBitmapWorkerTask(java.lang.String) -> a
    void recycle() -> a
    int getImageHeight() -> b
    void setImageHeight(int) -> b
    int getImageWidth() -> c
    void setImageWidth(int) -> c
    java.util.ArrayList access$0(com.mouee.android.view.widget.ImageCacheWidget) -> a
com.mouee.android.view.widget.ImageCacheWidget$1 -> com.mouee.android.view.widget.b:
    com.mouee.android.view.widget.ImageCacheWidget this$0 -> a
    java.lang.Integer doInBackground(java.lang.Integer[]) -> a
    void onPreExecute() -> onPreExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mouee.android.view.widget.image.BitmapWorkerTask -> com.mouee.android.view.widget.image.a:
    java.lang.ref.WeakReference imageViewReference -> b
    android.content.Context mContext -> c
    android.graphics.Bitmap mBitmap -> d
    java.lang.String mFileID -> a
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void load(java.lang.String) -> a
    void load(java.io.InputStream) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mouee.android.view.widget.image.CommonImageView -> com.mouee.android.view.widget.image.CommonImageView:
    android.graphics.Bitmap mBitmap -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    android.graphics.Bitmap getBitmap() -> a
    void setBitmap(android.graphics.Bitmap) -> a
    void recycle() -> b
    void recycleImidiate() -> c
    android.graphics.Bitmap access$0(com.mouee.android.view.widget.image.CommonImageView) -> a
com.mouee.android.view.widget.image.CommonImageView$1 -> com.mouee.android.view.widget.image.b:
    com.mouee.android.view.widget.image.CommonImageView this$0 -> a
    void run() -> run
com.mouee.android.view.widget.image.ImageLoaderManager -> com.mouee.android.view.widget.image.c:
    com.mouee.android.view.widget.image.ImageLoaderManager imageLoaderManager -> a
    com.mouee.android.view.widget.image.ImageLoaderManager getInstance() -> a
com.mouee.android.view.widget.image.ImageLoaderTask -> com.mouee.android.view.widget.image.d:
    java.lang.ref.WeakReference imageViewReference -> b
    android.content.Context mContext -> c
    android.graphics.Bitmap mBitmap -> d
    java.lang.String mFileID -> a
    int mResizeWidth -> e
    int mResizeHeight -> f
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void load(java.lang.String) -> a
    void load(java.io.InputStream) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mouee.android.view.widget.multilevellist.MultiBaseExpandableListAdapter -> com.mouee.android.view.widget.multilevellist.a:
    java.lang.String[] groups -> a
    java.lang.String[][] children -> b
    android.content.Context mContext -> c
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    java.lang.Object getChild(int,int) -> getChild
    long getGroupId(int) -> getGroupId
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
    android.widget.TextView getGenericView() -> a
    android.content.Context getmContext() -> b
    void setmContext(android.content.Context) -> a
com.mouee.android.view.widget.multilevellist.MultiExpandablelistview -> com.mouee.android.view.widget.multilevellist.MultiExpandablelistview:
com.mouee.android.view.widget.treeview.SuperTreeViewAdapter -> com.mouee.android.view.widget.treeview.a:
    java.util.List superTreeNodes -> a
    android.content.Context parentContext -> b
    android.widget.ExpandableListView$OnChildClickListener stvClickEvent -> c
    java.util.List GetTreeNode() -> a
    void UpdateTreeNode(java.util.List) -> a
    void RemoveAll() -> b
    java.lang.Object getChild(int,int) -> getChild
    int getChildrenCount(int) -> getChildrenCount
    android.widget.ExpandableListView getExpandableListView() -> c
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    long getChildId(int,int) -> getChildId
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    boolean isChildSelectable(int,int) -> isChildSelectable
    boolean hasStableIds() -> hasStableIds
com.mouee.android.view.widget.treeview.SuperTreeViewAdapter$1 -> com.mouee.android.view.widget.treeview.b:
    com.mouee.android.view.widget.treeview.SuperTreeViewAdapter this$0 -> a
    com.mouee.android.view.widget.treeview.TreeViewAdapter$TreeNode val$treeNode -> b
    android.widget.ExpandableListView val$treeView -> c
    void onGroupExpand(int) -> onGroupExpand
com.mouee.android.view.widget.treeview.SuperTreeViewAdapter$2 -> com.mouee.android.view.widget.treeview.c:
    com.mouee.android.view.widget.treeview.SuperTreeViewAdapter this$0 -> a
    android.widget.ExpandableListView val$treeView -> b
    void onGroupCollapse(int) -> onGroupCollapse
com.mouee.android.view.widget.treeview.SuperTreeViewAdapter$SuperTreeNode -> com.mouee.android.view.widget.treeview.d:
    java.lang.Object parent -> a
    java.util.List childs -> b
com.mouee.android.view.widget.treeview.TestExpandableList -> com.mouee.android.view.widget.treeview.TestExpandableList:
    android.widget.ExpandableListView expandableList -> a
    com.mouee.android.view.widget.treeview.TreeViewAdapter adapter -> b
    com.mouee.android.view.widget.treeview.SuperTreeViewAdapter superAdapter -> c
    android.widget.Button btnNormal -> d
    android.widget.Button btnSuper -> e
com.mouee.android.view.widget.treeview.TreeViewAdapter -> com.mouee.android.view.widget.treeview.e:
    int ItemHeight -> a
    int PaddingLeft -> b
    int myPaddingLeft -> e
    java.util.List treeNodes -> c
    android.content.Context parentContext -> d
    java.util.List GetTreeNode() -> a
    void UpdateTreeNode(java.util.List) -> a
    void RemoveAll() -> b
    java.lang.Object getChild(int,int) -> getChild
    int getChildrenCount(int) -> getChildrenCount
    android.widget.TextView getTextView(android.content.Context) -> a
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    long getChildId(int,int) -> getChildId
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    boolean isChildSelectable(int,int) -> isChildSelectable
    boolean hasStableIds() -> hasStableIds
com.mouee.android.view.widget.treeview.TreeViewAdapter$TreeNode -> com.mouee.android.view.widget.treeview.f:
    java.lang.Object parent -> a
    java.util.List childs -> b
org.vudroid.core.DecodeService -> org.vudroid.core.DecodeService:
    void setContainerView(android.view.View) -> setContainerView
    void open(java.lang.String) -> open
    void decodePage(java.lang.Object,int,org.vudroid.core.DecodeService$DecodeCallback) -> decodePage
    void decodePage(java.lang.Object,int,org.vudroid.core.DecodeService$DecodeCallback,float,android.graphics.RectF) -> decodePage
    void stopDecoding(java.lang.Object) -> stopDecoding
    int getEffectivePagesWidth() -> getEffectivePagesWidth
    int getEffectivePagesHeight() -> getEffectivePagesHeight
    int getEffectivePagesWidth(int) -> getEffectivePagesWidth
    int getEffectivePagesHeight(int) -> getEffectivePagesHeight
    int getPageCount() -> getPageCount
    int getPageWidth(int) -> getPageWidth
    int getPageHeight(int) -> getPageHeight
    android.graphics.Bitmap getBitmap(int,int,int) -> getBitmap
    void recycle() -> recycle
org.vudroid.core.DecodeService$DecodeCallback -> org.vudroid.core.DecodeService$DecodeCallback:
    void decodeComplete(android.graphics.Bitmap,float) -> decodeComplete
org.vudroid.core.DecodeServiceBase -> org.vudroid.core.DecodeServiceBase:
    int PAGE_POOL_SIZE -> PAGE_POOL_SIZE
    org.vudroid.core.codec.CodecContext codecContext -> codecContext
    android.view.View containerView -> containerView
    org.vudroid.core.codec.CodecDocument document -> document
    java.util.concurrent.ExecutorService executorService -> executorService
    java.lang.String DECODE_SERVICE -> DECODE_SERVICE
    java.util.Map decodingFutures -> decodingFutures
    java.util.HashMap pages -> pages
    java.util.Queue pageEvictionQueue -> pageEvictionQueue
    boolean isRecycled -> isRecycled
    void setContainerView(android.view.View) -> setContainerView
    void open(java.lang.String) -> open
    android.graphics.Bitmap getBitmap(int,int,int) -> getBitmap
    void decodePage(java.lang.Object,int,org.vudroid.core.DecodeService$DecodeCallback) -> decodePage
    void decodePage(java.lang.Object,int,org.vudroid.core.DecodeService$DecodeCallback,float,android.graphics.RectF) -> decodePage
    void stopDecoding(java.lang.Object) -> stopDecoding
    void performDecode(org.vudroid.core.DecodeServiceBase$DecodeTask) -> performDecode
    int getScaledHeight(org.vudroid.core.DecodeServiceBase$DecodeTask,org.vudroid.core.codec.CodecPage,float) -> getScaledHeight
    int getScaledWidth(org.vudroid.core.DecodeServiceBase$DecodeTask,org.vudroid.core.codec.CodecPage,float) -> getScaledWidth
    int getScaledHeight(org.vudroid.core.codec.CodecPage,float) -> getScaledHeight
    int getScaledWidth(org.vudroid.core.codec.CodecPage,float) -> getScaledWidth
    float calculateScale(org.vudroid.core.codec.CodecPage) -> calculateScale
    void finishDecoding(org.vudroid.core.DecodeServiceBase$DecodeTask,android.graphics.Bitmap) -> finishDecoding
    void preloadNextPage(int) -> preloadNextPage
    org.vudroid.core.codec.CodecPage getPage(int) -> getPage
    void waitForDecode(org.vudroid.core.codec.CodecPage) -> waitForDecode
    int getTargetWidth() -> getTargetWidth
    int getEffectivePagesWidth() -> getEffectivePagesWidth
    int getEffectivePagesHeight() -> getEffectivePagesHeight
    int getEffectivePagesWidth(int) -> getEffectivePagesWidth
    int getEffectivePagesHeight(int) -> getEffectivePagesHeight
    int getPageWidth(int) -> getPageWidth
    int getPageHeight(int) -> getPageHeight
    void updateImage(org.vudroid.core.DecodeServiceBase$DecodeTask,android.graphics.Bitmap) -> updateImage
    boolean isTaskDead(org.vudroid.core.DecodeServiceBase$DecodeTask) -> isTaskDead
    int getPageCount() -> getPageCount
    void recycle() -> recycle
    void access$0(org.vudroid.core.DecodeServiceBase,org.vudroid.core.DecodeServiceBase$DecodeTask) -> access$0
    java.util.HashMap access$1(org.vudroid.core.DecodeServiceBase) -> access$1
    org.vudroid.core.codec.CodecDocument access$2(org.vudroid.core.DecodeServiceBase) -> access$2
    org.vudroid.core.codec.CodecContext access$3(org.vudroid.core.DecodeServiceBase) -> access$3
org.vudroid.core.DecodeServiceBase$1 -> org.vudroid.core.DecodeServiceBase$1:
    org.vudroid.core.DecodeServiceBase this$0 -> this$0
    org.vudroid.core.DecodeServiceBase$DecodeTask val$decodeTask -> val$decodeTask
    void run() -> run
org.vudroid.core.DecodeServiceBase$2 -> org.vudroid.core.DecodeServiceBase$2:
    org.vudroid.core.DecodeServiceBase this$0 -> this$0
    void run() -> run
org.vudroid.core.DecodeServiceBase$DecodeTask -> org.vudroid.core.DecodeServiceBase$DecodeTask:
    java.lang.Object decodeKey -> decodeKey
    int pageNumber -> pageNumber
    float zoom -> zoom
    org.vudroid.core.DecodeService$DecodeCallback decodeCallback -> decodeCallback
    android.graphics.RectF pageSliceBounds -> pageSliceBounds
    org.vudroid.core.DecodeServiceBase this$0 -> this$0
    int access$1(org.vudroid.core.DecodeServiceBase$DecodeTask) -> access$1
    float access$2(org.vudroid.core.DecodeServiceBase$DecodeTask) -> access$2
    android.graphics.RectF access$3(org.vudroid.core.DecodeServiceBase$DecodeTask) -> access$3
    org.vudroid.core.DecodeService$DecodeCallback access$4(org.vudroid.core.DecodeServiceBase$DecodeTask) -> access$4
    java.lang.Object access$5(org.vudroid.core.DecodeServiceBase$DecodeTask) -> access$5
org.vudroid.core.DocumentView -> org.vudroid.core.DocumentView:
    org.vudroid.core.models.ZoomModel zoomModel -> zoomModel
    org.vudroid.core.models.CurrentPageModel currentPageModel -> currentPageModel
    org.vudroid.core.models.DecodingProgressModel progressModel -> progressModel
    org.vudroid.core.DecodeService decodeService -> decodeService
    java.util.HashMap pages -> pages
    boolean isInitialized -> isInitialized
    float lastX -> lastX
    float lastY -> lastY
    android.view.VelocityTracker velocityTracker -> velocityTracker
    android.widget.Scroller scroller -> scroller
    android.graphics.RectF viewRect -> viewRect
    boolean inZoom -> inZoom
    long lastDownEventTime -> lastDownEventTime
    int DOUBLE_TAP_TIME -> DOUBLE_TAP_TIME
    org.vudroid.core.multitouch.MultiTouchZoom multiTouchZoom -> multiTouchZoom
    boolean isPortrait -> isPortrait
    int pageIndex -> pageIndex
    int pageCount -> pageCount
    java.io.File cacheDir -> cacheDir
    int decodingPage -> decodingPage
    android.view.GestureDetector gestureDetector -> gestureDetector
    java.util.concurrent.locks.ReentrantLock lock -> lock
    boolean isChanged -> isChanged
    int SWIPE_MIN_DISTANCE -> SWIPE_MIN_DISTANCE
    int SWIPE_THRESHOLD_VELOCITY -> SWIPE_THRESHOLD_VELOCITY
    void refresh() -> refresh
    void setProgressModel(org.vudroid.core.models.DecodingProgressModel) -> setProgressModel
    void setPageModel(org.vudroid.core.models.CurrentPageModel) -> setPageModel
    void openDoc(java.lang.String) -> openDoc
    void initMultiTouchZoomIfAvailable(org.vudroid.core.models.ZoomModel) -> initMultiTouchZoomIfAvailable
    void setDecodeService(org.vudroid.core.DecodeService) -> setDecodeService
    void init() -> init
    void recyle() -> recyle
    void goToPageImpl(int) -> goToPageImpl
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updatePageVisibility() -> updatePageVisibility
    void commitZoom() -> commitZoom
    void showDocument() -> showDocument
    void changePage(int) -> changePage
    void goToPage(int) -> goToPage
    int getCurrentPage() -> getCurrentPage
    void zoomChanged(float,float) -> zoomChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setLastPosition(android.view.MotionEvent) -> setLastPosition
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void verticalDpadScroll(int) -> verticalDpadScroll
    void lineByLineMoveTo(int) -> lineByLineMoveTo
    int getTopLimit() -> getTopLimit
    int getLeftLimit() -> getLeftLimit
    int getBottomLimit() -> getBottomLimit
    int getRightLimit() -> getRightLimit
    void scrollTo(int,int) -> scrollTo
    android.graphics.RectF getViewRect() -> getViewRect
    void computeScroll() -> computeScroll
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void invalidatePageSizes() -> invalidatePageSizes
    void invalidateScroll(float) -> invalidateScroll
    float getScrollScaleRatio() -> getScrollScaleRatio
    void stopScroller() -> stopScroller
    void savePage(org.vudroid.core.Page) -> savePage
    android.graphics.Bitmap loadPage(int) -> loadPage
    void setPortrait(boolean) -> setPortrait
    boolean isPortrait() -> isPortrait
    void access$0(org.vudroid.core.DocumentView) -> access$0
    void access$1(org.vudroid.core.DocumentView) -> access$1
    void access$2(org.vudroid.core.DocumentView,int) -> access$2
    java.util.HashMap access$3(org.vudroid.core.DocumentView) -> access$3
org.vudroid.core.DocumentView$1 -> org.vudroid.core.DocumentView$1:
    org.vudroid.core.DocumentView this$0 -> this$0
    void run() -> run
org.vudroid.core.DocumentView$2 -> org.vudroid.core.DocumentView$2:
    org.vudroid.core.DocumentView this$0 -> this$0
    org.vudroid.core.Page val$page -> val$page
    int val$toPage -> val$toPage
    void decodeComplete(android.graphics.Bitmap,float) -> decodeComplete
    org.vudroid.core.DocumentView access$0(org.vudroid.core.DocumentView$2) -> access$0
org.vudroid.core.DocumentView$2$1 -> org.vudroid.core.DocumentView$2$1:
    org.vudroid.core.DocumentView$2 this$1 -> this$1
    void run() -> run
org.vudroid.core.DocumentView$3 -> org.vudroid.core.DocumentView$3:
    org.vudroid.core.DocumentView this$0 -> this$0
    void run() -> run
org.vudroid.core.DocumentView$4 -> org.vudroid.core.DocumentView$4:
    org.vudroid.core.DocumentView this$0 -> this$0
    void run() -> run
org.vudroid.core.DocumentView$5 -> org.vudroid.core.DocumentView$5:
    org.vudroid.core.DocumentView this$0 -> this$0
    void run() -> run
org.vudroid.core.DocumentView$MyGestureDetector -> org.vudroid.core.DocumentView$MyGestureDetector:
    org.vudroid.core.DocumentView this$0 -> this$0
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
org.vudroid.core.DocumentViewNew -> org.vudroid.core.DocumentViewNew:
    org.vudroid.core.models.ZoomModel zoomModel -> zoomModel
    org.vudroid.core.models.CurrentPageModel currentPageModel -> currentPageModel
    org.vudroid.core.models.DecodingProgressModel progressModel -> progressModel
    org.vudroid.core.DecodeService decodeService -> decodeService
    java.util.HashMap pages -> pages
    boolean isInitialized -> isInitialized
    float lastX -> lastX
    float lastY -> lastY
    android.view.VelocityTracker velocityTracker -> velocityTracker
    android.widget.Scroller scroller -> scroller
    android.graphics.RectF viewRect -> viewRect
    boolean inZoom -> inZoom
    long lastDownEventTime -> lastDownEventTime
    int DOUBLE_TAP_TIME -> DOUBLE_TAP_TIME
    org.vudroid.core.multitouch.MultiTouchZoom multiTouchZoom -> multiTouchZoom
    boolean isPortrait -> isPortrait
    int pageIndex -> pageIndex
    int pageCount -> pageCount
    java.io.File cacheDir -> cacheDir
    int decodingPage -> decodingPage
    android.view.GestureDetector gestureDetector -> gestureDetector
    java.util.concurrent.locks.ReentrantLock lock -> lock
    boolean isChanged -> isChanged
    boolean isLoading -> isLoading
    boolean testState -> testState
    int SWIPE_MIN_DISTANCE -> SWIPE_MIN_DISTANCE
    int SWIPE_THRESHOLD_VELOCITY -> SWIPE_THRESHOLD_VELOCITY
    void refresh() -> refresh
    void setProgressModel(org.vudroid.core.models.DecodingProgressModel) -> setProgressModel
    void setPageModel(org.vudroid.core.models.CurrentPageModel) -> setPageModel
    void openDoc(java.lang.String) -> openDoc
    void initMultiTouchZoomIfAvailable(org.vudroid.core.models.ZoomModel) -> initMultiTouchZoomIfAvailable
    void setDecodeService(org.vudroid.core.DecodeService) -> setDecodeService
    void init() -> init
    void recyle() -> recyle
    void goToPageImpl(int) -> goToPageImpl
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updatePageVisibility() -> updatePageVisibility
    void commitZoom() -> commitZoom
    void showDocument() -> showDocument
    void changePage(int) -> changePage
    void goToPage(int) -> goToPage
    int getCurrentPage() -> getCurrentPage
    void zoomChanged(float,float) -> zoomChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setLastPosition(android.view.MotionEvent) -> setLastPosition
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void verticalDpadScroll(int) -> verticalDpadScroll
    void lineByLineMoveTo(int) -> lineByLineMoveTo
    int getTopLimit() -> getTopLimit
    int getLeftLimit() -> getLeftLimit
    int getBottomLimit() -> getBottomLimit
    int getRightLimit() -> getRightLimit
    void scrollTo(int,int) -> scrollTo
    android.graphics.RectF getViewRect() -> getViewRect
    void computeScroll() -> computeScroll
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void invalidatePageSizes() -> invalidatePageSizes
    void invalidateScroll(float) -> invalidateScroll
    float getScrollScaleRatio() -> getScrollScaleRatio
    void stopScroller() -> stopScroller
    void savePage(org.vudroid.core.PageNew) -> savePage
    android.graphics.Bitmap loadPage(int) -> loadPage
    void setPortrait(boolean) -> setPortrait
    boolean isPortrait() -> isPortrait
    boolean isTestState() -> isTestState
    void setTestState(boolean) -> setTestState
    void access$0(org.vudroid.core.DocumentViewNew) -> access$0
    void access$1(org.vudroid.core.DocumentViewNew) -> access$1
    void access$2(org.vudroid.core.DocumentViewNew,int) -> access$2
    java.util.HashMap access$3(org.vudroid.core.DocumentViewNew) -> access$3
    void access$4(org.vudroid.core.DocumentViewNew,boolean) -> access$4
    boolean access$5(org.vudroid.core.DocumentViewNew) -> access$5
org.vudroid.core.DocumentViewNew$1 -> org.vudroid.core.DocumentViewNew$1:
    org.vudroid.core.DocumentViewNew this$0 -> this$0
    void run() -> run
org.vudroid.core.DocumentViewNew$2 -> org.vudroid.core.DocumentViewNew$2:
    org.vudroid.core.DocumentViewNew this$0 -> this$0
    org.vudroid.core.PageNew val$page -> val$page
    int val$toPage -> val$toPage
    void decodeComplete(android.graphics.Bitmap,float) -> decodeComplete
    org.vudroid.core.DocumentViewNew access$0(org.vudroid.core.DocumentViewNew$2) -> access$0
org.vudroid.core.DocumentViewNew$2$1 -> org.vudroid.core.DocumentViewNew$2$1:
    org.vudroid.core.DocumentViewNew$2 this$1 -> this$1
    void run() -> run
org.vudroid.core.DocumentViewNew$3 -> org.vudroid.core.DocumentViewNew$3:
    org.vudroid.core.DocumentViewNew this$0 -> this$0
    void run() -> run
org.vudroid.core.DocumentViewNew$4 -> org.vudroid.core.DocumentViewNew$4:
    org.vudroid.core.DocumentViewNew this$0 -> this$0
    void run() -> run
org.vudroid.core.DocumentViewNew$5 -> org.vudroid.core.DocumentViewNew$5:
    org.vudroid.core.DocumentViewNew this$0 -> this$0
    void run() -> run
org.vudroid.core.DocumentViewNew$MyGestureDetector -> org.vudroid.core.DocumentViewNew$MyGestureDetector:
    org.vudroid.core.DocumentViewNew this$0 -> this$0
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
org.vudroid.core.Page -> org.vudroid.core.Page:
    int index -> index
    android.graphics.RectF bounds -> bounds
    android.graphics.Bitmap bitmap -> bitmap
    org.vudroid.core.PageTreeNode node -> node
    org.vudroid.core.DocumentView documentView -> documentView
    android.graphics.Paint fillPaint -> fillPaint
    android.graphics.Paint strokePaint -> strokePaint
    java.util.concurrent.locks.ReentrantLock lock -> lock
    float aspectRatio -> aspectRatio
    void dispose() -> dispose
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    android.graphics.Bitmap getBitmap() -> getBitmap
    float getPageHeight(int,float) -> getPageHeight
    int getTop() -> getTop
    int getBottom() -> getBottom
    void draw(android.graphics.Canvas) -> draw
    android.graphics.Paint strokePaint() -> strokePaint
    android.graphics.Paint fillPaint() -> fillPaint
    android.text.TextPaint textPaint() -> textPaint
    float getAspectRatio() -> getAspectRatio
    void setAspectRatio(float) -> setAspectRatio
    boolean isVisible() -> isVisible
    void setAspectRatio(int,int) -> setAspectRatio
    void setBounds(android.graphics.RectF) -> setBounds
    void updateVisibility() -> updateVisibility
    void invalidate() -> invalidate
org.vudroid.core.PageNew -> org.vudroid.core.PageNew:
    int index -> index
    android.graphics.RectF bounds -> bounds
    android.graphics.Bitmap bitmap -> bitmap
    org.vudroid.core.PageTreeNodeNew node -> node
    org.vudroid.core.DocumentViewNew documentView -> documentView
    android.graphics.Paint fillPaint -> fillPaint
    android.graphics.Paint strokePaint -> strokePaint
    java.util.concurrent.locks.ReentrantLock lock -> lock
    float aspectRatio -> aspectRatio
    void dispose() -> dispose
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    android.graphics.Bitmap getBitmap() -> getBitmap
    float getPageHeight(int,float) -> getPageHeight
    int getTop() -> getTop
    int getBottom() -> getBottom
    void draw(android.graphics.Canvas) -> draw
    android.graphics.Paint strokePaint() -> strokePaint
    android.graphics.Paint fillPaint() -> fillPaint
    android.text.TextPaint textPaint() -> textPaint
    float getAspectRatio() -> getAspectRatio
    void setAspectRatio(float) -> setAspectRatio
    boolean isVisible() -> isVisible
    void setAspectRatio(int,int) -> setAspectRatio
    void setBounds(android.graphics.RectF) -> setBounds
    void updateVisibility() -> updateVisibility
    void invalidate() -> invalidate
org.vudroid.core.PageTreeNode -> org.vudroid.core.PageTreeNode:
    int SLICE_SIZE -> SLICE_SIZE
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.ref.SoftReference bitmapWeakReference -> bitmapWeakReference
    boolean decodingNow -> decodingNow
    android.graphics.RectF pageSliceBounds -> pageSliceBounds
    org.vudroid.core.Page page -> page
    org.vudroid.core.PageTreeNode[] children -> children
    int treeNodeDepthLevel -> treeNodeDepthLevel
    android.graphics.Matrix matrix -> matrix
    android.graphics.Paint bitmapPaint -> bitmapPaint
    org.vudroid.core.DocumentView documentView -> documentView
    boolean invalidateFlag -> invalidateFlag
    android.graphics.Rect targetRect -> targetRect
    android.graphics.RectF targetRectF -> targetRectF
    void updateVisibility() -> updateVisibility
    void invalidate() -> invalidate
    void invalidateRecursive() -> invalidateRecursive
    void invalidateNodeBounds() -> invalidateNodeBounds
    void draw(android.graphics.Canvas) -> draw
    boolean isVisible() -> isVisible
    android.graphics.RectF getTargetRectF() -> getTargetRectF
    void invalidateChildren() -> invalidateChildren
    boolean thresholdHit() -> thresholdHit
    android.graphics.Bitmap getBitmap() -> getBitmap
    void restoreBitmapReference() -> restoreBitmapReference
    void decodePageTreeNode() -> decodePageTreeNode
    android.graphics.RectF evaluatePageSliceBounds(android.graphics.RectF,org.vudroid.core.PageTreeNode) -> evaluatePageSliceBounds
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    boolean isDecodingNow() -> isDecodingNow
    void setDecodingNow(boolean) -> setDecodingNow
    android.graphics.Rect getTargetRect() -> getTargetRect
    void stopDecodingThisNode() -> stopDecodingThisNode
    boolean isHiddenByChildren() -> isHiddenByChildren
    void recycleChildren() -> recycleChildren
    boolean containsBitmaps() -> containsBitmaps
    boolean childrenContainBitmaps() -> childrenContainBitmaps
    void recycle() -> recycle
    boolean isVisibleAndNotHiddenByChildren() -> isVisibleAndNotHiddenByChildren
    org.vudroid.core.DocumentView access$0(org.vudroid.core.PageTreeNode) -> access$0
    void access$1(org.vudroid.core.PageTreeNode,android.graphics.Bitmap) -> access$1
    void access$2(org.vudroid.core.PageTreeNode,boolean) -> access$2
    void access$3(org.vudroid.core.PageTreeNode,boolean) -> access$3
    org.vudroid.core.Page access$4(org.vudroid.core.PageTreeNode) -> access$4
    void access$5(org.vudroid.core.PageTreeNode) -> access$5
org.vudroid.core.PageTreeNode$1 -> org.vudroid.core.PageTreeNode$1:
    org.vudroid.core.PageTreeNode this$0 -> this$0
    void decodeComplete(android.graphics.Bitmap,float) -> decodeComplete
    org.vudroid.core.PageTreeNode access$0(org.vudroid.core.PageTreeNode$1) -> access$0
org.vudroid.core.PageTreeNode$1$1 -> org.vudroid.core.PageTreeNode$1$1:
    org.vudroid.core.PageTreeNode$1 this$1 -> this$1
    float val$zoom -> val$zoom
    android.graphics.Bitmap val$bitmap -> val$bitmap
    void run() -> run
org.vudroid.core.PageTreeNodeNew -> org.vudroid.core.PageTreeNodeNew:
    int SLICE_SIZE -> SLICE_SIZE
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.ref.SoftReference bitmapWeakReference -> bitmapWeakReference
    boolean decodingNow -> decodingNow
    android.graphics.RectF pageSliceBounds -> pageSliceBounds
    org.vudroid.core.PageNew page -> page
    org.vudroid.core.PageTreeNodeNew[] children -> children
    int treeNodeDepthLevel -> treeNodeDepthLevel
    android.graphics.Matrix matrix -> matrix
    android.graphics.Paint bitmapPaint -> bitmapPaint
    org.vudroid.core.DocumentViewNew documentView -> documentView
    boolean invalidateFlag -> invalidateFlag
    android.graphics.Rect targetRect -> targetRect
    android.graphics.RectF targetRectF -> targetRectF
    void updateVisibility() -> updateVisibility
    void invalidate() -> invalidate
    void invalidateRecursive() -> invalidateRecursive
    void invalidateNodeBounds() -> invalidateNodeBounds
    void draw(android.graphics.Canvas) -> draw
    boolean isVisible() -> isVisible
    android.graphics.RectF getTargetRectF() -> getTargetRectF
    void invalidateChildren() -> invalidateChildren
    boolean thresholdHit() -> thresholdHit
    android.graphics.Bitmap getBitmap() -> getBitmap
    void restoreBitmapReference() -> restoreBitmapReference
    void decodePageTreeNode() -> decodePageTreeNode
    android.graphics.RectF evaluatePageSliceBounds(android.graphics.RectF,org.vudroid.core.PageTreeNodeNew) -> evaluatePageSliceBounds
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    boolean isDecodingNow() -> isDecodingNow
    void setDecodingNow(boolean) -> setDecodingNow
    android.graphics.Rect getTargetRect() -> getTargetRect
    void stopDecodingThisNode() -> stopDecodingThisNode
    boolean isHiddenByChildren() -> isHiddenByChildren
    void recycleChildren() -> recycleChildren
    boolean containsBitmaps() -> containsBitmaps
    boolean childrenContainBitmaps() -> childrenContainBitmaps
    void recycle() -> recycle
    boolean isVisibleAndNotHiddenByChildren() -> isVisibleAndNotHiddenByChildren
    org.vudroid.core.DocumentViewNew access$0(org.vudroid.core.PageTreeNodeNew) -> access$0
    void access$1(org.vudroid.core.PageTreeNodeNew,android.graphics.Bitmap) -> access$1
    void access$2(org.vudroid.core.PageTreeNodeNew,boolean) -> access$2
    void access$3(org.vudroid.core.PageTreeNodeNew,boolean) -> access$3
    org.vudroid.core.PageNew access$4(org.vudroid.core.PageTreeNodeNew) -> access$4
    void access$5(org.vudroid.core.PageTreeNodeNew) -> access$5
org.vudroid.core.PageTreeNodeNew$1 -> org.vudroid.core.PageTreeNodeNew$1:
    org.vudroid.core.PageTreeNodeNew this$0 -> this$0
    void decodeComplete(android.graphics.Bitmap,float) -> decodeComplete
    org.vudroid.core.PageTreeNodeNew access$0(org.vudroid.core.PageTreeNodeNew$1) -> access$0
org.vudroid.core.PageTreeNodeNew$1$1 -> org.vudroid.core.PageTreeNodeNew$1$1:
    org.vudroid.core.PageTreeNodeNew$1 this$1 -> this$1
    float val$zoom -> val$zoom
    android.graphics.Bitmap val$bitmap -> val$bitmap
    void run() -> run
org.vudroid.core.VuDroidLibraryLoader -> org.vudroid.core.VuDroidLibraryLoader:
    boolean alreadyLoaded -> alreadyLoaded
    void load() -> load
org.vudroid.core.acts.BaseBrowserActivity -> org.vudroid.core.acts.BaseBrowserActivity:
    org.vudroid.core.acts.BrowserAdapter adapter -> adapter
    java.lang.String CURRENT_DIRECTORY -> CURRENT_DIRECTORY
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> onItemClickListener
    org.vudroid.core.acts.UriBrowserAdapter recentAdapter -> recentAdapter
    org.vudroid.core.acts.ViewerPreferences viewerPreferences -> viewerPreferences
    java.io.FileFilter filter -> filter
    java.io.FileFilter createFileFilter() -> createFileFilter
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.widget.ListView initBrowserListView() -> initBrowserListView
    android.widget.ListView initRecentListView() -> initRecentListView
    void showDocument(java.io.File) -> showDocument
    void showDocument(android.net.Uri) -> showDocument
    void setCurrentDir(java.io.File) -> setCurrentDir
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onResume() -> onResume
    void access$0(org.vudroid.core.acts.BaseBrowserActivity,java.io.File) -> access$0
    void access$1(org.vudroid.core.acts.BaseBrowserActivity,java.io.File) -> access$1
org.vudroid.core.acts.BaseBrowserActivity$1 -> org.vudroid.core.acts.BaseBrowserActivity$1:
    org.vudroid.core.acts.BaseBrowserActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.vudroid.core.acts.BaseBrowserActivity$2 -> org.vudroid.core.acts.BaseBrowserActivity$2:
    org.vudroid.core.acts.BaseBrowserActivity this$0 -> this$0
    android.widget.ListView val$browseList -> val$browseList
    android.view.View createTabContent(java.lang.String) -> createTabContent
org.vudroid.core.acts.BaseBrowserActivity$3 -> org.vudroid.core.acts.BaseBrowserActivity$3:
    org.vudroid.core.acts.BaseBrowserActivity this$0 -> this$0
    android.widget.ListView val$recentListView -> val$recentListView
    android.view.View createTabContent(java.lang.String) -> createTabContent
org.vudroid.core.acts.BaseBrowserActivity$4 -> org.vudroid.core.acts.BaseBrowserActivity$4:
    org.vudroid.core.acts.BaseBrowserActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.vudroid.core.acts.BasePageViewerActivity -> org.vudroid.core.acts.BasePageViewerActivity:
    int MENU_EXIT -> MENU_EXIT
    int MENU_GOTO -> MENU_GOTO
    int MENU_FULL_SCREEN -> MENU_FULL_SCREEN
    int DIALOG_GOTO -> DIALOG_GOTO
    java.lang.String DOCUMENT_VIEW_STATE_PREFERENCES -> DOCUMENT_VIEW_STATE_PREFERENCES
    org.vudroid.core.DecodeService decodeService -> decodeService
    org.vudroid.core.DocumentViewNew documentView -> documentView
    org.vudroid.core.acts.ViewerPreferences viewerPreferences -> viewerPreferences
    android.widget.Toast pageNumberToast -> pageNumberToast
    org.vudroid.core.models.CurrentPageModel currentPageModel -> currentPageModel
    android.content.Intent intent -> intent
    android.widget.EditText editText -> editText
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void decodingProgressChanged(int) -> decodingProgressChanged
    void currentPageChanged(int) -> currentPageChanged
    void setWindowTitle() -> setWindowTitle
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setFullScreen() -> setFullScreen
    org.vudroid.core.views.PageViewZoomControls createZoomControls(org.vudroid.core.models.ZoomModel) -> createZoomControls
    android.widget.FrameLayout createMainContainer() -> createMainContainer
    void initDecodeService() -> initDecodeService
    org.vudroid.core.DecodeService createDecodeService() -> createDecodeService
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void saveCurrentPage() -> saveCurrentPage
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void setFullScreenMenuItemText(android.view.MenuItem) -> setFullScreenMenuItemText
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    org.vudroid.core.DocumentViewNew access$0(org.vudroid.core.acts.BasePageViewerActivity) -> access$0
    android.widget.EditText access$1(org.vudroid.core.acts.BasePageViewerActivity) -> access$1
org.vudroid.core.acts.BasePageViewerActivity$1 -> org.vudroid.core.acts.BasePageViewerActivity$1:
    org.vudroid.core.acts.BasePageViewerActivity this$0 -> this$0
    int val$currentlyDecoding -> val$currentlyDecoding
    void run() -> run
org.vudroid.core.acts.BasePageViewerActivity$MyButtonHandler -> org.vudroid.core.acts.BasePageViewerActivity$MyButtonHandler:
    org.vudroid.core.acts.BasePageViewerActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
org.vudroid.core.acts.BaseViewerActivity -> org.vudroid.core.acts.BaseViewerActivity:
    int MENU_EXIT -> MENU_EXIT
    int MENU_GOTO -> MENU_GOTO
    int MENU_FULL_SCREEN -> MENU_FULL_SCREEN
    int DIALOG_GOTO -> DIALOG_GOTO
    java.lang.String DOCUMENT_VIEW_STATE_PREFERENCES -> DOCUMENT_VIEW_STATE_PREFERENCES
    org.vudroid.core.DecodeService decodeService -> decodeService
    org.vudroid.core.DocumentView documentView -> documentView
    org.vudroid.core.acts.ViewerPreferences viewerPreferences -> viewerPreferences
    android.widget.Toast pageNumberToast -> pageNumberToast
    org.vudroid.core.models.CurrentPageModel currentPageModel -> currentPageModel
    android.content.Intent intent -> intent
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void decodingProgressChanged(int) -> decodingProgressChanged
    void currentPageChanged(int) -> currentPageChanged
    void setWindowTitle() -> setWindowTitle
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setFullScreen() -> setFullScreen
    org.vudroid.core.views.PageViewZoomControls createZoomControls(org.vudroid.core.models.ZoomModel) -> createZoomControls
    android.widget.FrameLayout createMainContainer() -> createMainContainer
    void initDecodeService() -> initDecodeService
    org.vudroid.core.DecodeService createDecodeService() -> createDecodeService
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void saveCurrentPage() -> saveCurrentPage
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void setFullScreenMenuItemText(android.view.MenuItem) -> setFullScreenMenuItemText
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    org.vudroid.core.DocumentView access$0(org.vudroid.core.acts.BaseViewerActivity) -> access$0
org.vudroid.core.acts.BaseViewerActivity$1 -> org.vudroid.core.acts.BaseViewerActivity$1:
    org.vudroid.core.acts.BaseViewerActivity this$0 -> this$0
    int val$currentlyDecoding -> val$currentlyDecoding
    void run() -> run
org.vudroid.core.acts.BaseViewerActivity$MyButtonHandler -> org.vudroid.core.acts.BaseViewerActivity$MyButtonHandler:
    org.vudroid.core.acts.BaseViewerActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
org.vudroid.core.acts.BrowserAdapter -> org.vudroid.core.acts.BrowserAdapter:
    android.content.Context context -> context
    java.io.File currentDirectory -> currentDirectory
    java.util.List files -> files
    java.io.FileFilter filter -> filter
    int getCount() -> getCount
    java.io.File getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setCurrentDirectory(java.io.File) -> setCurrentDirectory
    void setFiles(java.util.List) -> setFiles
    java.io.File getCurrentDirectory() -> getCurrentDirectory
    java.lang.Object getItem(int) -> getItem
org.vudroid.core.acts.BrowserAdapter$1 -> org.vudroid.core.acts.BrowserAdapter$1:
    org.vudroid.core.acts.BrowserAdapter this$0 -> this$0
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.vudroid.core.acts.MainBrowserActivity -> org.vudroid.core.acts.MainBrowserActivity:
    java.util.HashMap extensionToActivity -> extensionToActivity
    java.io.FileFilter createFileFilter() -> createFileFilter
    void showDocument(android.net.Uri) -> showDocument
    java.util.HashMap access$0() -> access$0
org.vudroid.core.acts.MainBrowserActivity$1 -> org.vudroid.core.acts.MainBrowserActivity$1:
    org.vudroid.core.acts.MainBrowserActivity this$0 -> this$0
    boolean accept(java.io.File) -> accept
org.vudroid.core.acts.PdfViewerActivity -> org.vudroid.core.acts.PdfViewerActivity:
    org.vudroid.core.DecodeService createDecodeService() -> createDecodeService
org.vudroid.core.acts.UriBrowserAdapter -> org.vudroid.core.acts.UriBrowserAdapter:
    java.util.List uris -> uris
    int getCount() -> getCount
    android.net.Uri getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setUris(java.util.List) -> setUris
    java.lang.Object getItem(int) -> getItem
org.vudroid.core.acts.ViewerPreferences -> org.vudroid.core.acts.ViewerPreferences:
    android.content.SharedPreferences sharedPreferences -> sharedPreferences
    java.lang.String FULL_SCREEN -> FULL_SCREEN
    void setFullScreen(boolean) -> setFullScreen
    boolean isFullScreen() -> isFullScreen
    void addRecent(android.net.Uri) -> addRecent
    java.util.List getRecent() -> getRecent
org.vudroid.core.codec.CodecContext -> org.vudroid.core.codec.CodecContext:
    org.vudroid.core.codec.CodecDocument openDocument(java.lang.String) -> openDocument
    void setContentResolver(android.content.ContentResolver) -> setContentResolver
    void recycle() -> recycle
org.vudroid.core.codec.CodecDocument -> org.vudroid.core.codec.CodecDocument:
    org.vudroid.core.codec.CodecPage getPage(int) -> getPage
    int getPageCount() -> getPageCount
    void recycle() -> recycle
org.vudroid.core.codec.CodecPage -> org.vudroid.core.codec.CodecPage:
    boolean isDecoding() -> isDecoding
    void waitForDecode() -> waitForDecode
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap renderBitmap(int,int,android.graphics.RectF) -> renderBitmap
    void recycle() -> recycle
org.vudroid.core.events.BringUpZoomControlsEvent -> org.vudroid.core.events.BringUpZoomControlsEvent:
    void dispatchSafely(org.vudroid.core.events.BringUpZoomControlsListener) -> dispatchSafely
    void dispatchSafely(java.lang.Object) -> dispatchSafely
org.vudroid.core.events.BringUpZoomControlsListener -> org.vudroid.core.events.BringUpZoomControlsListener:
    void toggleZoomControls() -> toggleZoomControls
org.vudroid.core.events.CurrentPageListener -> org.vudroid.core.events.CurrentPageListener:
    void currentPageChanged(int) -> currentPageChanged
org.vudroid.core.events.CurrentPageListener$CurrentPageChangedEvent -> org.vudroid.core.events.CurrentPageListener$CurrentPageChangedEvent:
    int pageIndex -> pageIndex
    void dispatchSafely(org.vudroid.core.events.CurrentPageListener) -> dispatchSafely
    void dispatchSafely(java.lang.Object) -> dispatchSafely
org.vudroid.core.events.DecodingProgressListener -> org.vudroid.core.events.DecodingProgressListener:
    void decodingProgressChanged(int) -> decodingProgressChanged
org.vudroid.core.events.DecodingProgressListener$DecodingProgressEvent -> org.vudroid.core.events.DecodingProgressListener$DecodingProgressEvent:
    int currentlyDecoding -> currentlyDecoding
    void dispatchSafely(org.vudroid.core.events.DecodingProgressListener) -> dispatchSafely
    void dispatchSafely(java.lang.Object) -> dispatchSafely
org.vudroid.core.events.Event -> org.vudroid.core.events.Event:
    void dispatchOn(java.lang.Object) -> dispatchOn
org.vudroid.core.events.EventDispatcher -> org.vudroid.core.events.EventDispatcher:
    java.util.ArrayList listeners -> listeners
    void dispatch(org.vudroid.core.events.Event) -> dispatch
    void addEventListener(java.lang.Object) -> addEventListener
    void removeEventListener(java.lang.Object) -> removeEventListener
org.vudroid.core.events.SafeEvent -> org.vudroid.core.events.SafeEvent:
    java.lang.Class listenerType -> listenerType
    java.lang.Class getListenerType() -> getListenerType
    void dispatchOn(java.lang.Object) -> dispatchOn
    void dispatchSafely(java.lang.Object) -> dispatchSafely
org.vudroid.core.events.ZoomChangedEvent -> org.vudroid.core.events.ZoomChangedEvent:
    float newZoom -> newZoom
    float oldZoom -> oldZoom
    void dispatchSafely(org.vudroid.core.events.ZoomListener) -> dispatchSafely
    void dispatchSafely(java.lang.Object) -> dispatchSafely
org.vudroid.core.events.ZoomListener -> org.vudroid.core.events.ZoomListener:
    void zoomChanged(float,float) -> zoomChanged
    void commitZoom() -> commitZoom
org.vudroid.core.events.ZoomListener$CommitZoomEvent -> org.vudroid.core.events.ZoomListener$CommitZoomEvent:
    void dispatchSafely(org.vudroid.core.events.ZoomListener) -> dispatchSafely
    void dispatchSafely(java.lang.Object) -> dispatchSafely
org.vudroid.core.models.CurrentPageModel -> org.vudroid.core.models.CurrentPageModel:
    int currentPageIndex -> currentPageIndex
    void setCurrentPageIndex(int) -> setCurrentPageIndex
org.vudroid.core.models.DecodingProgressModel -> org.vudroid.core.models.DecodingProgressModel:
    int currentlyDecoding -> currentlyDecoding
    void increase() -> increase
    void dispatchChanged() -> dispatchChanged
    void decrease() -> decrease
org.vudroid.core.models.ZoomModel -> org.vudroid.core.models.ZoomModel:
    float zoom -> zoom
    float INCREMENT_DELTA -> INCREMENT_DELTA
    boolean horizontalScrollEnabled -> horizontalScrollEnabled
    boolean isCommited -> isCommited
    void setZoom(float) -> setZoom
    void setZoomNoDispatch(float) -> setZoomNoDispatch
    float getZoom() -> getZoom
    void increaseZoom() -> increaseZoom
    void decreaseZoom() -> decreaseZoom
    void toggleZoomControls() -> toggleZoomControls
    void setHorizontalScrollEnabled(boolean) -> setHorizontalScrollEnabled
    boolean isHorizontalScrollEnabled() -> isHorizontalScrollEnabled
    boolean canDecrement() -> canDecrement
    void commit() -> commit
org.vudroid.core.multitouch.MultiTouchZoom -> org.vudroid.core.multitouch.MultiTouchZoom:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isResetLastPointAfterZoom() -> isResetLastPointAfterZoom
    void setResetLastPointAfterZoom(boolean) -> setResetLastPointAfterZoom
org.vudroid.core.multitouch.MultiTouchZoomImpl -> org.vudroid.core.multitouch.MultiTouchZoomImpl:
    org.vudroid.core.models.ZoomModel zoomModel -> zoomModel
    boolean resetLastPointAfterZoom -> resetLastPointAfterZoom
    float lastZoomDistance -> lastZoomDistance
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    float getZoomDistance(android.view.MotionEvent) -> getZoomDistance
    boolean isResetLastPointAfterZoom() -> isResetLastPointAfterZoom
    void setResetLastPointAfterZoom(boolean) -> setResetLastPointAfterZoom
org.vudroid.core.views.PageViewZoomControls -> org.vudroid.core.views.PageViewZoomControls:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void toggleZoomControls() -> toggleZoomControls
    void show() -> show
    void hide() -> hide
    void fade(int,float,float) -> fade
org.vudroid.core.views.ZoomRoll -> org.vudroid.core.views.ZoomRoll:
    android.graphics.Bitmap left -> left
    android.graphics.Bitmap right -> right
    android.graphics.Bitmap center -> center
    android.graphics.Bitmap serifs -> serifs
    android.view.VelocityTracker velocityTracker -> velocityTracker
    android.widget.Scroller scroller -> scroller
    float lastX -> lastX
    int MAX_VALUE -> MAX_VALUE
    org.vudroid.core.models.ZoomModel zoomModel -> zoomModel
    float MULTIPLIER -> MULTIPLIER
    void onMeasure(int,int) -> onMeasure
    void draw(android.graphics.Canvas) -> draw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    float getCurrentValue() -> getCurrentValue
    void setCurrentValue(float) -> setCurrentValue
org.vudroid.pdfdroid.codec.PdfContext -> org.vudroid.pdfdroid.codec.PdfContext:
    org.vudroid.core.codec.CodecDocument openDocument(java.lang.String) -> openDocument
    void setContentResolver(android.content.ContentResolver) -> setContentResolver
    void recycle() -> recycle
org.vudroid.pdfdroid.codec.PdfDocument -> org.vudroid.pdfdroid.codec.PdfDocument:
    long docHandle -> docHandle
    int FITZMEMORY -> FITZMEMORY
    org.vudroid.core.codec.CodecPage getPage(int) -> getPage
    int getPageCount() -> getPageCount
    org.vudroid.pdfdroid.codec.PdfDocument openDocument(java.lang.String,java.lang.String) -> openDocument
    long open(int,java.lang.String,java.lang.String) -> open
    void free(long) -> free
    int getPageCount(long) -> getPageCount
    void finalize() -> finalize
    void recycle() -> recycle
org.vudroid.pdfdroid.codec.PdfPage -> org.vudroid.pdfdroid.codec.PdfPage:
    long pageHandle -> pageHandle
    long docHandle -> docHandle
    boolean isDecoding() -> isDecoding
    void waitForDecode() -> waitForDecode
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap renderBitmap(int,int,android.graphics.RectF) -> renderBitmap
    org.vudroid.pdfdroid.codec.PdfPage createPage(long,int) -> createPage
    void finalize() -> finalize
    void recycle() -> recycle
    android.graphics.RectF getMediaBox() -> getMediaBox
    android.graphics.Bitmap render(android.graphics.Rect,android.graphics.Matrix) -> render
    void getMediaBox(long,float[]) -> getMediaBox
    void free(long) -> free
    long open(long,int) -> open
    void renderPage(long,long,int[],float[],int[]) -> renderPage
